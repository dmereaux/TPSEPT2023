<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0.1 (Python 3.10.7 on darwin)" generated="2025-02-24T16:50:49.587287" rpa="false" schemaversion="5">
<suite id="s1" name="Rest3" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3">
<suite id="s1-s1" name="chuckNorris" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3/chuckNorris.robot">
<kw name="Session Chuck" owner="chuckNorris" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:49.738382" level="INFO">Creating Session using : alias=Chuck, url=https://api.chucknorris.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>${SESSION_NAME}</arg>
<arg>${ENDPOINT}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-24T16:50:49.738099" elapsed="0.000522"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:49.737596" elapsed="0.001474"/>
</kw>
<test id="s1-s1-t1" name="afficher" line="8">
<kw name="Afficher contenu" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:49.878149" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random 
 path_url=/jokes/random 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:49.878311" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:49 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412249&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=KSmw4WR5Agm7UfmKjQnqF2XGt1WoSCAkhLCimgDbF38%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412249&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=KSmw4WR5Agm7UfmKjQnqF2XGt1WoSCAkhLCimgDbF38%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d119cef6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7892&amp;min_rtt=7259&amp;rtt_var=3174&amp;sent=5&amp;recv=6&amp;lost=0&amp;retrans=0&amp;sent_bytes=2845&amp;recv_bytes=780&amp;delivery_rate=557101&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=108&amp;x=0"'} 
 body={"categories":[],"created_at":"2020-01-05 13:42:26.447675","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"VqO8upngR-e8dzcdEegGFA","updated_at":"2020-01-05 13:42:26.447675","url":"https://api.chucknorris.io/jokes/VqO8upngR-e8dzcdEegGFA","value":"Chuck Norris is imortal because death is hidding from him."} 
 </msg>
<msg time="2025-02-24T16:50:49.878513" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:49.739762" elapsed="0.138784"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.json()}[value]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:49.879367" elapsed="0.000655"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-02-24T16:50:49.880853" level="INFO">${value} = Chuck Norris is imortal because death is hidding from him.</msg>
<var>${value}</var>
<arg>${resp.json()}</arg>
<arg>value</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-02-24T16:50:49.880249" elapsed="0.000642"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:49.881400" elapsed="0.000170"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2025-02-24T16:50:49.910482" level="INFO">${value} = ['Chuck Norris is imortal because death is hidding from him.']</msg>
<var>${value}</var>
<arg>${resp.json()}</arg>
<arg>value</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2025-02-24T16:50:49.881742" elapsed="0.028779"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:49.911056" elapsed="0.000196"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:49.739550" elapsed="0.171846"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:49.739206" elapsed="0.172424"/>
</test>
<test id="s1-s1-t2" name="Test Blague au hasard" line="11">
<kw name="Blague au hasard" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:49.954741" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random 
 path_url=/jokes/random 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:49.954815" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d127ddd6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7716&amp;min_rtt=6419&amp;rtt_var=2733&amp;sent=8&amp;recv=8&amp;lost=0&amp;retrans=0&amp;sent_bytes=4695&amp;recv_bytes=963&amp;delivery_rate=623689&amp;cwnd=255&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=185&amp;x=0"'} 
 body={"categories":[],"created_at":"2020-01-05 13:42:23.484083","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"_a7lq838Qy2krEEyx2J29g","updated_at":"2020-01-05 13:42:23.484083","url":"https://api.chucknorris.io/jokes/_a7lq838Qy2krEEyx2J29g","value":"Once Chuck Norris pissed off anger, and that is how happiness was invented."} 
 </msg>
<msg time="2025-02-24T16:50:49.954925" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:49.914018" elapsed="0.040932"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-02-24T16:50:49.955993" level="INFO">${toto} = Once Chuck Norris pissed off anger, and that is how happiness was invented.</msg>
<var>${toto}</var>
<arg>${resp.json()}</arg>
<arg>value</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-02-24T16:50:49.955483" elapsed="0.000533"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${toto}</arg>
<arg>${resp.json()}[value]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:49.956406" elapsed="0.000451"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2025-02-24T16:50:49.972767" level="INFO">${titi} = ['Once Chuck Norris pissed off anger, and that is how happiness was invented.']</msg>
<var>${titi}</var>
<arg>${resp.json()}</arg>
<arg>$.value</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2025-02-24T16:50:49.957061" elapsed="0.015749"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${titi}[0]</arg>
<arg>${resp.json()}[value]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:49.973253" elapsed="0.000467"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<status status="PASS" start="2025-02-24T16:50:49.973850" elapsed="0.000062"/>
</return>
<msg time="2025-02-24T16:50:49.974339" level="INFO">${blague} = Once Chuck Norris pissed off anger, and that is how happiness was invented.</msg>
<var>${blague}</var>
<status status="PASS" start="2025-02-24T16:50:49.913797" elapsed="0.060567"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:49.974769" elapsed="0.000185"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:49.913454" elapsed="0.061694"/>
</test>
<test id="s1-s1-t3" name="test Blague animal" line="15">
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:49.977751" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:49.977493" elapsed="0.000283"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.018969" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.019049" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d12de486ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7477&amp;min_rtt=5751&amp;rtt_var=2527&amp;sent=10&amp;recv=10&amp;lost=0&amp;retrans=0&amp;sent_bytes=6108&amp;recv_bytes=1162&amp;delivery_rate=623689&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=249&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"30lywvzfsowzxkiiy2voyw","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/30lywvzfsowzxkiiy2voyw","value":"Chuck Norris does not own a house. He walks into random houses and people move."} 
 </msg>
<msg time="2025-02-24T16:50:50.019170" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:49.978131" elapsed="0.041063"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.019655" elapsed="0.000066"/>
</return>
<msg time="2025-02-24T16:50:50.020478" level="INFO">${blague} = Chuck Norris does not own a house. He walks into random houses and people move.</msg>
<msg time="2025-02-24T16:50:50.020518" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>animal</arg>
<status status="PASS" start="2025-02-24T16:50:49.977262" elapsed="0.043276"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>animal</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.020984" elapsed="0.000200"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.021379" elapsed="0.000166"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:49.976943" elapsed="0.044790"/>
</test>
<test id="s1-s1-t4" name="Tester une blague de chaque catÃ©gorie" line="20">
<kw name="recupÃ©rer la liste des catÃ©gories" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.065217" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/categories 
 path_url=/jokes/categories 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.065293" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/categories 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d132e956ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7262&amp;min_rtt=5700&amp;rtt_var=2326&amp;sent=13&amp;recv=12&amp;lost=0&amp;retrans=0&amp;sent_bytes=7494&amp;recv_bytes=1349&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=296&amp;x=0"'} 
 body=["animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel"] 
 </msg>
<msg time="2025-02-24T16:50:50.065415" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${CATEGORIES}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.024152" elapsed="0.041288"/>
</kw>
<return>
<value>${resp.json()}</value>
<status status="PASS" start="2025-02-24T16:50:50.065908" elapsed="0.000064"/>
</return>
<msg time="2025-02-24T16:50:50.066456" level="INFO">@{liste_cat} = [ animal | career | celebrity | dev | explicit | fashion | food | history | money | movie | music | political | religion | science | sport | travel ]</msg>
<var>@{liste_cat}</var>
<status status="PASS" start="2025-02-24T16:50:50.023943" elapsed="0.042575"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.067714" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.067503" elapsed="0.000234"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.109446" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.109526" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d136ed56ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7442&amp;min_rtt=5700&amp;rtt_var=2104&amp;sent=15&amp;recv=14&amp;lost=0&amp;retrans=0&amp;sent_bytes=8802&amp;recv_bytes=1548&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=340&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"xwjic1sws_yohsfefndaiw","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/xwjic1sws_yohsfefndaiw","value":"Chuck Norris once kicked a horse in the chin. Its decendants are known today as Giraffes."} 
 </msg>
<msg time="2025-02-24T16:50:50.109643" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.068100" elapsed="0.041568"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.110125" elapsed="0.000065"/>
</return>
<msg time="2025-02-24T16:50:50.110955" level="INFO">${blague} = Chuck Norris once kicked a horse in the chin. Its decendants are known today as Giraffes.</msg>
<msg time="2025-02-24T16:50:50.110996" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.067238" elapsed="0.043779"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.111423" elapsed="0.000184"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.111774" elapsed="0.000140"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.112071" elapsed="0.000171"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.112396" elapsed="0.000159"/>
</kw>
<var name="${elt}">animal</var>
<status status="PASS" start="2025-02-24T16:50:50.067079" elapsed="0.045587"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.113415" level="INFO">&amp;{dict} = { category=career }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.113214" elapsed="0.000225"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.155441" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=career 
 path_url=/jokes/random?category=career 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.155526" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=career 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d13bf296ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7290&amp;min_rtt=5700&amp;rtt_var=1881&amp;sent=18&amp;recv=16&amp;lost=0&amp;retrans=0&amp;sent_bytes=10197&amp;recv_bytes=1747&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=386&amp;x=0"'} 
 body={"categories":["career"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"zk14uc6xr82d7ig9qhaymg","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/zk14uc6xr82d7ig9qhaymg","value":"Chuck Norris is actually the front man for Apple. He let's Steve Jobs run the show when he's on a mission. Chuck Norris is always on a mission."} 
 </msg>
<msg time="2025-02-24T16:50:50.155651" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.113803" elapsed="0.041873"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.156144" elapsed="0.000064"/>
</return>
<msg time="2025-02-24T16:50:50.157010" level="INFO">${blague} = Chuck Norris is actually the front man for Apple. He let's Steve Jobs run the show when he's on a mission. Chuck Norris is always on a mission.</msg>
<msg time="2025-02-24T16:50:50.157050" level="INFO">${cat} = ['career']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.112971" elapsed="0.044099"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.157485" elapsed="0.000234"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.157887" elapsed="0.000141"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.158186" elapsed="0.000174"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.158517" elapsed="0.000329"/>
</kw>
<var name="${elt}">career</var>
<status status="PASS" start="2025-02-24T16:50:50.112840" elapsed="0.046121"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.159701" level="INFO">&amp;{dict} = { category=celebrity }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.159501" elapsed="0.000223"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.200890" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 path_url=/jokes/random?category=celebrity 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.200989" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d140f726ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7154&amp;min_rtt=5700&amp;rtt_var=1684&amp;sent=21&amp;recv=18&amp;lost=0&amp;retrans=0&amp;sent_bytes=11640&amp;recv_bytes=1949&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=431&amp;x=0"'} 
 body={"categories":["celebrity"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"hxdulftcswqglp1-qe3nfw","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/hxdulftcswqglp1-qe3nfw","value":"Wilt Chamberlain claims to have slept with more than 20,000 women in his lifetime. Chuck Norris calls this \"a slow Tuesday.\""} 
 </msg>
<msg time="2025-02-24T16:50:50.201139" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.160094" elapsed="0.041071"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.201757" elapsed="0.000102"/>
</return>
<msg time="2025-02-24T16:50:50.202680" level="INFO">${blague} = Wilt Chamberlain claims to have slept with more than 20,000 women in his lifetime. Chuck Norris calls this "a slow Tuesday."</msg>
<msg time="2025-02-24T16:50:50.202721" level="INFO">${cat} = ['celebrity']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.159263" elapsed="0.043478"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.203301" elapsed="0.000215"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.203701" elapsed="0.000148"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.204012" elapsed="0.000174"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.204345" elapsed="0.000160"/>
</kw>
<var name="${elt}">celebrity</var>
<status status="PASS" start="2025-02-24T16:50:50.159131" elapsed="0.045488"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.205404" level="INFO">&amp;{dict} = { category=dev }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.205192" elapsed="0.000236"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.250989" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=dev 
 path_url=/jokes/random?category=dev 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.251077" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=dev 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d144fab6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7064&amp;min_rtt=5700&amp;rtt_var=1442&amp;sent=23&amp;recv=20&amp;lost=0&amp;retrans=0&amp;sent_bytes=13093&amp;recv_bytes=2145&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=480&amp;x=0"'} 
 body={"categories":["dev"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"lkor-8baqmcjoftr-am_qw","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/lkor-8baqmcjoftr-am_qw","value":"Project managers never ask Chuck Norris for estimations... ever."} 
 </msg>
<msg time="2025-02-24T16:50:50.251204" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.205806" elapsed="0.045426"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.251816" elapsed="0.000073"/>
</return>
<msg time="2025-02-24T16:50:50.252795" level="INFO">${blague} = Project managers never ask Chuck Norris for estimations... ever.</msg>
<msg time="2025-02-24T16:50:50.252839" level="INFO">${cat} = ['dev']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.204937" elapsed="0.047924"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.253304" elapsed="0.000194"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.253682" elapsed="0.000159"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.254020" elapsed="0.000193"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.254377" elapsed="0.000156"/>
</kw>
<var name="${elt}">dev</var>
<status status="PASS" start="2025-02-24T16:50:50.204797" elapsed="0.049849"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.255569" level="INFO">&amp;{dict} = { category=explicit }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.255193" elapsed="0.000401"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.297479" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=explicit 
 path_url=/jokes/random?category=explicit 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.297571" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=explicit 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1498186ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7179&amp;min_rtt=5700&amp;rtt_var=1310&amp;sent=25&amp;recv=22&amp;lost=0&amp;retrans=0&amp;sent_bytes=14468&amp;recv_bytes=2346&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=528&amp;x=0"'} 
 body={"categories":["explicit"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"l5710AnrTqCoNkfU8zY7PQ","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/l5710AnrTqCoNkfU8zY7PQ","value":"Chuck Norris' anal sphincter has fangs."} 
 </msg>
<msg time="2025-02-24T16:50:50.297714" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.255956" elapsed="0.041786"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.298239" elapsed="0.000071"/>
</return>
<msg time="2025-02-24T16:50:50.299182" level="INFO">${blague} = Chuck Norris' anal sphincter has fangs.</msg>
<msg time="2025-02-24T16:50:50.299229" level="INFO">${cat} = ['explicit']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.254946" elapsed="0.044307"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.299722" elapsed="0.000202"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.300112" elapsed="0.000161"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.300448" elapsed="0.000195"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.300818" elapsed="0.000180"/>
</kw>
<var name="${elt}">explicit</var>
<status status="PASS" start="2025-02-24T16:50:50.254815" elapsed="0.046313"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.301975" level="INFO">&amp;{dict} = { category=fashion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.301742" elapsed="0.000259"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.341763" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=fashion 
 path_url=/jokes/random?category=fashion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.341882" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=fashion 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d14e8596ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7072&amp;min_rtt=5700&amp;rtt_var=1195&amp;sent=27&amp;recv=24&amp;lost=0&amp;retrans=0&amp;sent_bytes=15839&amp;recv_bytes=2546&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=572&amp;x=0"'} 
 body={"categories":["fashion"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0wdewlp2tz-mt_upesvrjw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0wdewlp2tz-mt_upesvrjw","value":"Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris."} 
 </msg>
<msg time="2025-02-24T16:50:50.342096" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.302418" elapsed="0.039712"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.342726" elapsed="0.000080"/>
</return>
<msg time="2025-02-24T16:50:50.343808" level="INFO">${blague} = Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris.</msg>
<msg time="2025-02-24T16:50:50.343862" level="INFO">${cat} = ['fashion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.301466" elapsed="0.042424"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.344423" elapsed="0.000229"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.344918" elapsed="0.000182"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.345291" elapsed="0.000194"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.345664" elapsed="0.000182"/>
</kw>
<var name="${elt}">fashion</var>
<status status="PASS" start="2025-02-24T16:50:50.301318" elapsed="0.044653"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.346828" level="INFO">&amp;{dict} = { category=food }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.346598" elapsed="0.000256"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.387543" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=food 
 path_url=/jokes/random?category=food 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.387648" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=food 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d15289b6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6993&amp;min_rtt=5700&amp;rtt_var=1055&amp;sent=30&amp;recv=26&amp;lost=0&amp;retrans=0&amp;sent_bytes=17252&amp;recv_bytes=2743&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=618&amp;x=0"'} 
 body={"categories":["food"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"rmippwentlkoza8wlv_vjg","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/rmippwentlkoza8wlv_vjg","value":"Some people like to eat frogs' legs. Chuck Norris likes to eat lizard legs. Hence, snakes."} 
 </msg>
<msg time="2025-02-24T16:50:50.387786" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.347251" elapsed="0.040561"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.388381" elapsed="0.000078"/>
</return>
<msg time="2025-02-24T16:50:50.389272" level="INFO">${blague} = Some people like to eat frogs' legs. Chuck Norris likes to eat lizard legs. Hence, snakes.</msg>
<msg time="2025-02-24T16:50:50.389317" level="INFO">${cat} = ['food']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.346322" elapsed="0.043015"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.389796" elapsed="0.000438"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.390425" elapsed="0.000148"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.390736" elapsed="0.000199"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.391111" elapsed="0.000179"/>
</kw>
<var name="${elt}">food</var>
<status status="PASS" start="2025-02-24T16:50:50.346171" elapsed="0.045230"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.392218" level="INFO">&amp;{dict} = { category=history }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.392013" elapsed="0.000229"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.433043" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=history 
 path_url=/jokes/random?category=history 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.433136" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=history 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1578ee6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6884&amp;min_rtt=5700&amp;rtt_var=1009&amp;sent=33&amp;recv=28&amp;lost=0&amp;retrans=0&amp;sent_bytes=18642&amp;recv_bytes=2943&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=664&amp;x=0"'} 
 body={"categories":["history"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"t_wyddbstys8ubos8oni4q","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/t_wyddbstys8ubos8oni4q","value":"Chuck Norris originally wrote the first dictionary. The definition for each word is as follows - A swift roundhouse kick to the face."} 
 </msg>
<msg time="2025-02-24T16:50:50.433282" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.392609" elapsed="0.040699"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.433835" elapsed="0.000075"/>
</return>
<msg time="2025-02-24T16:50:50.434726" level="INFO">${blague} = Chuck Norris originally wrote the first dictionary. The definition for each word is as follows - A swift roundhouse kick to the face.</msg>
<msg time="2025-02-24T16:50:50.434770" level="INFO">${cat} = ['history']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.391765" elapsed="0.043025"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.435230" elapsed="0.000196"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.435615" elapsed="0.000145"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.435914" elapsed="0.000176"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.436246" elapsed="0.000158"/>
</kw>
<var name="${elt}">history</var>
<status status="PASS" start="2025-02-24T16:50:50.391579" elapsed="0.044937"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.437280" level="INFO">&amp;{dict} = { category=money }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.437074" elapsed="0.000229"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.479086" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=money 
 path_url=/jokes/random?category=money 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.479168" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=money 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d15b9356ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6782&amp;min_rtt=5700&amp;rtt_var=960&amp;sent=36&amp;recv=30&amp;lost=0&amp;retrans=0&amp;sent_bytes=20087&amp;recv_bytes=3141&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=710&amp;x=0"'} 
 body={"categories":["money"],"created_at":"2020-01-05 13:42:19.897976","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"kROzwt6jTBab78dlTsCtVg","updated_at":"2020-05-22 06:02:41.792421","url":"https://api.chucknorris.io/jokes/kROzwt6jTBab78dlTsCtVg","value":"Chuck Norris donates all of his money to the M.Y. Wallet foundation, and you better too, or else."} 
 </msg>
<msg time="2025-02-24T16:50:50.479286" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.437663" elapsed="0.041647"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.479820" elapsed="0.000064"/>
</return>
<msg time="2025-02-24T16:50:50.480650" level="INFO">${blague} = Chuck Norris donates all of his money to the M.Y. Wallet foundation, and you better too, or else.</msg>
<msg time="2025-02-24T16:50:50.480689" level="INFO">${cat} = ['money']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.436823" elapsed="0.043886"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.481121" elapsed="0.000184"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.481511" elapsed="0.000140"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.481805" elapsed="0.000169"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.482131" elapsed="0.000160"/>
</kw>
<var name="${elt}">money</var>
<status status="PASS" start="2025-02-24T16:50:50.436687" elapsed="0.045714"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.483343" level="INFO">&amp;{dict} = { category=movie }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.483138" elapsed="0.000228"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.524088" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=movie 
 path_url=/jokes/random?category=movie 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.524167" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=movie 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1609786ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6675&amp;min_rtt=5700&amp;rtt_var=934&amp;sent=39&amp;recv=32&amp;lost=0&amp;retrans=0&amp;sent_bytes=21507&amp;recv_bytes=3339&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=755&amp;x=0"'} 
 body={"categories":["movie"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"zc2g3me0rnqbfankmo99hq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/zc2g3me0rnqbfankmo99hq","value":"MacGyver immediately tried to make a bomb out of some Q-Tips and Gatorade, but Chuck Norris roundhouse-kicked him in the solar plexus. MacGyver promptly threw up his own heart."} 
 </msg>
<msg time="2025-02-24T16:50:50.524298" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.483728" elapsed="0.040596"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.524781" elapsed="0.000063"/>
</return>
<msg time="2025-02-24T16:50:50.525607" level="INFO">${blague} = MacGyver immediately tried to make a bomb out of some Q-Tips and Gatorade, but Chuck Norris roundhouse-kicked him in the solar plexus. MacGyver promptly threw up his own heart.</msg>
<msg time="2025-02-24T16:50:50.525648" level="INFO">${cat} = ['movie']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.482714" elapsed="0.042954"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.526059" elapsed="0.000175"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.526399" elapsed="0.000139"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.526692" elapsed="0.000167"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.527016" elapsed="0.000161"/>
</kw>
<var name="${elt}">movie</var>
<status status="PASS" start="2025-02-24T16:50:50.482577" elapsed="0.044723"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.528047" level="INFO">&amp;{dict} = { category=music }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.527842" elapsed="0.000227"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.567688" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=music 
 path_url=/jokes/random?category=music 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.567767" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=music 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1649b56ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6656&amp;min_rtt=5700&amp;rtt_var=738&amp;sent=42&amp;recv=34&amp;lost=0&amp;retrans=0&amp;sent_bytes=22980&amp;recv_bytes=3537&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=798&amp;x=0"'} 
 body={"categories":["music"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"qxsbf-jeq_act5a4bbwavq","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/qxsbf-jeq_act5a4bbwavq","value":"The Drummer for Def Leppard's only got one arm. Chuck Norris needed a back scratcher."} 
 </msg>
<msg time="2025-02-24T16:50:50.567886" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.528424" elapsed="0.039486"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.568396" elapsed="0.000069"/>
</return>
<msg time="2025-02-24T16:50:50.569241" level="INFO">${blague} = The Drummer for Def Leppard's only got one arm. Chuck Norris needed a back scratcher.</msg>
<msg time="2025-02-24T16:50:50.569279" level="INFO">${cat} = ['music']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.527600" elapsed="0.041699"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.569687" elapsed="0.000174"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.570022" elapsed="0.000133"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.570310" elapsed="0.000165"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.570632" elapsed="0.000158"/>
</kw>
<var name="${elt}">music</var>
<status status="PASS" start="2025-02-24T16:50:50.527468" elapsed="0.043430"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.571660" level="INFO">&amp;{dict} = { category=political }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.571451" elapsed="0.000233"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.613423" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=political 
 path_url=/jokes/random?category=political 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.613530" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=political 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1699f26ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6639&amp;min_rtt=5700&amp;rtt_var=588&amp;sent=45&amp;recv=36&amp;lost=0&amp;retrans=0&amp;sent_bytes=24373&amp;recv_bytes=3739&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=844&amp;x=0"'} 
 body={"categories":["political"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"Q4QOV09yQiuoQzEPOtybqg","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/Q4QOV09yQiuoQzEPOtybqg","value":"When Barack Obama said \"Yes we can,\" he actually was referring to Chuck Norris"} 
 </msg>
<msg time="2025-02-24T16:50:50.613691" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.572029" elapsed="0.041693"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.614350" elapsed="0.000081"/>
</return>
<msg time="2025-02-24T16:50:50.615358" level="INFO">${blague} = When Barack Obama said "Yes we can," he actually was referring to Chuck Norris</msg>
<msg time="2025-02-24T16:50:50.615402" level="INFO">${cat} = ['political']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.571201" elapsed="0.044225"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.615938" elapsed="0.000210"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.616332" elapsed="0.000155"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.616660" elapsed="0.000195"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.617034" elapsed="0.000193"/>
</kw>
<var name="${elt}">political</var>
<status status="PASS" start="2025-02-24T16:50:50.571067" elapsed="0.046284"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.618257" level="INFO">&amp;{dict} = { category=religion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.618010" elapsed="0.000273"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.661360" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=religion 
 path_url=/jokes/random?category=religion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.661455" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=religion 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d16da4b6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6531&amp;min_rtt=5700&amp;rtt_var=597&amp;sent=48&amp;recv=38&amp;lost=0&amp;retrans=0&amp;sent_bytes=25769&amp;recv_bytes=3940&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=892&amp;x=0"'} 
 body={"categories":["religion"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"txqmxydmqpinjsxkcyqizw","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/txqmxydmqpinjsxkcyqizw","value":"Noah was the only man notified before Chuck Norris relieved himself in the Atlantic Ocean."} 
 </msg>
<msg time="2025-02-24T16:50:50.661635" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.618696" elapsed="0.042969"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.662171" elapsed="0.000070"/>
</return>
<msg time="2025-02-24T16:50:50.663104" level="INFO">${blague} = Noah was the only man notified before Chuck Norris relieved himself in the Atlantic Ocean.</msg>
<msg time="2025-02-24T16:50:50.663148" level="INFO">${cat} = ['religion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.617719" elapsed="0.045452"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.663632" elapsed="0.000197"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.664017" elapsed="0.000161"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.664357" elapsed="0.000197"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.664727" elapsed="0.000178"/>
</kw>
<var name="${elt}">religion</var>
<status status="PASS" start="2025-02-24T16:50:50.617559" elapsed="0.047470"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.665866" level="INFO">&amp;{dict} = { category=science }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.665639" elapsed="0.000254"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.709079" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=science 
 path_url=/jokes/random?category=science 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.709176" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=science 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d172aa26ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6489&amp;min_rtt=5700&amp;rtt_var=531&amp;sent=51&amp;recv=40&amp;lost=0&amp;retrans=0&amp;sent_bytes=27167&amp;recv_bytes=4140&amp;delivery_rate=702815&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=938&amp;x=0"'} 
 body={"categories":["science"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"ymizqu9lrcenixhy-nazka","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/ymizqu9lrcenixhy-nazka","value":"When J. Robert Oppenheimer said \"I am become death, the destroyer Of worlds\", He was not referring to the atomic bomb. He was referring to the Chuck Norris halloween costume he was wearing."} 
 </msg>
<msg time="2025-02-24T16:50:50.709321" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.666285" elapsed="0.043068"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.709926" elapsed="0.000077"/>
</return>
<msg time="2025-02-24T16:50:50.711013" level="INFO">${blague} = When J. Robert Oppenheimer said "I am become death, the destroyer Of worlds", He was not referring to the atomic bomb. He was referring to the Chuck Norris halloween costume he was wearing.</msg>
<msg time="2025-02-24T16:50:50.711067" level="INFO">${cat} = ['science']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.665363" elapsed="0.045730"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.711604" elapsed="0.000229"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.712048" elapsed="0.000186"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.712447" elapsed="0.000465"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.713128" elapsed="0.000209"/>
</kw>
<var name="${elt}">science</var>
<status status="PASS" start="2025-02-24T16:50:50.665216" elapsed="0.048309"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.714505" level="INFO">&amp;{dict} = { category=sport }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.714242" elapsed="0.000295"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.760587" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=sport 
 path_url=/jokes/random?category=sport 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.760714" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=sport 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d177b236ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6602&amp;min_rtt=5700&amp;rtt_var=623&amp;sent=55&amp;recv=42&amp;lost=0&amp;retrans=0&amp;sent_bytes=28643&amp;recv_bytes=4338&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=991&amp;x=0"'} 
 body={"categories":["sport"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"17or3xgerjg7gsv9pcazwa","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/17or3xgerjg7gsv9pcazwa","value":"Chuck Norris once participated in the running of the bulls. He walked."} 
 </msg>
<msg time="2025-02-24T16:50:50.760906" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.715005" elapsed="0.045955"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.761663" elapsed="0.000109"/>
</return>
<msg time="2025-02-24T16:50:50.763042" level="INFO">${blague} = Chuck Norris once participated in the running of the bulls. He walked.</msg>
<msg time="2025-02-24T16:50:50.763107" level="INFO">${cat} = ['sport']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.713923" elapsed="0.049215"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.763845" elapsed="0.000290"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.764407" elapsed="0.000224"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.764883" elapsed="0.000255"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.765355" elapsed="0.000221"/>
</kw>
<var name="${elt}">sport</var>
<status status="PASS" start="2025-02-24T16:50:50.713749" elapsed="0.051977"/>
</iter>
<iter>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.766761" level="INFO">&amp;{dict} = { category=travel }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.766473" elapsed="0.000319"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.817405" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=travel 
 path_url=/jokes/random?category=travel 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.817499" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=travel 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d17cb926ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6562&amp;min_rtt=5700&amp;rtt_var=547&amp;sent=58&amp;recv=44&amp;lost=0&amp;retrans=0&amp;sent_bytes=30025&amp;recv_bytes=4537&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1048&amp;x=0"'} 
 body={"categories":["travel"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"9rqqcar_s5mqpujm0yu5za","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/9rqqcar_s5mqpujm0yu5za","value":"For Spring Break '05, Chuck Norris drove to Madagascar, riding a chariot pulled by two electric eels."} 
 </msg>
<msg time="2025-02-24T16:50:50.817630" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.767297" elapsed="0.050359"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.818163" elapsed="0.000068"/>
</return>
<msg time="2025-02-24T16:50:50.819010" level="INFO">${blague} = For Spring Break '05, Chuck Norris drove to Madagascar, riding a chariot pulled by two electric eels.</msg>
<msg time="2025-02-24T16:50:50.819051" level="INFO">${cat} = ['travel']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.766142" elapsed="0.052929"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.819498" elapsed="0.000191"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.819890" elapsed="0.000144"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-24T16:50:50.820190" elapsed="0.000169"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-24T16:50:50.820520" elapsed="0.000166"/>
</kw>
<var name="${elt}">travel</var>
<status status="PASS" start="2025-02-24T16:50:50.765958" elapsed="0.054841"/>
</iter>
<var>${elt}</var>
<value>@{liste_cat}</value>
<status status="PASS" start="2025-02-24T16:50:50.066913" elapsed="0.754000"/>
</for>
<status status="PASS" start="2025-02-24T16:50:50.023604" elapsed="0.797511"/>
</test>
<test id="s1-s1-t5" name="afficher la liste des catÃ©gories" line="30">
<kw name="recupÃ©rer la liste des catÃ©gories" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.872570" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/categories 
 path_url=/jokes/categories 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.872658" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/categories 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d182c076ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6512&amp;min_rtt=5700&amp;rtt_var=509&amp;sent=61&amp;recv=46&amp;lost=0&amp;retrans=0&amp;sent_bytes=31432&amp;recv_bytes=4724&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1103&amp;x=0"'} 
 body=["animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel"] 
 </msg>
<msg time="2025-02-24T16:50:50.872790" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${CATEGORIES}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.823935" elapsed="0.048881"/>
</kw>
<return>
<value>${resp.json()}</value>
<status status="PASS" start="2025-02-24T16:50:50.873319" elapsed="0.000070"/>
</return>
<msg time="2025-02-24T16:50:50.873884" level="INFO">@{categories} = [ animal | career | celebrity | dev | explicit | fashion | food | history | money | movie | music | political | religion | science | sport | travel ]</msg>
<var>@{categories}</var>
<status status="PASS" start="2025-02-24T16:50:50.823514" elapsed="0.050395"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.874580" elapsed="0.000173"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.875443" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.875225" elapsed="0.000242"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.926739" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.926826" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412250&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=mDCkBO4jWYiqj4w%2B89t4wEg7Ee7zQlMdU3PeRrzHr5w%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d187c6c6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6438&amp;min_rtt=5700&amp;rtt_var=512&amp;sent=64&amp;recv=48&amp;lost=0&amp;retrans=0&amp;sent_bytes=32709&amp;recv_bytes=4923&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1157&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"o-vfxwx6rgecuo_f5cecpq","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/o-vfxwx6rgecuo_f5cecpq","value":"They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them."} 
 </msg>
<msg time="2025-02-24T16:50:50.926954" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.875831" elapsed="0.051151"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.927473" elapsed="0.000069"/>
</return>
<msg time="2025-02-24T16:50:50.928300" level="INFO">${blague} = They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them.</msg>
<msg time="2025-02-24T16:50:50.928342" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.874967" elapsed="0.053396"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.928802" elapsed="0.000214"/>
</kw>
<var name="${elt}">animal</var>
<status status="PASS" start="2025-02-24T16:50:50.874458" elapsed="0.054667"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.929390" elapsed="0.000141"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.930221" level="INFO">&amp;{dict} = { category=career }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.929980" elapsed="0.000264"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:50.978312" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=career 
 path_url=/jokes/random?category=career 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:50.978401" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=career 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d18dcda6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6408&amp;min_rtt=5700&amp;rtt_var=445&amp;sent=68&amp;recv=50&amp;lost=0&amp;retrans=0&amp;sent_bytes=34106&amp;recv_bytes=5122&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1209&amp;x=0"'} 
 body={"categories":["career"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"3y7vnqsvtvuvvmhtuqjuma","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/3y7vnqsvtvuvvmhtuqjuma","value":"Chuck Norris' first job was as a paperboy. There were no survivors."} 
 </msg>
<msg time="2025-02-24T16:50:50.978528" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.930609" elapsed="0.047944"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:50.979081" elapsed="0.000072"/>
</return>
<msg time="2025-02-24T16:50:50.979920" level="INFO">${blague} = Chuck Norris' first job was as a paperboy. There were no survivors.</msg>
<msg time="2025-02-24T16:50:50.979961" level="INFO">${cat} = ['career']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.929733" elapsed="0.050249"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.980412" elapsed="0.000214"/>
</kw>
<var name="${elt}">career</var>
<status status="PASS" start="2025-02-24T16:50:50.929292" elapsed="0.051446"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:50.980997" elapsed="0.000144"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:50.981986" level="INFO">&amp;{dict} = { category=celebrity }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:50.981777" elapsed="0.000232"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.024783" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 path_url=/jokes/random?category=celebrity 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.024869" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d192d356ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6377&amp;min_rtt=5700&amp;rtt_var=396&amp;sent=71&amp;recv=52&amp;lost=0&amp;retrans=0&amp;sent_bytes=35502&amp;recv_bytes=5324&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1255&amp;x=0"'} 
 body={"categories":["celebrity"],"created_at":"2020-01-05 13:42:28.420821","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"H_kE59K4SDi-lgW7s2E7Yw","updated_at":"2020-01-05 13:42:28.420821","url":"https://api.chucknorris.io/jokes/H_kE59K4SDi-lgW7s2E7Yw","value":"The reason Charlie Sheen is winning, is because Chuck Norris isn't playing."} 
 </msg>
<msg time="2025-02-24T16:50:51.025003" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:50.982366" elapsed="0.042662"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.025546" elapsed="0.000072"/>
</return>
<msg time="2025-02-24T16:50:51.026369" level="INFO">${blague} = The reason Charlie Sheen is winning, is because Chuck Norris isn't playing.</msg>
<msg time="2025-02-24T16:50:51.026408" level="INFO">${cat} = ['celebrity']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:50.981341" elapsed="0.045087"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.026858" elapsed="0.000213"/>
</kw>
<var name="${elt}">celebrity</var>
<status status="PASS" start="2025-02-24T16:50:50.980901" elapsed="0.046346"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.027572" elapsed="0.000168"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.028433" level="INFO">&amp;{dict} = { category=dev }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.028218" elapsed="0.000239"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.070335" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=dev 
 path_url=/jokes/random?category=dev 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.070426" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=dev 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d196d816ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6341&amp;min_rtt=5700&amp;rtt_var=368&amp;sent=74&amp;recv=54&amp;lost=0&amp;retrans=0&amp;sent_bytes=36911&amp;recv_bytes=5520&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1301&amp;x=0"'} 
 body={"categories":["dev"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0gno3wclrfohs9a_mlx7rw","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/0gno3wclrfohs9a_mlx7rw","value":"No one has ever spoken during review of Chuck Norris' code and lived to tell about it."} 
 </msg>
<msg time="2025-02-24T16:50:51.070557" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.028898" elapsed="0.041684"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.071089" elapsed="0.000069"/>
</return>
<msg time="2025-02-24T16:50:51.071922" level="INFO">${blague} = No one has ever spoken during review of Chuck Norris' code and lived to tell about it.</msg>
<msg time="2025-02-24T16:50:51.071964" level="INFO">${cat} = ['dev']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.027960" elapsed="0.044025"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.072407" elapsed="0.000218"/>
</kw>
<var name="${elt}">dev</var>
<status status="PASS" start="2025-02-24T16:50:51.027459" elapsed="0.045278"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.072998" elapsed="0.000143"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.073804" level="INFO">&amp;{dict} = { category=explicit }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.073594" elapsed="0.000233"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.117580" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=explicit 
 path_url=/jokes/random?category=explicit 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.117663" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=explicit 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d19bdcd6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6305&amp;min_rtt=5700&amp;rtt_var=349&amp;sent=76&amp;recv=56&amp;lost=0&amp;retrans=0&amp;sent_bytes=38345&amp;recv_bytes=5721&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1348&amp;x=0"'} 
 body={"categories":["explicit"],"created_at":"2020-01-05 13:42:23.484083","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"st3kx2PLTcu6o4oUUpzABA","updated_at":"2020-01-05 13:42:23.484083","url":"https://api.chucknorris.io/jokes/st3kx2PLTcu6o4oUUpzABA","value":"Who are the gay dudes talking shit about Chuck Norris?"} 
 </msg>
<msg time="2025-02-24T16:50:51.117780" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.074192" elapsed="0.043613"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.118276" elapsed="0.000063"/>
</return>
<msg time="2025-02-24T16:50:51.119103" level="INFO">${blague} = Who are the gay dudes talking shit about Chuck Norris?</msg>
<msg time="2025-02-24T16:50:51.119144" level="INFO">${cat} = ['explicit']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.073343" elapsed="0.045822"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.119583" elapsed="0.000208"/>
</kw>
<var name="${elt}">explicit</var>
<status status="PASS" start="2025-02-24T16:50:51.072900" elapsed="0.047004"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.120159" elapsed="0.000141"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.121147" level="INFO">&amp;{dict} = { category=fashion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.120936" elapsed="0.000234"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.162417" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=fashion 
 path_url=/jokes/random?category=fashion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.162542" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=fashion 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1a0e1f6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6255&amp;min_rtt=5643&amp;rtt_var=350&amp;sent=79&amp;recv=58&amp;lost=0&amp;retrans=0&amp;sent_bytes=39737&amp;recv_bytes=5921&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1393&amp;x=0"'} 
 body={"categories":["fashion"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0wdewlp2tz-mt_upesvrjw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0wdewlp2tz-mt_upesvrjw","value":"Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris."} 
 </msg>
<msg time="2025-02-24T16:50:51.162683" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.121523" elapsed="0.041187"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.163197" elapsed="0.000067"/>
</return>
<msg time="2025-02-24T16:50:51.164019" level="INFO">${blague} = Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris.</msg>
<msg time="2025-02-24T16:50:51.164058" level="INFO">${cat} = ['fashion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.120501" elapsed="0.043577"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.164492" elapsed="0.000220"/>
</kw>
<var name="${elt}">fashion</var>
<status status="PASS" start="2025-02-24T16:50:51.120064" elapsed="0.044757"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.165077" elapsed="0.000139"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.165859" level="INFO">&amp;{dict} = { category=food }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.165655" elapsed="0.000227"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.207262" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=food 
 path_url=/jokes/random?category=food 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.207345" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=food 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1a4e9a6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6238&amp;min_rtt=5643&amp;rtt_var=295&amp;sent=82&amp;recv=60&amp;lost=0&amp;retrans=0&amp;sent_bytes=41193&amp;recv_bytes=6118&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1438&amp;x=0"'} 
 body={"categories":["food"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"4zavbyaktuqhluply6eqmw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/4zavbyaktuqhluply6eqmw","value":"Chuck Norris uses tabasco sauce instead of visine."} 
 </msg>
<msg time="2025-02-24T16:50:51.207469" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.166242" elapsed="0.041254"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.207952" elapsed="0.000064"/>
</return>
<msg time="2025-02-24T16:50:51.208753" level="INFO">${blague} = Chuck Norris uses tabasco sauce instead of visine.</msg>
<msg time="2025-02-24T16:50:51.208791" level="INFO">${cat} = ['food']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.165414" elapsed="0.043398"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.209210" elapsed="0.000205"/>
</kw>
<var name="${elt}">food</var>
<status status="PASS" start="2025-02-24T16:50:51.164982" elapsed="0.044542"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.209780" elapsed="0.000142"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.210568" level="INFO">&amp;{dict} = { category=history }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.210365" elapsed="0.000225"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.255830" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=history 
 path_url=/jokes/random?category=history 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.255951" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=history 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1a9ee96ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6163&amp;min_rtt=5574&amp;rtt_var=305&amp;sent=85&amp;recv=62&amp;lost=0&amp;retrans=0&amp;sent_bytes=42575&amp;recv_bytes=6318&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1486&amp;x=0"'} 
 body={"categories":["history"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"rqcvwdgqq6amwony3nngba","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/rqcvwdgqq6amwony3nngba","value":"In the Words of Julius Caesar, \"Veni, Vidi, Vici, Chuck Norris\". Translation: I came, I saw, and I was roundhouse-kicked inthe face by Chuck Norris."} 
 </msg>
<msg time="2025-02-24T16:50:51.256076" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.210931" elapsed="0.045171"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.256579" elapsed="0.000068"/>
</return>
<msg time="2025-02-24T16:50:51.257415" level="INFO">${blague} = In the Words of Julius Caesar, "Veni, Vidi, Vici, Chuck Norris". Translation: I came, I saw, and I was roundhouse-kicked inthe face by Chuck Norris.</msg>
<msg time="2025-02-24T16:50:51.257457" level="INFO">${cat} = ['history']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.210121" elapsed="0.047355"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.257886" elapsed="0.000214"/>
</kw>
<var name="${elt}">history</var>
<status status="PASS" start="2025-02-24T16:50:51.209684" elapsed="0.048528"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.258476" elapsed="0.000141"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.259440" level="INFO">&amp;{dict} = { category=money }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.259235" elapsed="0.000228"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.305464" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=money 
 path_url=/jokes/random?category=money 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.305561" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=money 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1aef2a6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6229&amp;min_rtt=5574&amp;rtt_var=360&amp;sent=88&amp;recv=64&amp;lost=0&amp;retrans=0&amp;sent_bytes=44055&amp;recv_bytes=6516&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1536&amp;x=0"'} 
 body={"categories":["money"],"created_at":"2020-01-05 13:42:21.179347","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"V94Atg5NT7-ZcAPmWWI86w","updated_at":"2020-05-22 06:02:41.792421","url":"https://api.chucknorris.io/jokes/V94Atg5NT7-ZcAPmWWI86w","value":"Jimmy Hoffa owed Chuck Norris money."} 
 </msg>
<msg time="2025-02-24T16:50:51.305705" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.259805" elapsed="0.045927"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.306346" elapsed="0.000084"/>
</return>
<msg time="2025-02-24T16:50:51.307255" level="INFO">${blague} = Jimmy Hoffa owed Chuck Norris money.</msg>
<msg time="2025-02-24T16:50:51.307297" level="INFO">${cat} = ['money']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.258816" elapsed="0.048503"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.307833" elapsed="0.000238"/>
</kw>
<var name="${elt}">money</var>
<status status="PASS" start="2025-02-24T16:50:51.258380" elapsed="0.049815"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.308484" elapsed="0.000155"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.309314" level="INFO">&amp;{dict} = { category=movie }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.309106" elapsed="0.000231"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.349867" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=movie 
 path_url=/jokes/random?category=movie 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.349993" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=movie 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1b3f696ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6213&amp;min_rtt=5574&amp;rtt_var=302&amp;sent=91&amp;recv=66&amp;lost=0&amp;retrans=0&amp;sent_bytes=45453&amp;recv_bytes=6714&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1581&amp;x=0"'} 
 body={"categories":["movie"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"5e4voyf7t_yw-9qi8ppy6w","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/5e4voyf7t_yw-9qi8ppy6w","value":"The original draft of The Lord of the Rings featured Chuck Norris instead of Frodo Baggins. It was only 5 pages long, as Chuck roundhouse-kicked Sauron's ass halfway through the first chapter."} 
 </msg>
<msg time="2025-02-24T16:50:51.350126" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.309776" elapsed="0.040374"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.350644" elapsed="0.000071"/>
</return>
<msg time="2025-02-24T16:50:51.351512" level="INFO">${blague} = The original draft of The Lord of the Rings featured Chuck Norris instead of Frodo Baggins. It was only 5 pages long, as Chuck roundhouse-kicked Sauron's ass halfway through the first chapter.</msg>
<msg time="2025-02-24T16:50:51.351553" level="INFO">${cat} = ['movie']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.308857" elapsed="0.042715"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.352006" elapsed="0.000225"/>
</kw>
<var name="${elt}">movie</var>
<status status="PASS" start="2025-02-24T16:50:51.308375" elapsed="0.043969"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.352609" elapsed="0.000144"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.353415" level="INFO">&amp;{dict} = { category=music }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.353210" elapsed="0.000228"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.395967" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=music 
 path_url=/jokes/random?category=music 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.396054" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=music 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1b7fa06ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6200&amp;min_rtt=5574&amp;rtt_var=251&amp;sent=94&amp;recv=68&amp;lost=0&amp;retrans=0&amp;sent_bytes=46929&amp;recv_bytes=6912&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1627&amp;x=0"'} 
 body={"categories":["music"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"qxsbf-jeq_act5a4bbwavq","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/qxsbf-jeq_act5a4bbwavq","value":"The Drummer for Def Leppard's only got one arm. Chuck Norris needed a back scratcher."} 
 </msg>
<msg time="2025-02-24T16:50:51.396178" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.353794" elapsed="0.042410"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.396688" elapsed="0.000072"/>
</return>
<msg time="2025-02-24T16:50:51.397533" level="INFO">${blague} = The Drummer for Def Leppard's only got one arm. Chuck Norris needed a back scratcher.</msg>
<msg time="2025-02-24T16:50:51.397574" level="INFO">${cat} = ['music']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.352959" elapsed="0.044635"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.398019" elapsed="0.000219"/>
</kw>
<var name="${elt}">music</var>
<status status="PASS" start="2025-02-24T16:50:51.352511" elapsed="0.045836"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.398608" elapsed="0.000141"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.400345" level="INFO">&amp;{dict} = { category=political }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.400139" elapsed="0.000230"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.439955" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=political 
 path_url=/jokes/random?category=political 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.440075" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=political 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1bc80b6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6187&amp;min_rtt=5574&amp;rtt_var=215&amp;sent=97&amp;recv=70&amp;lost=0&amp;retrans=0&amp;sent_bytes=48335&amp;recv_bytes=7114&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1671&amp;x=0"'} 
 body={"categories":["political"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"uynvnqrmt1oqjeoxo5y73w","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/uynvnqrmt1oqjeoxo5y73w","value":"July 4th is Independence day. And the day Chuck Norris was born. Coincidence? I think not."} 
 </msg>
<msg time="2025-02-24T16:50:51.440208" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.400726" elapsed="0.039507"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.440708" elapsed="0.000065"/>
</return>
<msg time="2025-02-24T16:50:51.441511" level="INFO">${blague} = July 4th is Independence day. And the day Chuck Norris was born. Coincidence? I think not.</msg>
<msg time="2025-02-24T16:50:51.441551" level="INFO">${cat} = ['political']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.398951" elapsed="0.042621"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.441968" elapsed="0.000208"/>
</kw>
<var name="${elt}">political</var>
<status status="PASS" start="2025-02-24T16:50:51.398512" elapsed="0.043770"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.442532" elapsed="0.000142"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.443321" level="INFO">&amp;{dict} = { category=religion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.443120" elapsed="0.000224"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.484727" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=religion 
 path_url=/jokes/random?category=religion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.484818" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=religion 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1c084a6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6137&amp;min_rtt=5574&amp;rtt_var=220&amp;sent=100&amp;recv=72&amp;lost=0&amp;retrans=0&amp;sent_bytes=49748&amp;recv_bytes=7315&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1716&amp;x=0"'} 
 body={"categories":["religion"],"created_at":"2020-01-05 13:42:28.984661","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"j_stYjIXSPWn7a_9DnI4ug","updated_at":"2020-08-24 15:45:37.119961","url":"https://api.chucknorris.io/jokes/j_stYjIXSPWn7a_9DnI4ug","value":"Chuck Norris was originally offered the role as Frodo in Lord of the Rings. He declined because, \"Only a pussy would need three movies to destroy a piece of jewelery.\""} 
 </msg>
<msg time="2025-02-24T16:50:51.484950" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.443689" elapsed="0.041287"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.485500" elapsed="0.000074"/>
</return>
<msg time="2025-02-24T16:50:51.486348" level="INFO">${blague} = Chuck Norris was originally offered the role as Frodo in Lord of the Rings. He declined because, "Only a pussy would need three movies to destroy a piece of jewelery."</msg>
<msg time="2025-02-24T16:50:51.486391" level="INFO">${cat} = ['religion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.442874" elapsed="0.043538"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.486856" elapsed="0.000235"/>
</kw>
<var name="${elt}">religion</var>
<status status="PASS" start="2025-02-24T16:50:51.442438" elapsed="0.044764"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.487640" elapsed="0.000158"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.488471" level="INFO">&amp;{dict} = { category=science }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.488256" elapsed="0.000238"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.534779" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=science 
 path_url=/jokes/random?category=science 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.534876" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=science 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1c487d6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6069&amp;min_rtt=5524&amp;rtt_var=230&amp;sent=102&amp;recv=74&amp;lost=0&amp;retrans=0&amp;sent_bytes=51260&amp;recv_bytes=7515&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1766&amp;x=0"'} 
 body={"categories":["science"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"htgg43w6sxs9_-5nn3s5ha","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/htgg43w6sxs9_-5nn3s5ha","value":"The square root of Chuck Norris is pain. Do not try to square Chuck Norris, the result is death."} 
 </msg>
<msg time="2025-02-24T16:50:51.535015" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.488861" elapsed="0.046181"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.535586" elapsed="0.000119"/>
</return>
<msg time="2025-02-24T16:50:51.536654" level="INFO">${blague} = The square root of Chuck Norris is pain. Do not try to square Chuck Norris, the result is death.</msg>
<msg time="2025-02-24T16:50:51.536705" level="INFO">${cat} = ['science']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.488007" elapsed="0.048720"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.537397" elapsed="0.000332"/>
</kw>
<var name="${elt}">science</var>
<status status="PASS" start="2025-02-24T16:50:51.487534" elapsed="0.050616"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.538484" elapsed="0.000183"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.539611" level="INFO">&amp;{dict} = { category=sport }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.539388" elapsed="0.000247"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.582144" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=sport 
 path_url=/jokes/random?category=sport 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.582234" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=sport 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1ca8ca6ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=6079&amp;min_rtt=5524&amp;rtt_var=194&amp;sent=105&amp;recv=76&amp;lost=0&amp;retrans=0&amp;sent_bytes=52665&amp;recv_bytes=7713&amp;delivery_rate=729733&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1813&amp;x=0"'} 
 body={"categories":["sport"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"17or3xgerjg7gsv9pcazwa","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/17or3xgerjg7gsv9pcazwa","value":"Chuck Norris once participated in the running of the bulls. He walked."} 
 </msg>
<msg time="2025-02-24T16:50:51.582380" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.540069" elapsed="0.042336"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.582885" elapsed="0.000069"/>
</return>
<msg time="2025-02-24T16:50:51.583723" level="INFO">${blague} = Chuck Norris once participated in the running of the bulls. He walked.</msg>
<msg time="2025-02-24T16:50:51.583764" level="INFO">${cat} = ['sport']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.538892" elapsed="0.044893"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.584191" elapsed="0.000217"/>
</kw>
<var name="${elt}">sport</var>
<status status="PASS" start="2025-02-24T16:50:51.538354" elapsed="0.046165"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.584786" elapsed="0.000144"/>
</kw>
<kw name="Blague de catÃ©gorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-24T16:50:51.585586" level="INFO">&amp;{dict} = { category=travel }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.585378" elapsed="0.000231"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.627587" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=travel 
 path_url=/jokes/random?category=travel 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.627707" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=travel 
 status=200, reason= 
 headers={'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1740412251&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=2cwxMpF5MkxEYeyxgOeQa%2Bf2wwZGp6WN4xFa%2F1UE%2B%2BI%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '91709d1ce9126ee7-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=5970&amp;min_rtt=5163&amp;rtt_var=215&amp;sent=108&amp;recv=78&amp;lost=0&amp;retrans=0&amp;sent_bytes=54061&amp;recv_bytes=7912&amp;delivery_rate=777094&amp;cwnd=257&amp;unsent_bytes=0&amp;cid=a16763ce0c97719a&amp;ts=1858&amp;x=0"'} 
 body={"categories":["travel"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"uv5jvundsfuyiuiwswy3ba","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/uv5jvundsfuyiuiwswy3ba","value":"Chuck Norris did in fact, build Rome in a day."} 
 </msg>
<msg time="2025-02-24T16:50:51.627830" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.585965" elapsed="0.041891"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-24T16:50:51.628476" elapsed="0.000071"/>
</return>
<msg time="2025-02-24T16:50:51.629338" level="INFO">${blague} = Chuck Norris did in fact, build Rome in a day.</msg>
<msg time="2025-02-24T16:50:51.629410" level="INFO">${cat} = ['travel']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-24T16:50:51.585131" elapsed="0.044317"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.629945" elapsed="0.000227"/>
</kw>
<var name="${elt}">travel</var>
<status status="PASS" start="2025-02-24T16:50:51.584690" elapsed="0.045602"/>
</iter>
<var>${elt}</var>
<value>@{categories}</value>
<status status="PASS" start="2025-02-24T16:50:50.874300" elapsed="0.756098"/>
</for>
<status status="PASS" start="2025-02-24T16:50:50.823139" elapsed="0.807461"/>
</test>
<kw name="Fermer session chuck" owner="chuckNorris" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.633025" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-24T16:50:51.632933" elapsed="0.000305"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.632740" elapsed="0.000848"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:49.638030" elapsed="1.995662"/>
</suite>
<suite id="s1-s2" name="Google" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3/google.robot">
<test id="s1-s2-t1" name="test1" line="6">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.671741" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-24T16:50:51.671500" elapsed="0.000411"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.671197" elapsed="0.001149"/>
</kw>
<kw name="Faire une requete et afficher la rÃ©ponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.706713" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.706829" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=5'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-24T16:50:51.706970" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.672793" elapsed="0.034202"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.707555" elapsed="0.000484"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-24T16:50:51.708849" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x11021c310&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-24T16:50:51.708229" elapsed="0.000646"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.672582" elapsed="0.036659"/>
</kw>
<kw name="Faire une requete et rÃ©cuperer la rÃ©ponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.725191" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.725272" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=7'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-24T16:50:51.725421" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.709707" elapsed="0.015740"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-24T16:50:51.726475" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1102a5440&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-24T16:50:51.725972" elapsed="0.000530"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-24T16:50:51.726840" elapsed="0.000063"/>
</return>
<msg time="2025-02-24T16:50:51.727090" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x1102a5440&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-24T16:50:51.709489" elapsed="0.017625"/>
</kw>
<kw name="ContrÃ´ler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.727782" elapsed="0.000223"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-24T16:50:51.727528" elapsed="0.000659"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.729017" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-24T16:50:51.728913" elapsed="0.000255"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.728602" elapsed="0.000957"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.670832" elapsed="0.058876"/>
</test>
<test id="s1-s2-t2" name="test2" line="10">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.732628" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-24T16:50:51.732417" elapsed="0.000366"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.732213" elapsed="0.000900"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>True</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-02-24T16:50:51.733301" elapsed="0.000199"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.734127" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-24T16:50:51.734036" elapsed="0.000150"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.733805" elapsed="0.000764"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.731928" elapsed="0.002780"/>
</test>
<test id="s1-s2-t3" name="test3" line="12">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.737696" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-24T16:50:51.737485" elapsed="0.000355"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.737110" elapsed="0.001087"/>
</kw>
<kw name="Faire une requete et afficher la rÃ©ponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.764594" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.764680" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=6'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-24T16:50:51.764814" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.738641" elapsed="0.026198"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.765385" elapsed="0.000470"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-24T16:50:51.766491" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1102a6340&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-24T16:50:51.766043" elapsed="0.000473"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.738417" elapsed="0.028476"/>
</kw>
<kw name="Faire une requete et rÃ©cuperer la rÃ©ponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.782193" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.782275" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=6'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-24T16:50:51.782394" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.767356" elapsed="0.015064"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-24T16:50:51.783449" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1102a7010&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-24T16:50:51.782952" elapsed="0.000523"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-24T16:50:51.783795" elapsed="0.000059"/>
</return>
<msg time="2025-02-24T16:50:51.784033" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x1102a7010&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-24T16:50:51.767138" elapsed="0.016918"/>
</kw>
<kw name="ContrÃ´ler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.784711" elapsed="0.000178"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-24T16:50:51.784462" elapsed="0.000562"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.785556" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-24T16:50:51.785474" elapsed="0.000213"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.785268" elapsed="0.000734"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.736833" elapsed="0.049297"/>
</test>
<test id="s1-s2-t4" name="test4" line="16">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.789053" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-24T16:50:51.788839" elapsed="0.000594"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.788628" elapsed="0.001150"/>
</kw>
<kw name="Faire une requete et afficher la rÃ©ponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.829509" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.829624" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=11'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-24T16:50:51.829825" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.790319" elapsed="0.039537"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-24T16:50:51.830537" elapsed="0.000522"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-24T16:50:51.831845" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1102a6de0&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-24T16:50:51.831318" elapsed="0.000556"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.790047" elapsed="0.042249"/>
</kw>
<kw name="Faire une requete et rÃ©cuperer la rÃ©ponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.849228" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-24T16:50:51.849337" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Mon, 24 Feb 2025 15:50:51 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=8'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-24T16:50:51.849505" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-24T16:50:51.832789" elapsed="0.016743"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-24T16:50:51.850616" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1102a6ed0&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-24T16:50:51.850091" elapsed="0.000552"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-24T16:50:51.850986" elapsed="0.000061"/>
</return>
<msg time="2025-02-24T16:50:51.851230" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x1102a6ed0&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-24T16:50:51.832559" elapsed="0.018695"/>
</kw>
<kw name="ContrÃ´ler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-24T16:50:51.851940" elapsed="0.000180"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-24T16:50:51.851684" elapsed="0.000573"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-24T16:50:51.852796" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-24T16:50:51.852716" elapsed="0.000221"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.852507" elapsed="0.000749"/>
</kw>
<status status="PASS" start="2025-02-24T16:50:51.788329" elapsed="0.065052"/>
</test>
<status status="PASS" start="2025-02-24T16:50:51.646319" elapsed="0.209270"/>
</suite>
<status status="PASS" start="2025-02-24T16:50:49.626148" elapsed="2.231975"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="Rest3">Rest3</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="chuckNorris">Rest3.chuckNorris</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Google">Rest3.Google</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
