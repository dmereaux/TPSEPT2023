<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.11.6 on darwin)" generated="2025-02-07T17:51:09.427604" rpa="false" schemaversion="5">
<suite id="s1" name="TPSEPT2023" source="/Users/dominiquemereaux/code/TPSEPT2023">
<suite id="s1-s1" name="Basic" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic">
<suite id="s1-s1-s1" name="Bibli1" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/Bibli1.robot">
<test id="s1-s1-s1-t1" name="Util LibCalcul" line="6">
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:09.452545" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${x}</var>
<arg>20</arg>
<status status="FAIL" start="2025-02-07T17:51:09.452520" elapsed="0.000057">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${x}</arg>
<arg>plein tarif</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.452690" elapsed="0.000015"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:09.451690" elapsed="0.001125">No keyword with name 'Calcul Tarif' found.</status>
</test>
<test id="s1-s1-s1-t2" name="Util plusieurs arguments" line="9">
<kw name="any_arguments">
<msg time="2025-02-07T17:51:09.453587" level="FAIL">No keyword with name 'any_arguments' found.</msg>
<arg>un</arg>
<arg>deux</arg>
<arg>trois</arg>
<status status="FAIL" start="2025-02-07T17:51:09.453569" elapsed="0.000039">No keyword with name 'any_arguments' found.</status>
</kw>
<status status="FAIL" start="2025-02-07T17:51:09.452929" elapsed="0.000780">No keyword with name 'any_arguments' found.</status>
</test>
<test id="s1-s1-s1-t3" name="skkipy" line="11">
<kw name="Example Keyword">
<msg time="2025-02-07T17:51:09.454435" level="FAIL">No keyword with name 'Example Keyword' found.</msg>
<status status="FAIL" start="2025-02-07T17:51:09.454418" elapsed="0.000037">No keyword with name 'Example Keyword' found.</status>
</kw>
<status status="FAIL" start="2025-02-07T17:51:09.453813" elapsed="0.000735">No keyword with name 'Example Keyword' found.</status>
</test>
<doc>Ma suite qui fait pas grand chose</doc>
<status status="FAIL" start="2025-02-07T17:51:09.447546" elapsed="0.007160"/>
</suite>
<suite id="s1-s1-s2" name="Helloworld" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/helloworld.robot">
<kw name="gestion suite de test" owner="clef" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>charger la config</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.461166" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialiser le matériel</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.461330" elapsed="0.000084"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.460991" elapsed="0.000458"/>
</kw>
<test id="s1-s1-s2-t1" name="afficher liste" line="15">
<kw name="Log To Console" owner="BuiltIn">
<arg>${liste1[1]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.461657" elapsed="0.000356"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.462136" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.461483" elapsed="0.000747"/>
</test>
<test id="s1-s1-s2-t2" name="afficher Variables" line="17">
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.462580" level="INFO" html="true">toto level=WARN</msg>
<arg>toto level=WARN</arg>
<arg>html=True</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-07T17:51:09.462489" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}liste:${liste1}[0]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.462678" elapsed="0.000111"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}dict:${dictionnaire}[animal]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.462858" elapsed="0.000111"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-02-07T17:51:09.463128" level="INFO">@{l} = [ il | neige ]</msg>
<var>@{l}</var>
<arg>il neige</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.463034" elapsed="0.000108"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}liste:${l}[0]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.463209" elapsed="0.000102"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.463461" level="INFO">@{maliste} = [ il | neige ]</msg>
<var>@{maliste}</var>
<arg>@{l}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-02-07T17:51:09.463375" elapsed="0.000098"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}liste:${maliste}[0]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.463535" elapsed="0.000097"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.463814" level="INFO">@{maliste} = [ il | neige ]</msg>
<arg>@{maliste}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-02-07T17:51:09.463700" elapsed="0.000133"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.462338" elapsed="0.001567"/>
</test>
<test id="s1-s1-s2-t3" name="afficher liste1" line="27">
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}valeur: ${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.464245" elapsed="0.000203"/>
</kw>
<var name="${elt}">1</var>
<status status="PASS" start="2025-02-07T17:51:09.464194" elapsed="0.000274"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}valeur: ${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.464561" elapsed="0.000091"/>
</kw>
<var name="${elt}">2</var>
<status status="PASS" start="2025-02-07T17:51:09.464519" elapsed="0.000152"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}valeur: ${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.464756" elapsed="0.000090"/>
</kw>
<var name="${elt}">3</var>
<status status="PASS" start="2025-02-07T17:51:09.464715" elapsed="0.000150"/>
</iter>
<var>${elt}</var>
<value>@{liste1}</value>
<status status="PASS" start="2025-02-07T17:51:09.464118" elapsed="0.000763"/>
</for>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.464981" elapsed="0.000043"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.463997" elapsed="0.001060"/>
</test>
<test id="s1-s1-s2-t4" name="test du if" line="31">
<if>
<branch type="IF" condition="&quot;${PREV_TEST_STATUS}&quot; == &quot;PASS&quot;">
<kw name="Log To Console" owner="BuiltIn">
<arg>le test précédent est OK</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.465376" elapsed="0.000058"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.465278" elapsed="0.000176"/>
</branch>
<status status="PASS" start="2025-02-07T17:51:09.465265" elapsed="0.000203"/>
</if>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.465560" elapsed="0.000042"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.465154" elapsed="0.000484"/>
</test>
<test id="s1-s1-s2-t5" name="vérif platform" line="35">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.469149" level="INFO">${ret} = Darwin</msg>
<var>${ret}</var>
<arg>platform.system()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.465960" elapsed="0.003207"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${ret}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.469252" elapsed="0.000086"/>
</kw>
<if>
<branch type="IF" condition="platform.system() == 'Linux'">
<kw name="Log To Console" owner="BuiltIn">
<arg>ce n'est pas la bonne plateforme</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.469474" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2025-02-07T17:51:09.469394" elapsed="0.000109"/>
</branch>
<status status="PASS" start="2025-02-07T17:51:09.469383" elapsed="0.000133"/>
</if>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.469620" elapsed="0.000045"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.465766" elapsed="0.003936"/>
</test>
<test id="s1-s1-s2-t6" name="afficher variable 2" line="41">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}liste:${maliste}[0]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.469967" elapsed="0.000102"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.470168" elapsed="0.000042"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.469810" elapsed="0.000438"/>
</test>
<test id="s1-s1-s2-t7" name="afficher les constantes" line="43">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}IP:${IP},firmware:${FIRMWARE}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.470477" elapsed="0.000101"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.470673" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.470340" elapsed="0.000411"/>
</test>
<test id="s1-s1-s2-t8" name="Helloworld" line="45">
<kw name="Log To Console" owner="BuiltIn">
<arg>Bonjour</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.470998" elapsed="0.000059"/>
</kw>
<kw name="mon premier mot cle">
<kw name="Log To Console" owner="BuiltIn">
<arg>j'ai créé un mot clé</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.471264" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.471149" elapsed="0.000208"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.471452" elapsed="0.000043"/>
</kw>
<doc>doc de test</doc>
<tag>regression</tag>
<tag>toto titi</tag>
<tag>world</tag>
<status status="PASS" start="2025-02-07T17:51:09.470844" elapsed="0.000685"/>
</test>
<test id="s1-s1-s2-t9" name="hello" line="50">
<kw name="mot clef" owner="clef">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.472289" level="INFO">${ret} = hello-world</msg>
<var>${ret}</var>
<arg>SEPARATOR=-</arg>
<arg>${arg1}</arg>
<arg>${arg2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.472189" elapsed="0.000113"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.472429" level="WARN">msg</msg>
<arg>msg</arg>
<arg>level=WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-07T17:51:09.472359" elapsed="0.000127"/>
</kw>
<return>
<value>${ret}</value>
<status status="PASS" start="2025-02-07T17:51:09.472516" elapsed="0.000025"/>
</return>
<msg time="2025-02-07T17:51:09.472609" level="INFO">${toto} = hello-world</msg>
<var>${toto}</var>
<arg>hello</arg>
<arg>world</arg>
<doc>documentation mot clef</doc>
<status status="PASS" start="2025-02-07T17:51:09.472042" elapsed="0.000578"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${toto}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.472686" elapsed="0.000072"/>
</kw>
<kw name="mot clef" owner="clef">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.473084" level="INFO">${ret} = hello-toto</msg>
<var>${ret}</var>
<arg>SEPARATOR=-</arg>
<arg>${arg1}</arg>
<arg>${arg2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.472989" elapsed="0.000107"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.473217" level="WARN">msg</msg>
<arg>msg</arg>
<arg>level=WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-07T17:51:09.473153" elapsed="0.000119"/>
</kw>
<return>
<value>${ret}</value>
<status status="PASS" start="2025-02-07T17:51:09.473297" elapsed="0.000019"/>
</return>
<msg time="2025-02-07T17:51:09.473382" level="INFO">${toto} = hello-toto</msg>
<var>${toto}</var>
<arg>hello</arg>
<doc>documentation mot clef</doc>
<status status="PASS" start="2025-02-07T17:51:09.472852" elapsed="0.000541"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${toto}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.473459" elapsed="0.000069"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.473680" level="INFO">Set tag 'hello-toto'.</msg>
<arg>${toto}</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2025-02-07T17:51:09.473586" elapsed="0.000115"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.473794" elapsed="0.000040"/>
</kw>
<tag>/opt/local/bin:/opt/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/Library/Frameworks/Python.framework/Versions/3.10/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/opt/X11/bin:/Library/Apple/usr/bin:/Library/TeX/texbin:/usr/local/share/dotnet:~/.dotnet/tools</tag>
<tag>hello-toto</tag>
<status status="PASS" start="2025-02-07T17:51:09.471639" elapsed="0.002232"/>
</test>
<test id="s1-s1-s2-t10" name="afficher variables prédéfinies" line="58">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}/Users/dominiquemereaux/code/TPSEPT2023/Basic,${\n}${TEMPDIR},${\n}${EXECDIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.474116" elapsed="0.000126"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.474335" elapsed="0.000038"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.473973" elapsed="0.000434"/>
</test>
<test id="s1-s1-s2-t11" name="Comparer un entier avec une chaine" line="60">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.474894" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<arg>80</arg>
<arg>${80}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-02-07T17:51:09.474643" elapsed="0.000282"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>le ttest ne s'est pas arreté</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.474994" elapsed="0.000055"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}staut:${PREV_TEST_STATUS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.475109" elapsed="0.000091"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.475293" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.474498" elapsed="0.000869"/>
</test>
<test id="s1-s1-s2-t12" name="test skippé" line="65">
<kw name="Skip If" owner="BuiltIn">
<arg>"${PREV_TEST_STATUS}" == "FAIL"</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="PASS" start="2025-02-07T17:51:09.475589" elapsed="0.000116"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.475803" elapsed="0.000038"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.475461" elapsed="0.000415"/>
</test>
<test id="s1-s1-s2-t13" name="modele" line="67">
<kw name="Comparer un entier avec une chaine 2" owner="clef">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.476453" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<arg>${arg1}</arg>
<arg>${arg2}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-02-07T17:51:09.476377" elapsed="0.000105"/>
</kw>
<arg>80</arg>
<arg>${80}</arg>
<status status="PASS" start="2025-02-07T17:51:09.476103" elapsed="0.000409"/>
</kw>
<kw name="Comparer un entier avec une chaine 2" owner="clef">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.476941" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<arg>${arg1}</arg>
<arg>${arg2}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-02-07T17:51:09.476864" elapsed="0.000104"/>
</kw>
<arg>90</arg>
<arg>${90}</arg>
<status status="PASS" start="2025-02-07T17:51:09.476594" elapsed="0.000404"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.477093" elapsed="0.000037"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.475965" elapsed="0.001199"/>
</test>
<test id="s1-s1-s2-t14" name="test valeur inf à 10" line="71">
<kw name="valeur inferieure à 10" owner="clef">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.477643" level="INFO">${random} = 0</msg>
<var>${random}</var>
<arg>random.randint(0, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.477545" elapsed="0.000110"/>
</kw>
<return>
<value>${random}</value>
<status status="PASS" start="2025-02-07T17:51:09.477681" elapsed="0.000016"/>
</return>
<msg time="2025-02-07T17:51:09.477758" level="INFO">${x} = 0</msg>
<var>${x}</var>
<status status="PASS" start="2025-02-07T17:51:09.477428" elapsed="0.000341"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${x} &lt; 11</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-02-07T17:51:09.477829" elapsed="0.000087"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>gestion en cas d'erreur</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.478011" elapsed="0.000038"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.477258" elapsed="0.000828"/>
</test>
<doc>de la doc de suite
suite de la doc</doc>
<status status="PASS" start="2025-02-07T17:51:09.454972" elapsed="0.023275"/>
</suite>
<suite id="s1-s1-s3" name="premierPas" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/premierPas.robot">
<kw name="debut de suite" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut de la suite</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.487611" elapsed="0.000093"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.487922" level="INFO">&amp;{proxy} = { nom=toto | motdepasse=titi }</msg>
<var>&amp;{proxy}</var>
<arg>nom=${nom}</arg>
<arg>motdepasse=${mdp}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:09.487770" elapsed="0.000167"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.487446" elapsed="0.000529"/>
</kw>
<test id="s1-s1-s3-t1" name="ajout" line="31">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.488297" elapsed="0.000097"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.488447" elapsed="0.000057"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.488171" elapsed="0.000362"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${maliste}</arg>
<arg>1</arg>
<arg>1</arg>
<arg>1</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-02-07T17:51:09.488597" elapsed="0.000068"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.488836" level="INFO">${URL} = "ygfazy"</msg>
<arg>${URL}</arg>
<arg>"ygfazy"</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-02-07T17:51:09.488739" elapsed="0.000116"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.488955" elapsed="0.000037"/>
</kw>
<tag>var</tag>
<status status="PASS" start="2025-02-07T17:51:09.488007" elapsed="0.001020"/>
</test>
<test id="s1-s1-s3-t2" name="verif" line="35">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.489390" elapsed="0.000088"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.489532" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.489281" elapsed="0.000330"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.489770" elapsed="0.000068"/>
</kw>
<var name="${elt}">il</var>
<status status="PASS" start="2025-02-07T17:51:09.489727" elapsed="0.000129"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.489941" elapsed="0.000070"/>
</kw>
<var name="${elt}">neige</var>
<status status="PASS" start="2025-02-07T17:51:09.489900" elapsed="0.000165"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.490151" elapsed="0.000065"/>
</kw>
<var name="${elt}">1</var>
<status status="PASS" start="2025-02-07T17:51:09.490110" elapsed="0.000123"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.490313" elapsed="0.000070"/>
</kw>
<var name="${elt}">1</var>
<status status="PASS" start="2025-02-07T17:51:09.490273" elapsed="0.000128"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.490481" elapsed="0.000064"/>
</kw>
<var name="${elt}">1</var>
<status status="PASS" start="2025-02-07T17:51:09.490442" elapsed="0.000119"/>
</iter>
<var>${elt}</var>
<value>@{maliste}</value>
<status status="PASS" start="2025-02-07T17:51:09.489653" elapsed="0.000924"/>
</for>
<kw name="Log To Console" owner="BuiltIn">
<arg>${URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.490641" elapsed="0.000069"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.490804" elapsed="0.000040"/>
</kw>
<tag>var</tag>
<status status="PASS" start="2025-02-07T17:51:09.489130" elapsed="0.001752"/>
</test>
<test id="s1-s1-s3-t3" name="TP1" line="43">
<kw name="Log To Console" owner="BuiltIn">
<arg>Bonjour les amis</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.491117" elapsed="0.000057"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>mode</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-07T17:51:09.491239" elapsed="0.000068"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.491418" level="ERROR">il y a potentiellement un probleme</msg>
<arg>il y a potentiellement un probleme</arg>
<arg>ERROR</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-07T17:51:09.491370" elapsed="0.000216"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.491690" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.490983" elapsed="0.000784"/>
</test>
<test id="s1-s1-s3-t4" name="TP1 Optionnel" line="49">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.492113" elapsed="0.000092"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.492255" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.492008" elapsed="0.000327"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.492457" level="WARN">Bonjour les Amis</msg>
<arg>Bonjour les Amis</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-07T17:51:09.492406" elapsed="0.000101"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.492617" level="ERROR">Une erreur</msg>
<arg>Une erreur</arg>
<arg>ERROR</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-02-07T17:51:09.492568" elapsed="0.000099"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.492765" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.491861" elapsed="0.000979"/>
</test>
<test id="s1-s1-s3-t5" name="TP2 test variable globale" line="53">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.493191" elapsed="0.000088"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.493329" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.493087" elapsed="0.000322"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>site à tester: ${URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.493475" elapsed="0.000070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${maListe}[1]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.493602" elapsed="0.000075"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>ma liste @{maliste}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.493738" elapsed="0.000069"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Mon ${Mon Dict}[animal] s'appele ${Mon Dict}[nom]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.493867" elapsed="0.000092"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.494055" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.492937" elapsed="0.001193"/>
</test>
<test id="s1-s1-s3-t6" name="TP2-bis test variable globale" line="60">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.494495" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.494642" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.494390" elapsed="0.000332"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.494864" level="INFO">${URL} = http://toto.com</msg>
<arg>${URL}</arg>
<arg>http://toto.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-02-07T17:51:09.494788" elapsed="0.000094"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>site à tester: ${URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.494943" elapsed="0.000072"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.495111" elapsed="0.000038"/>
</kw>
<tag>Regression</tag>
<status status="PASS" start="2025-02-07T17:51:09.494229" elapsed="0.000953"/>
</test>
<test id="s1-s1-s3-t7" name="TP2-ter" line="65">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.495523" elapsed="0.000088"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.495692" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.495422" elapsed="0.000351"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>site à tester: ${URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.495837" elapsed="0.000075"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.496005" elapsed="0.000040"/>
</kw>
<tag>Regression</tag>
<status status="PASS" start="2025-02-07T17:51:09.495283" elapsed="0.000798"/>
</test>
<test id="s1-s1-s3-t8" name="TP2-Bis Optionnel déclaration variable locale au test" line="69">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.496456" elapsed="0.000086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.496595" elapsed="0.000056"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.496352" elapsed="0.000327"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.497170" level="INFO">${locale} = truc muche</msg>
<arg>${locale}</arg>
<arg>truc muche</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-02-07T17:51:09.496744" elapsed="0.000448"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.497368" level="INFO">${locale} = truc muche</msg>
<arg>${locale}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-02-07T17:51:09.497265" elapsed="0.000145"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.497507" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.496182" elapsed="0.001400"/>
</test>
<test id="s1-s1-s3-t9" name="TP2-Bis Optionnel utilisation variable" line="73">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.498065" elapsed="0.000095"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.498213" elapsed="0.000054"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.497843" elapsed="0.000452"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${locale}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.498355" elapsed="0.000067"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.498518" elapsed="0.000036"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.497683" elapsed="0.000905"/>
</test>
<test id="s1-s1-s3-t10" name="TP2-1: Affichage repertoire" line="76">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.498929" elapsed="0.000086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.499067" elapsed="0.000054"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.498825" elapsed="0.000322"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}${EXECDIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.499207" elapsed="0.000085"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}/Users/dominiquemereaux/code/TPSEPT2023/Basic</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.499354" elapsed="0.000068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}${TEMPDIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.499481" elapsed="0.000084"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.499659" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.498682" elapsed="0.001052"/>
</test>
<test id="s1-s1-s3-t11" name="TP2-2 variable predefinies" line="81">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.500102" elapsed="0.000084"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.500238" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.499998" elapsed="0.000320"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>bonjour${SPACE}${SPACE}toto</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.500379" elapsed="0.000080"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.500765" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<msg time="2025-02-07T17:51:09.500860" level="FAIL">echec: 80 (string) != 80 (integer)</msg>
<arg>80</arg>
<arg>${80}</arg>
<arg>msg=echec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2025-02-07T17:51:09.500525" elapsed="0.000407">echec: 80 (string) != 80 (integer)</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.501233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-02-07T17:51:09.501291" level="FAIL">80 (integer) != 80 (string)</msg>
<arg>${80}</arg>
<arg>80</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2025-02-07T17:51:09.501019" elapsed="0.000306">80 (integer) != 80 (string)</status>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>mon test n'a pas marché</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.501401" elapsed="0.000058"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<kw name="Log To Console" owner="BuiltIn">
<arg>Ca a planté</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.501665" elapsed="0.000056"/>
</kw>
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.501587" elapsed="0.000159"/>
</kw>
<tag>robot:continue-on-failure</tag>
<status status="FAIL" start="2025-02-07T17:51:09.499834" elapsed="0.001948">Several failures occurred:

1) echec: 80 (string) != 80 (integer)

2) 80 (integer) != 80 (string)</status>
</test>
<test id="s1-s1-s3-t12" name="TP2-2 optionnel" line="87">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.502209" elapsed="0.000089"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.502351" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.502099" elapsed="0.000334"/>
</kw>
<kw name="Skip If" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.502633" level="SKIP">"FAIL" == "FAIL"</msg>
<arg>"${PREV_TEST_STATUS}" == "FAIL"</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<status status="SKIP" start="2025-02-07T17:51:09.502495" elapsed="0.000174">"FAIL" == "FAIL"</status>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.502788" elapsed="0.000042"/>
</kw>
<status status="SKIP" start="2025-02-07T17:51:09.501939" elapsed="0.000925">"FAIL" == "FAIL"</status>
</test>
<test id="s1-s1-s3-t13" name="TP2-2 affichage du statut du test précédent" line="90">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.503372" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.503521" elapsed="0.000055"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.503263" elapsed="0.000342"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>statut du test précédent:${PREV_TEST_STATUS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.503664" elapsed="0.000072"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.503831" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.502972" elapsed="0.000933"/>
</test>
<test id="s1-s1-s3-t14" name="TP3: test des mot cles" line="95">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.504262" elapsed="0.000085"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.504400" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.504155" elapsed="0.000323"/>
</kw>
<kw name="mot clef simple">
<kw name="Log To Console" owner="BuiltIn">
<arg>toto</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.504656" elapsed="0.000053"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>titi</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.504758" elapsed="0.000050"/>
</kw>
<doc>CECI EST UN MOT CLEF</doc>
<status status="PASS" start="2025-02-07T17:51:09.504553" elapsed="0.000282"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.504929" elapsed="0.000038"/>
</kw>
<doc>cas de test 1</doc>
<status status="PASS" start="2025-02-07T17:51:09.504004" elapsed="0.000996"/>
</test>
<test id="s1-s1-s3-t15" name="TP3-1" line="98">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.505329" elapsed="0.000086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.505468" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.505225" elapsed="0.000323"/>
</kw>
<kw name="Mot clef complexe">
<kw name="Log To Console" owner="BuiltIn">
<arg>${arg1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.505761" elapsed="0.000067"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${arg2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.505879" elapsed="0.000064"/>
</kw>
<return>
<value>${arg1}</value>
<status status="PASS" start="2025-02-07T17:51:09.505967" elapsed="0.000020"/>
</return>
<msg time="2025-02-07T17:51:09.506052" level="INFO">${sortie} = toto</msg>
<var>${sortie}</var>
<arg>toto</arg>
<arg>arg2=titi</arg>
<doc>ceci est un mot cle propriétaire</doc>
<status status="PASS" start="2025-02-07T17:51:09.505631" elapsed="0.000432"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>sortie :${sortie}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.506129" elapsed="0.000070"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.506292" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.505098" elapsed="0.001269"/>
</test>
<test id="s1-s1-s3-t16" name="TP3-3" line="103">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.506693" elapsed="0.000086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.506831" elapsed="0.000051"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.506588" elapsed="0.000320"/>
</kw>
<kw name="mot clef avec Arguments">
<return>
<value>j'affiche ${toto} ${opt}</value>
<status status="PASS" start="2025-02-07T17:51:09.507078" elapsed="0.000015"/>
</return>
<msg time="2025-02-07T17:51:09.507166" level="INFO">${sortie} = j'affiche machin titi</msg>
<var>${sortie}</var>
<arg>machin</arg>
<doc>CECI EST UN MOT CLEF</doc>
<status status="PASS" start="2025-02-07T17:51:09.506981" elapsed="0.000196"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${sortie}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.507242" elapsed="0.000075"/>
</kw>
<kw name="mot clef avec Arguments">
<return>
<value>j'affiche ${toto} ${opt}</value>
<status status="PASS" start="2025-02-07T17:51:09.507488" elapsed="0.000014"/>
</return>
<msg time="2025-02-07T17:51:09.507571" level="INFO">${sortie} = j'affiche machin tutu</msg>
<var>${sortie}</var>
<arg>machin</arg>
<arg>tutu</arg>
<doc>CECI EST UN MOT CLEF</doc>
<status status="PASS" start="2025-02-07T17:51:09.507392" elapsed="0.000190"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${sortie}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.507650" elapsed="0.000064"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.507839" elapsed="0.000042"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.506462" elapsed="0.001457"/>
</test>
<test id="s1-s1-s3-t17" name="TP3-2" line="109">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.508383" elapsed="0.000085"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.508520" elapsed="0.000055"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.508277" elapsed="0.000325"/>
</kw>
<kw name="mot clef qui retourne plusieurs valeurs">
<return>
<value>val1</value>
<value>val2</value>
<status status="PASS" start="2025-02-07T17:51:09.508750" elapsed="0.000014"/>
</return>
<msg time="2025-02-07T17:51:09.508821" level="INFO">${S1} = val1</msg>
<msg time="2025-02-07T17:51:09.508839" level="INFO">${S2} = val2</msg>
<var>${S1}</var>
<var>${S2}</var>
<status status="PASS" start="2025-02-07T17:51:09.508677" elapsed="0.000171"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>sortie1:${S1} sortie2:${S2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.508913" elapsed="0.000083"/>
</kw>
<kw name="mot clef qui retourne plusieurs valeurs">
<return>
<value>val1</value>
<value>val2</value>
<status status="PASS" start="2025-02-07T17:51:09.509146" elapsed="0.000015"/>
</return>
<msg time="2025-02-07T17:51:09.509218" level="INFO">@{listeLocale} = [ val1 | val2 ]</msg>
<var>@{listeLocale}</var>
<status status="PASS" start="2025-02-07T17:51:09.509073" elapsed="0.000157"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.509370" elapsed="0.000069"/>
</kw>
<var name="${elt}">val1</var>
<status status="PASS" start="2025-02-07T17:51:09.509328" elapsed="0.000129"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.509534" elapsed="0.000064"/>
</kw>
<var name="${elt}">val2</var>
<status status="PASS" start="2025-02-07T17:51:09.509496" elapsed="0.000119"/>
</iter>
<var>${elt}</var>
<value>@{listeLocale}</value>
<status status="PASS" start="2025-02-07T17:51:09.509267" elapsed="0.000363"/>
</for>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.509735" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.508017" elapsed="0.001797"/>
</test>
<test id="s1-s1-s3-t18" name="TP6 BDD" line="117">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.510143" elapsed="0.000086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.510282" elapsed="0.000051"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.510042" elapsed="0.000318"/>
</kw>
<kw name="Given log to Console" owner="BuiltIn">
<arg>${\n}un individu</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.510454" elapsed="0.000078"/>
</kw>
<kw name="When Log to Console" owner="BuiltIn">
<arg>il fait qqch</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.510614" elapsed="0.000054"/>
</kw>
<kw name="Then Log To Console" owner="BuiltIn">
<arg>Il se passe qqch</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.510750" elapsed="0.000050"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.510897" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.509912" elapsed="0.001061"/>
</test>
<test id="s1-s1-s3-t19" name="TP7 boucle sur la liste" line="123">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.511317" elapsed="0.000087"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.511456" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.511214" elapsed="0.000322"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.511676" elapsed="0.000072"/>
</kw>
<var name="${elt}">il</var>
<status status="PASS" start="2025-02-07T17:51:09.511635" elapsed="0.000131"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.511844" elapsed="0.000063"/>
</kw>
<var name="${elt}">neige</var>
<status status="PASS" start="2025-02-07T17:51:09.511804" elapsed="0.000120"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.512000" elapsed="0.000067"/>
</kw>
<var name="${elt}">1</var>
<status status="PASS" start="2025-02-07T17:51:09.511961" elapsed="0.000124"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.512159" elapsed="0.000062"/>
</kw>
<var name="${elt}">1</var>
<status status="PASS" start="2025-02-07T17:51:09.512121" elapsed="0.000117"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.512313" elapsed="0.000067"/>
</kw>
<var name="${elt}">1</var>
<status status="PASS" start="2025-02-07T17:51:09.512275" elapsed="0.000121"/>
</iter>
<var>${elt}</var>
<value>@{maListe}</value>
<status status="PASS" start="2025-02-07T17:51:09.511573" elapsed="0.000837"/>
</for>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.512504" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.511072" elapsed="0.001506"/>
</test>
<test id="s1-s1-s3-t20" name="TP7 Optionnel" line="129">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.512922" elapsed="0.000217"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.513197" elapsed="0.000054"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.512811" elapsed="0.000469"/>
</kw>
<kw name="Get Count" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.513432" level="INFO">Item found from container 0 times.</msg>
<msg time="2025-02-07T17:51:09.513470" level="INFO">${nb} = 0</msg>
<var>${nb}</var>
<arg>${maliste}</arg>
<arg>2</arg>
<doc>Returns and logs how many times ``item`` is found from ``container``.</doc>
<status status="PASS" start="2025-02-07T17:51:09.513370" elapsed="0.000111"/>
</kw>
<if>
<branch type="IF" condition="${nb}==2">
<kw name="Log To Console" owner="BuiltIn">
<arg>c'est bon</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.513625" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2025-02-07T17:51:09.513536" elapsed="0.000114"/>
</branch>
<status status="PASS" start="2025-02-07T17:51:09.513524" elapsed="0.000139"/>
</if>
<kw name="Get Count" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.513784" level="INFO">Item found from container 0 times.</msg>
<msg time="2025-02-07T17:51:09.513817" level="INFO">${nb} = 0</msg>
<var>${nb}</var>
<arg>${maliste}</arg>
<arg>3</arg>
<doc>Returns and logs how many times ``item`` is found from ``container``.</doc>
<status status="PASS" start="2025-02-07T17:51:09.513725" elapsed="0.000102"/>
</kw>
<if>
<branch type="IF" condition="${nb}==1">
<kw name="Log To Console" owner="BuiltIn">
<arg>c'est bon</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.513952" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2025-02-07T17:51:09.513876" elapsed="0.000101"/>
</branch>
<status status="PASS" start="2025-02-07T17:51:09.513867" elapsed="0.000124"/>
</if>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.514082" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.512674" elapsed="0.001484"/>
</test>
<test id="s1-s1-s3-t21" name="TP8" line="139">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.514488" elapsed="0.000089"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.514629" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.514385" elapsed="0.000323"/>
</kw>
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:09.515608" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${prix}</var>
<arg>13</arg>
<status status="FAIL" start="2025-02-07T17:51:09.515593" elapsed="0.000035">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>plein tarif</arg>
<arg>${prix}</arg>
<arg>test avec 13 en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.515709" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<kw name="Log To Console" owner="BuiltIn">
<arg>Ca a planté</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.515920" elapsed="0.000056"/>
</kw>
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.515841" elapsed="0.000161"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:09.514256" elapsed="0.001781">No keyword with name 'Calcul Tarif' found.</status>
</test>
<test id="s1-s1-s3-t22" name="TP9 verification tarif RATP" line="146">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.516403" elapsed="0.000092"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.516548" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.516300" elapsed="0.000329"/>
</kw>
<kw name="verification">
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:09.517623" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${prix}</var>
<arg>${age}</arg>
<status status="FAIL" start="2025-02-07T17:51:09.517609" elapsed="0.000031">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.517705" elapsed="0.000009"/>
</kw>
<arg>12</arg>
<arg>demi tarif</arg>
<status status="FAIL" start="2025-02-07T17:51:09.516704" elapsed="0.001074">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="verification">
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:09.518879" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${prix}</var>
<arg>${age}</arg>
<status status="FAIL" start="2025-02-07T17:51:09.518864" elapsed="0.000032">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.518957" elapsed="0.000009"/>
</kw>
<arg>11</arg>
<arg>demi tarif</arg>
<status status="FAIL" start="2025-02-07T17:51:09.517862" elapsed="0.001159">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="verification">
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:09.520000" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${prix}</var>
<arg>${age}</arg>
<status status="FAIL" start="2025-02-07T17:51:09.519987" elapsed="0.000030">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.520077" elapsed="0.000009"/>
</kw>
<arg>4</arg>
<arg>demi tarif</arg>
<status status="FAIL" start="2025-02-07T17:51:09.519101" elapsed="0.001037">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="verification">
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:09.521125" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${prix}</var>
<arg>${age}</arg>
<status status="FAIL" start="2025-02-07T17:51:09.521111" elapsed="0.000030">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.521200" elapsed="0.000009"/>
</kw>
<arg>2</arg>
<arg>demi tarif</arg>
<status status="FAIL" start="2025-02-07T17:51:09.520219" elapsed="0.001041">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<kw name="Log To Console" owner="BuiltIn">
<arg>Ca a planté</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.521470" elapsed="0.000059"/>
</kw>
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.521391" elapsed="0.000164"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:09.516144" elapsed="0.005445">Several failures occurred:

1) No keyword with name 'Calcul Tarif' found.

2) No keyword with name 'Calcul Tarif' found.

3) No keyword with name 'Calcul Tarif' found.

4) No keyword with name 'Calcul Tarif' found.</status>
</test>
<test id="s1-s1-s3-t23" name="Creation de list" line="154">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.521978" elapsed="0.000094"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.522125" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.521870" elapsed="0.000335"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-02-07T17:51:09.522356" level="INFO">@{liste} = [ il | fait | beau ]</msg>
<var>@{liste}</var>
<arg>il-fait-beau</arg>
<arg>separator=-</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.522270" elapsed="0.000098"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.522465" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.521725" elapsed="0.000817"/>
</test>
<test id="s1-s1-s3-t24" name="test concatenation 1" line="159">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.522886" elapsed="0.000086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.523024" elapsed="0.000055"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.522780" elapsed="0.000326"/>
</kw>
<kw name="concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.523398" level="INFO">${sortie} = Bonjour-Monsieur</msg>
<var>${sortie}</var>
<arg>SEPARATOR=-</arg>
<arg>${var1}</arg>
<arg>${var2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.523306" elapsed="0.000104"/>
</kw>
<return>
<value>${sortie}</value>
<status status="PASS" start="2025-02-07T17:51:09.523438" elapsed="0.000019"/>
</return>
<msg time="2025-02-07T17:51:09.523517" level="INFO">${ret} = Bonjour-Monsieur</msg>
<var>${ret}</var>
<arg>Bonjour</arg>
<arg>Monsieur</arg>
<status status="PASS" start="2025-02-07T17:51:09.523184" elapsed="0.000344"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>Bonjour-Monsieur</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.523597" elapsed="0.000079"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.523772" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.522639" elapsed="0.001206"/>
</test>
<test id="s1-s1-s3-t25" name="test concatenation 2" line="163">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.524185" elapsed="0.000089"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.524328" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.524081" elapsed="0.000326"/>
</kw>
<kw name="concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.524694" level="INFO">${sortie} = Bonjour-Madame</msg>
<var>${sortie}</var>
<arg>SEPARATOR=-</arg>
<arg>${var1}</arg>
<arg>${var2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.524604" elapsed="0.000103"/>
</kw>
<return>
<value>${sortie}</value>
<status status="PASS" start="2025-02-07T17:51:09.524733" elapsed="0.000014"/>
</return>
<msg time="2025-02-07T17:51:09.525438" level="INFO">${ret} = Bonjour-Madame</msg>
<var>${ret}</var>
<arg>Bonjour</arg>
<arg>Madame</arg>
<status status="PASS" start="2025-02-07T17:51:09.524484" elapsed="0.000966"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>Bonjour-Madame</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.525525" elapsed="0.000091"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.525715" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.523940" elapsed="0.001852"/>
</test>
<test id="s1-s1-s3-t26" name="test concatenation 3" line="167">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.526141" elapsed="0.000091"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.526284" elapsed="0.000051"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.526037" elapsed="0.000326"/>
</kw>
<kw name="concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.526654" level="INFO">${sortie} = Salut-Madame</msg>
<var>${sortie}</var>
<arg>SEPARATOR=-</arg>
<arg>${var1}</arg>
<arg>${var2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.526565" elapsed="0.000101"/>
</kw>
<return>
<value>${sortie}</value>
<status status="PASS" start="2025-02-07T17:51:09.526694" elapsed="0.000014"/>
</return>
<msg time="2025-02-07T17:51:09.526767" level="INFO">${ret} = Salut-Madame</msg>
<var>${ret}</var>
<arg>Salut</arg>
<arg>Madame</arg>
<status status="PASS" start="2025-02-07T17:51:09.526441" elapsed="0.000337"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>Salut-Madame</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.526847" elapsed="0.000080"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.527028" elapsed="0.000037"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.525890" elapsed="0.001210"/>
</test>
<test id="s1-s1-s3-t27" name="Test concatenation multiples" line="171">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.527454" elapsed="0.000088"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.527596" elapsed="0.000052"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.527345" elapsed="0.000331"/>
</kw>
<kw name="modele concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.527961" level="INFO">${ret} = Bonjour Monsieur</msg>
<var>${ret}</var>
<arg>${ent1}</arg>
<arg>${ent2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.527878" elapsed="0.000122"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>${sortie}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.528060" elapsed="0.000086"/>
</kw>
<arg>Bonjour</arg>
<arg>Monsieur</arg>
<arg>Bonjour Monsieur</arg>
<status status="PASS" start="2025-02-07T17:51:09.527748" elapsed="0.000429"/>
</kw>
<kw name="modele concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.528464" level="INFO">${ret} = Bonjour madame</msg>
<var>${ret}</var>
<arg>${ent1}</arg>
<arg>${ent2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.528382" elapsed="0.000095"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>${sortie}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.528532" elapsed="0.000088"/>
</kw>
<arg>Bonjour</arg>
<arg>madame</arg>
<arg>Bonjour madame</arg>
<status status="PASS" start="2025-02-07T17:51:09.528253" elapsed="0.000395"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.528748" elapsed="0.000039"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.527197" elapsed="0.001624"/>
</test>
<test id="s1-s1-s3-t28" name="nombres au hasard" line="176">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.529163" elapsed="0.000086"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.529302" elapsed="0.000055"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.529057" elapsed="0.000328"/>
</kw>
<kw name="Repeat Keyword" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.529492" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="nombre au hasard">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.529759" level="INFO">${random} = 3</msg>
<var>${random}</var>
<arg>random.randint(0, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.529670" elapsed="0.000100"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${random}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.529823" elapsed="0.000067"/>
</kw>
<return>
<value>${random}</value>
<status status="PASS" start="2025-02-07T17:51:09.529916" elapsed="0.000015"/>
</return>
<status status="PASS" start="2025-02-07T17:51:09.529562" elapsed="0.000413"/>
</kw>
<msg time="2025-02-07T17:51:09.529992" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="nombre au hasard">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.530384" level="INFO">${random} = 2</msg>
<var>${random}</var>
<arg>random.randint(0, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.530167" elapsed="0.000229"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${random}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.530452" elapsed="0.000070"/>
</kw>
<return>
<value>${random}</value>
<status status="PASS" start="2025-02-07T17:51:09.530546" elapsed="0.000014"/>
</return>
<status status="PASS" start="2025-02-07T17:51:09.530061" elapsed="0.000548"/>
</kw>
<msg time="2025-02-07T17:51:09.530625" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="nombre au hasard">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.530883" level="INFO">${random} = 0</msg>
<var>${random}</var>
<arg>random.randint(0, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.530801" elapsed="0.000094"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${random}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.530948" elapsed="0.000068"/>
</kw>
<return>
<value>${random}</value>
<status status="PASS" start="2025-02-07T17:51:09.531039" elapsed="0.000013"/>
</return>
<status status="PASS" start="2025-02-07T17:51:09.530695" elapsed="0.000402"/>
</kw>
<msg time="2025-02-07T17:51:09.531114" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="nombre au hasard">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.531365" level="INFO">${random} = 5</msg>
<var>${random}</var>
<arg>random.randint(0, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.531286" elapsed="0.000091"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${random}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.531428" elapsed="0.000065"/>
</kw>
<return>
<value>${random}</value>
<status status="PASS" start="2025-02-07T17:51:09.531515" elapsed="0.000013"/>
</return>
<status status="PASS" start="2025-02-07T17:51:09.531182" elapsed="0.000402"/>
</kw>
<msg time="2025-02-07T17:51:09.531602" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="nombre au hasard">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.531853" level="INFO">${random} = 2</msg>
<var>${random}</var>
<arg>random.randint(0, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.531774" elapsed="0.000091"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${random}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.531929" elapsed="0.000066"/>
</kw>
<return>
<value>${random}</value>
<status status="PASS" start="2025-02-07T17:51:09.532016" elapsed="0.000012"/>
</return>
<status status="PASS" start="2025-02-07T17:51:09.531673" elapsed="0.000397"/>
</kw>
<arg>5 times</arg>
<arg>nombre au hasard</arg>
<doc>Executes the specified keyword multiple times.</doc>
<status status="PASS" start="2025-02-07T17:51:09.529450" elapsed="0.002639"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.532382" elapsed="0.000133"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.528918" elapsed="0.003665"/>
</test>
<test id="s1-s1-s3-t29" name="nombre entre 1 et 10" line="180">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.533031" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.533204" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.532903" elapsed="0.000391"/>
</kw>
<kw name="nombre au hasard">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.533614" level="INFO">${random} = 0</msg>
<var>${random}</var>
<arg>random.randint(0, 10)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-02-07T17:51:09.533507" elapsed="0.000121"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${random}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.533720" elapsed="0.000079"/>
</kw>
<return>
<value>${random}</value>
<status status="PASS" start="2025-02-07T17:51:09.533824" elapsed="0.000018"/>
</return>
<msg time="2025-02-07T17:51:09.533908" level="INFO">${toto} = 0</msg>
<var>${toto}</var>
<status status="PASS" start="2025-02-07T17:51:09.533387" elapsed="0.000533"/>
</kw>
<if>
<branch type="IF" condition="${toto} &gt; 5">
<kw name="Log To Console" owner="BuiltIn">
<arg>superieur à 5</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.534062" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2025-02-07T17:51:09.533973" elapsed="0.000117"/>
</branch>
<status status="PASS" start="2025-02-07T17:51:09.533962" elapsed="0.000140"/>
</if>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.534200" elapsed="0.000045"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.532702" elapsed="0.001585"/>
</test>
<test id="s1-s1-s3-t30" name="test du modele" line="187">
<kw name="debut de test" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}debut du test: ${TEST_NAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.534647" elapsed="0.000093"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>initialisation de la liaison serie</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.534794" elapsed="0.000053"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.534535" elapsed="0.000341"/>
</kw>
<kw name="Modele">
<kw name="concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.535332" level="INFO">${sortie} = Bonjour-Monsieur</msg>
<var>${sortie}</var>
<arg>SEPARATOR=-</arg>
<arg>${var1}</arg>
<arg>${var2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.535235" elapsed="0.000109"/>
</kw>
<return>
<value>${sortie}</value>
<status status="PASS" start="2025-02-07T17:51:09.535372" elapsed="0.000167"/>
</return>
<msg time="2025-02-07T17:51:09.535604" level="INFO">${ret} = Bonjour-Monsieur</msg>
<var>${ret}</var>
<arg>${var1}</arg>
<arg>${var2}</arg>
<status status="PASS" start="2025-02-07T17:51:09.535099" elapsed="0.000517"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>${var3}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.535673" elapsed="0.000103"/>
</kw>
<arg>Bonjour</arg>
<arg>Monsieur</arg>
<arg>Bonjour-Monsieur</arg>
<status status="PASS" start="2025-02-07T17:51:09.534952" elapsed="0.000854"/>
</kw>
<kw name="Modele">
<kw name="concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.536260" level="INFO">${sortie} = Bonjour-Madame</msg>
<var>${sortie}</var>
<arg>SEPARATOR=-</arg>
<arg>${var1}</arg>
<arg>${var2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.536170" elapsed="0.000103"/>
</kw>
<return>
<value>${sortie}</value>
<status status="PASS" start="2025-02-07T17:51:09.536301" elapsed="0.000015"/>
</return>
<msg time="2025-02-07T17:51:09.536375" level="INFO">${ret} = Bonjour-Madame</msg>
<var>${ret}</var>
<arg>${var1}</arg>
<arg>${var2}</arg>
<status status="PASS" start="2025-02-07T17:51:09.536029" elapsed="0.000357"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>${var3}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.536442" elapsed="0.000087"/>
</kw>
<arg>Bonjour</arg>
<arg>Madame</arg>
<arg>Bonjour-Madame</arg>
<status status="PASS" start="2025-02-07T17:51:09.535886" elapsed="0.000673"/>
</kw>
<kw name="Run Keyword If Test Failed" owner="BuiltIn" type="TEARDOWN">
<arg>Log to console</arg>
<arg>Ca a planté</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.536666" elapsed="0.000041"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.534389" elapsed="0.002356"/>
</test>
<kw name="Run Keyword If Any Tests Failed" owner="BuiltIn" type="TEARDOWN">
<kw name="fin de suite">
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n}fin de la suite</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.537247" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.537103" elapsed="0.000314"/>
</kw>
<arg>fin de suite</arg>
<doc>Runs the given keyword with the given arguments, if one or more tests failed.</doc>
<status status="PASS" start="2025-02-07T17:51:09.536983" elapsed="0.000456"/>
</kw>
<doc>Ma suite qui fait pas grand chose
suite de la doc
suite 2</doc>
<status status="FAIL" start="2025-02-07T17:51:09.478542" elapsed="0.058915"/>
</suite>
<suite id="s1-s1-s4" name="testTemplate" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/testTemplate.robot">
<test id="s1-s1-s4-t1" name="Test1" line="5">
<kw name="Modele">
<kw name="concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.539662" level="INFO">${sortie} = Bonjour-Monsieur</msg>
<var>${sortie}</var>
<arg>SEPARATOR=-</arg>
<arg>${var1}</arg>
<arg>${var2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.539568" elapsed="0.000108"/>
</kw>
<return>
<value>${sortie}</value>
<status status="PASS" start="2025-02-07T17:51:09.539706" elapsed="0.000017"/>
</return>
<msg time="2025-02-07T17:51:09.539783" level="INFO">${ret} = Bonjour-Monsieur</msg>
<var>${ret}</var>
<arg>${var1}</arg>
<arg>${var2}</arg>
<status status="PASS" start="2025-02-07T17:51:09.539427" elapsed="0.000367"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>${var3}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.539847" elapsed="0.000089"/>
</kw>
<arg>Bonjour</arg>
<arg>Monsieur</arg>
<arg>Bonjour-Monsieur</arg>
<status status="PASS" start="2025-02-07T17:51:09.539272" elapsed="0.000694"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.539112" elapsed="0.000924"/>
</test>
<test id="s1-s1-s4-t2" name="Test2" line="6">
<kw name="Modele">
<kw name="concatenation">
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.540632" level="INFO">${sortie} = Bonjour-Madame</msg>
<var>${sortie}</var>
<arg>SEPARATOR=-</arg>
<arg>${var1}</arg>
<arg>${var2}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-02-07T17:51:09.540534" elapsed="0.000111"/>
</kw>
<return>
<value>${sortie}</value>
<status status="PASS" start="2025-02-07T17:51:09.540673" elapsed="0.000014"/>
</return>
<msg time="2025-02-07T17:51:09.540742" level="INFO">${ret} = Bonjour-Madame</msg>
<var>${ret}</var>
<arg>${var1}</arg>
<arg>${var2}</arg>
<status status="PASS" start="2025-02-07T17:51:09.540401" elapsed="0.000353"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${ret}</arg>
<arg>${var3}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:09.540804" elapsed="0.000091"/>
</kw>
<arg>Bonjour</arg>
<arg>Madame</arg>
<arg>Bonjour-Madame</arg>
<status status="PASS" start="2025-02-07T17:51:09.540259" elapsed="0.000665"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.540123" elapsed="0.000864"/>
</test>
<status status="PASS" start="2025-02-07T17:51:09.537876" elapsed="0.003234"/>
</suite>
<suite id="s1-s1-s5" name="Testvar" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/testvar.robot">
<test id="s1-s1-s5-t1" name="test1" line="5">
<kw name="Comparer un entier avec une chaine 2">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.543088" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<arg>${arg1}</arg>
<arg>${arg2}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-02-07T17:51:09.543012" elapsed="0.000108"/>
</kw>
<arg>80</arg>
<arg>${80}</arg>
<status status="PASS" start="2025-02-07T17:51:09.542729" elapsed="0.000423"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.542557" elapsed="0.000658"/>
</test>
<test id="s1-s1-s5-t2" name="test2" line="6">
<kw name="Comparer un entier avec une chaine 2">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-02-07T17:51:09.543767" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<arg>${arg1}</arg>
<arg>${arg2}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-02-07T17:51:09.543695" elapsed="0.000099"/>
</kw>
<arg>90</arg>
<arg>${90}</arg>
<status status="PASS" start="2025-02-07T17:51:09.543439" elapsed="0.000384"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.543305" elapsed="0.000580"/>
</test>
<status status="PASS" start="2025-02-07T17:51:09.541335" elapsed="0.002670"/>
</suite>
<suite id="s1-s1-s6" name="testVariabilise" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/testVariabilise.robot">
<test id="s1-s1-s6-t1" name="test avec 12 ans" line="8">
<kw name="verification" owner="bibli">
<kw name="Nouveau Nom">
<msg time="2025-02-07T17:51:09.553344" level="FAIL">No keyword with name 'Nouveau Nom' found.</msg>
<var>${prix}</var>
<arg>${age}</arg>
<status status="FAIL" start="2025-02-07T17:51:09.553329" elapsed="0.000035">No keyword with name 'Nouveau Nom' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.553438" elapsed="0.000010"/>
</kw>
<arg>12</arg>
<arg>plein tarif</arg>
<status status="FAIL" start="2025-02-07T17:51:09.552655" elapsed="0.000856">No keyword with name 'Nouveau Nom' found.</status>
</kw>
<status status="FAIL" start="2025-02-07T17:51:09.552467" elapsed="0.001137">No keyword with name 'Nouveau Nom' found.</status>
</test>
<test id="s1-s1-s6-t2" name="Test avec 6 ans" line="9">
<kw name="verification" owner="bibli">
<kw name="Nouveau Nom">
<msg time="2025-02-07T17:51:09.554468" level="FAIL">No keyword with name 'Nouveau Nom' found.</msg>
<var>${prix}</var>
<arg>${age}</arg>
<status status="FAIL" start="2025-02-07T17:51:09.554455" elapsed="0.000030">No keyword with name 'Nouveau Nom' found.</status>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:09.554551" elapsed="0.000010"/>
</kw>
<arg>6</arg>
<arg>demi tarif</arg>
<status status="FAIL" start="2025-02-07T17:51:09.553852" elapsed="0.000762">No keyword with name 'Nouveau Nom' found.</status>
</kw>
<status status="FAIL" start="2025-02-07T17:51:09.553701" elapsed="0.000997">No keyword with name 'Nouveau Nom' found.</status>
</test>
<doc>Ma suite qui fait pas grand chose</doc>
<status status="FAIL" start="2025-02-07T17:51:09.544224" elapsed="0.010608"/>
</suite>
<suite id="s1-s1-s7" name="UtilisationBibli" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/UtilisationBibli.robot">
<kw name="rien suite" type="SETUP">
<msg time="2025-02-07T17:51:09.559331" level="FAIL">No keyword with name 'rien suite' found.</msg>
<status status="FAIL" start="2025-02-07T17:51:09.559315" elapsed="0.000036">No keyword with name 'rien suite' found.</status>
</kw>
<test id="s1-s1-s7-t1" name="test_tarif6" line="7">
<status status="FAIL" start="2025-02-07T17:51:09.559390" elapsed="0.000140">Parent suite setup failed:
No keyword with name 'rien suite' found.</status>
</test>
<test id="s1-s1-s7-t2" name="test_tarif11" line="10">
<status status="FAIL" start="2025-02-07T17:51:09.559624" elapsed="0.000117">Parent suite setup failed:
No keyword with name 'rien suite' found.</status>
</test>
<status status="FAIL" start="2025-02-07T17:51:09.555076" elapsed="0.004791">Suite setup failed:
No keyword with name 'rien suite' found.</status>
</suite>
<suite id="s1-s1-s8" name="UtilisationDialogs" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/UtilisationDialogs.robot">
<kw name="creation repertoire" type="SETUP">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-02-07T17:51:09.609146" level="INFO" html="true">Directory '&lt;a href="file:///Users/dominiquemereaux/code/TPSEPT2023/screenshots"&gt;/Users/dominiquemereaux/code/TPSEPT2023/screenshots&lt;/a&gt;' already exists.</msg>
<arg>${EXECDIR}/screenshots</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-02-07T17:51:09.609040" elapsed="0.000139"/>
</kw>
<kw name="Set Screenshot Directory" owner="Screenshot">
<arg>${EXECDIR}/screenshots</arg>
<doc>Sets the directory where screenshots are saved.</doc>
<status status="PASS" start="2025-02-07T17:51:09.609242" elapsed="0.000340"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.608855" elapsed="0.000762"/>
</kw>
<test id="s1-s1-s8-t1" name="au hasard" line="13">
<kw name="Generate Random String" owner="String">
<msg time="2025-02-07T17:51:09.609941" level="INFO">${x} = 9</msg>
<var>${x}</var>
<arg>1</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2025-02-07T17:51:09.609811" elapsed="0.000143"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${x}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:09.610033" elapsed="0.000078"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.609650" elapsed="0.000525"/>
</test>
<test id="s1-s1-s8-t2" name="TP2: essai" line="16">
<kw name="Execute Manual Step" owner="Dialogs">
<arg>verifier</arg>
<arg>message error</arg>
<doc>Pauses execution until user sets the keyword status.</doc>
<status status="PASS" start="2025-02-07T17:51:09.610401" elapsed="2.831189"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:09.610268" elapsed="2.831745"/>
</test>
<test id="s1-s1-s8-t3" name="TP3: essai" line="19">
<kw name="Execute Manual Step" owner="Dialogs">
<arg>verifier</arg>
<arg>message error</arg>
<doc>Pauses execution until user sets the keyword status.</doc>
<status status="PASS" start="2025-02-07T17:51:12.442760" elapsed="1.172608"/>
</kw>
<kw name="Take Screenshot" owner="Screenshot">
<msg time="2025-02-07T17:51:13.819690" level="INFO" html="true">&lt;a href="screenshots/tto_4.jpg"&gt;&lt;img src="screenshots/tto_4.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<arg>tto</arg>
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<status status="PASS" start="2025-02-07T17:51:13.616017" elapsed="0.203927"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:12.442273" elapsed="1.378011"/>
</test>
<test id="s1-s1-s8-t4" name="essai Timeout" line="23">
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-02-07T17:51:17.821982" level="FAIL">Test timeout 4 seconds exceeded.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="FAIL" start="2025-02-07T17:51:13.820956" elapsed="4.001264">Test timeout 4 seconds exceeded.</status>
</kw>
<timeout value="4 seconds"/>
<status status="FAIL" start="2025-02-07T17:51:13.820563" elapsed="4.002555">Test timeout 4 seconds exceeded.</status>
</test>
<test id="s1-s1-s8-t5" name="TP2: recuperer" line="27">
<kw name="Set Log Level" owner="BuiltIn">
<arg>WARN</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2025-02-07T17:51:17.824742" elapsed="0.010567"/>
</kw>
<kw name="Get Value From User" owner="Dialogs">
<var>${x}</var>
<arg>mot de passe</arg>
<arg>hidden=True</arg>
<doc>Pauses execution and asks user to input a value.</doc>
<status status="PASS" start="2025-02-07T17:51:17.835699" elapsed="3.245314"/>
</kw>
<kw name="Reset Log Level" owner="BuiltIn">
<doc>Resets the log level to the original value.</doc>
<status status="PASS" start="2025-02-07T17:51:21.081926" elapsed="0.000609"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:17.823713" elapsed="3.259004"/>
</test>
<test id="s1-s1-s8-t6" name="TP2-Optionnel essai 2" line="32">
<kw name="Get Selections From User" owner="Dialogs">
<msg time="2025-02-07T17:51:23.930003" level="INFO">@{users} = [ user1 ]</msg>
<var>@{users}</var>
<arg>Select users</arg>
<arg>user1</arg>
<arg>user2</arg>
<arg>admin</arg>
<doc>Pauses execution and asks user to select multiple values.</doc>
<status status="PASS" start="2025-02-07T17:51:21.083445" elapsed="2.846681"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.931413" elapsed="0.000349"/>
</kw>
<var name="${elt}">user1</var>
<status status="PASS" start="2025-02-07T17:51:23.931065" elapsed="0.000749"/>
</iter>
<var>${elt}</var>
<value>@{users}</value>
<status status="PASS" start="2025-02-07T17:51:23.930574" elapsed="0.001286"/>
</for>
<status status="PASS" start="2025-02-07T17:51:21.082965" elapsed="2.849153"/>
</test>
<test id="s1-s1-s8-t7" name="TP4 décomposer une chaine de caractères" line="38">
<kw name="Split String" owner="String">
<msg time="2025-02-07T17:51:23.933176" level="INFO">@{mots} = [ Il | etait | une | fois ]</msg>
<var>@{mots}</var>
<arg>Il etait une fois</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-02-07T17:51:23.932979" elapsed="0.000221"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n} mot:${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.933498" elapsed="0.000190"/>
</kw>
<var name="${elt}">Il</var>
<status status="PASS" start="2025-02-07T17:51:23.933414" elapsed="0.000307"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n} mot:${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.933866" elapsed="0.000161"/>
</kw>
<var name="${elt}">etait</var>
<status status="PASS" start="2025-02-07T17:51:23.933794" elapsed="0.000264"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n} mot:${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.934202" elapsed="0.000170"/>
</kw>
<var name="${elt}">une</var>
<status status="PASS" start="2025-02-07T17:51:23.934126" elapsed="0.000294"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n} mot:${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.934623" elapsed="0.000171"/>
</kw>
<var name="${elt}">fois</var>
<status status="PASS" start="2025-02-07T17:51:23.934530" elapsed="0.000296"/>
</iter>
<var>${elt}</var>
<value>@{mots}</value>
<status status="PASS" start="2025-02-07T17:51:23.933287" elapsed="0.001565"/>
</for>
<status status="PASS" start="2025-02-07T17:51:23.932432" elapsed="0.002545"/>
</test>
<test id="s1-s1-s8-t8" name="TP4_optionnel" line="43">
<kw name="Split String" owner="String">
<msg time="2025-02-07T17:51:23.935650" level="INFO">@{mots} = [ Il | etait | une fois ]</msg>
<var>@{mots}</var>
<arg>Il etait une fois</arg>
<arg>max_split=2</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-02-07T17:51:23.935465" elapsed="0.000205"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n} mot:${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.935916" elapsed="0.000142"/>
</kw>
<var name="${elt}">Il</var>
<status status="PASS" start="2025-02-07T17:51:23.935845" elapsed="0.000243"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n} mot:${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.936218" elapsed="0.000153"/>
</kw>
<var name="${elt}">etait</var>
<status status="PASS" start="2025-02-07T17:51:23.936150" elapsed="0.000252"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${\n} mot:${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:23.936530" elapsed="0.000354"/>
</kw>
<var name="${elt}">une fois</var>
<status status="PASS" start="2025-02-07T17:51:23.936463" elapsed="0.000487"/>
</iter>
<var>${elt}</var>
<value>@{mots}</value>
<status status="PASS" start="2025-02-07T17:51:23.935745" elapsed="0.001239"/>
</for>
<status status="PASS" start="2025-02-07T17:51:23.935145" elapsed="0.001997"/>
</test>
<test id="s1-s1-s8-t9" name="TEST1" line="48">
<kw name="Saisie Mot de passe">
<if>
<branch type="IF" condition="&quot;${PWD}&quot;==&quot;&quot;">
<kw name="Get Value From User" owner="Dialogs">
<msg time="2025-02-07T17:51:26.845751" level="INFO">${PWD} = fdfs</msg>
<var>${PWD}</var>
<arg>saisie du mot de passe</arg>
<doc>Pauses execution and asks user to input a value.</doc>
<status status="PASS" start="2025-02-07T17:51:23.938283" elapsed="2.907575"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:23.938047" elapsed="2.907968"/>
</branch>
<status status="PASS" start="2025-02-07T17:51:23.938017" elapsed="2.908075"/>
</if>
<status status="PASS" start="2025-02-07T17:51:23.937810" elapsed="2.908446"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:23.937330" elapsed="2.909290"/>
</test>
<status status="FAIL" start="2025-02-07T17:51:09.560097" elapsed="17.287179"/>
</suite>
<status status="FAIL" start="2025-02-07T17:51:09.446531" elapsed="17.401973"/>
</suite>
<suite id="s1-s2" name="Bibli" source="/Users/dominiquemereaux/code/TPSEPT2023/bibli">
<suite id="s1-s2-s1" name="Tarif" source="/Users/dominiquemereaux/code/TPSEPT2023/bibli/tarif.robot">
<test id="s1-s2-s1-t1" name="age" line="5">
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:26.863938" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${s}</var>
<arg>12</arg>
<status status="FAIL" start="2025-02-07T17:51:26.863897" elapsed="0.000089">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${s}</arg>
<arg>2</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.864128" elapsed="0.000018"/>
</kw>
<kw name="modif age">
<arg>14</arg>
<status status="NOT RUN" start="2025-02-07T17:51:26.864770" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${s}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.864878" elapsed="0.000013"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.862899" elapsed="0.002128">No keyword with name 'Calcul Tarif' found.</status>
</test>
<test id="s1-s2-s1-t2" name="age2" line="11">
<kw name="Calcul Tarif">
<msg time="2025-02-07T17:51:26.865942" level="FAIL">No keyword with name 'Calcul Tarif' found.</msg>
<var>${s}</var>
<arg>13</arg>
<status status="FAIL" start="2025-02-07T17:51:26.865923" elapsed="0.000044">No keyword with name 'Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${s}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.866094" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${s}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.866189" elapsed="0.000012"/>
</kw>
<kw name="recup age">
<var>${age}</var>
<status status="NOT RUN" start="2025-02-07T17:51:26.866800" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${age}</arg>
<arg>14</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.866902" elapsed="0.000012"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.865170" elapsed="0.001945">No keyword with name 'Calcul Tarif' found.</status>
</test>
<test id="s1-s2-s1-t3" name="arguments" line="18">
<kw name="Any Arguments">
<msg time="2025-02-07T17:51:26.868024" level="FAIL">No keyword with name 'Any Arguments' found.</msg>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>bonjour</arg>
<status status="FAIL" start="2025-02-07T17:51:26.868008" elapsed="0.000036">No keyword with name 'Any Arguments' found.</status>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.867253" elapsed="0.000902">No keyword with name 'Any Arguments' found.</status>
</test>
<test id="s1-s2-s1-t4" name="test2" line="21">
<kw name="Skippy">
<msg time="2025-02-07T17:51:26.868760" level="FAIL">No keyword with name 'Skippy' found. Did you mean:
    BuiltIn.Skip</msg>
<status status="FAIL" start="2025-02-07T17:51:26.868744" elapsed="0.000037">No keyword with name 'Skippy' found. Did you mean:
    BuiltIn.Skip</status>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.868265" elapsed="0.000613">No keyword with name 'Skippy' found. Did you mean:
    BuiltIn.Skip</status>
</test>
<status status="FAIL" start="2025-02-07T17:51:26.852711" elapsed="0.016343"/>
</suite>
<suite id="s1-s2-s2" name="testRatp" source="/Users/dominiquemereaux/code/TPSEPT2023/bibli/testRatp.robot">
<test id="s1-s2-s2-t1" name="jeune" line="5">
<kw name="wrapper_ratp.Wrapper Calcul Tarif">
<msg time="2025-02-07T17:51:26.874494" level="FAIL">No keyword with name 'wrapper_ratp.Wrapper Calcul Tarif' found.</msg>
<var>${tarif}</var>
<arg>${9}</arg>
<status status="FAIL" start="2025-02-07T17:51:26.874476" elapsed="0.000043">No keyword with name 'wrapper_ratp.Wrapper Calcul Tarif' found.</status>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${tarif}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.874614" elapsed="0.000013"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.873601" elapsed="0.001126">No keyword with name 'wrapper_ratp.Wrapper Calcul Tarif' found.</status>
</test>
<status status="FAIL" start="2025-02-07T17:51:26.869308" elapsed="0.005566"/>
</suite>
<suite id="s1-s2-s3" name="UtilRatp" source="/Users/dominiquemereaux/code/TPSEPT2023/bibli/UtilRatp.robot">
<test id="s1-s2-s3-t1" name="vérification import" line="5">
<kw name="Get Limit">
<msg time="2025-02-07T17:51:26.879724" level="FAIL">No keyword with name 'Get Limit' found.</msg>
<var>${lim}</var>
<status status="FAIL" start="2025-02-07T17:51:26.879708" elapsed="0.000036">No keyword with name 'Get Limit' found.</status>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${lim}</arg>
<arg>11</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.879825" elapsed="0.000011"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.878813" elapsed="0.001111">No keyword with name 'Get Limit' found.</status>
</test>
<test id="s1-s2-s3-t2" name="appel du tarif" line="8">
<kw name="tarif 2024">
<msg time="2025-02-07T17:51:26.880582" level="FAIL">No keyword with name 'tarif 2024' found.</msg>
<var>${val}</var>
<arg>10</arg>
<status status="FAIL" start="2025-02-07T17:51:26.880569" elapsed="0.000031">No keyword with name 'tarif 2024' found.</status>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${val}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:26.880674" elapsed="0.000010"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.880024" elapsed="0.000740">No keyword with name 'tarif 2024' found.</status>
</test>
<test id="s1-s2-s3-t3" name="test du skip" line="11">
<kw name="Skippy">
<msg time="2025-02-07T17:51:26.881252" level="FAIL">No keyword with name 'Skippy' found. Did you mean:
    BuiltIn.Skip</msg>
<arg>titi</arg>
<status status="FAIL" start="2025-02-07T17:51:26.881239" elapsed="0.000032">No keyword with name 'Skippy' found. Did you mean:
    BuiltIn.Skip</status>
</kw>
<status status="FAIL" start="2025-02-07T17:51:26.880859" elapsed="0.000499">No keyword with name 'Skippy' found. Did you mean:
    BuiltIn.Skip</status>
</test>
<status status="FAIL" start="2025-02-07T17:51:26.875112" elapsed="0.006376"/>
</suite>
<status status="FAIL" start="2025-02-07T17:51:26.849272" elapsed="0.032482"/>
</suite>
<suite id="s1-s3" name="Rest3" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3">
<suite id="s1-s3-s1" name="chuckNorris" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3/chuckNorris.robot">
<kw name="Session Chuck" owner="chuckNorris" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.017377" level="INFO">Creating Session using : alias=Chuck, url=https://api.chucknorris.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>${SESSION_NAME}</arg>
<arg>${ENDPOINT}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T17:51:27.017111" elapsed="0.000437"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:27.016903" elapsed="0.000692"/>
</kw>
<test id="s1-s3-s1-t1" name="Test Blague au hasard" line="7">
<kw name="Blague au hasard" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.208654" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random 
 path_url=/jokes/random 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.208798" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e27ecb9699cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17136&amp;min_rtt=16981&amp;rtt_var=6679&amp;sent=4&amp;recv=6&amp;lost=0&amp;retrans=0&amp;sent_bytes=2850&amp;recv_bytes=780&amp;delivery_rate=158902&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=116&amp;x=0"'} 
 body={"categories":[],"created_at":"2020-01-05 13:42:25.905626","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"KDyTy_qVT1mnwjJDPFin6Q","updated_at":"2020-01-05 13:42:25.905626","url":"https://api.chucknorris.io/jokes/KDyTy_qVT1mnwjJDPFin6Q","value":"Chuck Norris can eat his own head and still have room for dessert"} 
 </msg>
<msg time="2025-02-07T17:51:27.208975" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.018035" elapsed="0.190965"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-02-07T17:51:27.209876" level="INFO">${toto} = Chuck Norris can eat his own head and still have room for dessert</msg>
<var>${toto}</var>
<arg>${resp.json()}</arg>
<arg>value</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.209183" elapsed="0.000819"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${toto}</arg>
<arg>${resp.json()}[value]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.210135" elapsed="0.000576"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2025-02-07T17:51:27.231022" level="INFO">${titi} = ['Chuck Norris can eat his own head and still have room for dessert']</msg>
<var>${titi}</var>
<arg>${resp.json()}</arg>
<arg>$.value</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2025-02-07T17:51:27.210834" elapsed="0.020208"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${titi}[0]</arg>
<arg>${resp.json()}[value]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.231130" elapsed="0.000375"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<status status="PASS" start="2025-02-07T17:51:27.231545" elapsed="0.000035"/>
</return>
<msg time="2025-02-07T17:51:27.231880" level="INFO">${blague} = Chuck Norris can eat his own head and still have room for dessert</msg>
<var>${blague}</var>
<status status="PASS" start="2025-02-07T17:51:27.017894" elapsed="0.214000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.231997" elapsed="0.000116"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:27.017657" elapsed="0.214545"/>
</test>
<test id="s1-s3-s1-t2" name="test Blague animal" line="11">
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.232873" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.232692" elapsed="0.000195"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.288812" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.288876" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e27fac5c99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17355&amp;min_rtt=16981&amp;rtt_var=5447&amp;sent=7&amp;recv=8&amp;lost=0&amp;retrans=0&amp;sent_bytes=4716&amp;recv_bytes=979&amp;delivery_rate=229975&amp;cwnd=249&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=198&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"zjuwql5ns-mklqumqezlhg","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/zjuwql5ns-mklqumqezlhg","value":"Chuck Norris can skeletize a cow in two minutes."} 
 </msg>
<msg time="2025-02-07T17:51:27.288968" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.232952" elapsed="0.056035"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.289042" elapsed="0.000029"/>
</return>
<msg time="2025-02-07T17:51:27.289818" level="INFO">${blague} = Chuck Norris can skeletize a cow in two minutes.</msg>
<msg time="2025-02-07T17:51:27.289848" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>animal</arg>
<status status="PASS" start="2025-02-07T17:51:27.232528" elapsed="0.057335"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>animal</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.289996" elapsed="0.000140"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.290240" elapsed="0.000128"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:27.232314" elapsed="0.058155"/>
</test>
<test id="s1-s3-s1-t3" name="Tester une blague de chaque catégorie" line="16">
<kw name="recupérer la liste des catégories" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.343884" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/categories 
 path_url=/jokes/categories 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.344021" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/categories 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2800cae99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17518&amp;min_rtt=16981&amp;rtt_var=4411&amp;sent=9&amp;recv=10&amp;lost=0&amp;retrans=0&amp;sent_bytes=6086&amp;recv_bytes=1166&amp;delivery_rate=229975&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=249&amp;x=0"'} 
 body=["animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel"] 
 </msg>
<msg time="2025-02-07T17:51:27.344197" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${CATEGORIES}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.291067" elapsed="0.053158"/>
</kw>
<return>
<value>${resp.json()}</value>
<status status="PASS" start="2025-02-07T17:51:27.344526" elapsed="0.000075"/>
</return>
<msg time="2025-02-07T17:51:27.345395" level="INFO">@{liste_cat} = [ animal | career | celebrity | dev | explicit | fashion | food | history | money | movie | music | political | religion | science | sport | travel ]</msg>
<var>@{liste_cat}</var>
<status status="PASS" start="2025-02-07T17:51:27.290897" elapsed="0.054527"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.346873" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.346535" elapsed="0.000363"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.402048" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.402282" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2806d1299cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17645&amp;min_rtt=16981&amp;rtt_var=3562&amp;sent=11&amp;recv=12&amp;lost=0&amp;retrans=0&amp;sent_bytes=7367&amp;recv_bytes=1365&amp;delivery_rate=229975&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=309&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"bmom6jqftpqgokh8adtolw","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/bmom6jqftpqgokh8adtolw","value":"Chuck Norris once rode a nine foot grizzly bear through an automatic car wash, instead of taking a shower."} 
 </msg>
<msg time="2025-02-07T17:51:27.402612" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.347028" elapsed="0.055638"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.402873" elapsed="0.000119"/>
</return>
<msg time="2025-02-07T17:51:27.404737" level="INFO">${blague} = Chuck Norris once rode a nine foot grizzly bear through an automatic car wash, instead of taking a shower.</msg>
<msg time="2025-02-07T17:51:27.404787" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.346123" elapsed="0.058693"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.405033" elapsed="0.000254"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.405413" elapsed="0.000788"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.406335" elapsed="0.000218"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.406677" elapsed="0.000209"/>
</kw>
<var name="${elt}">animal</var>
<status status="PASS" start="2025-02-07T17:51:27.345886" elapsed="0.061065"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.408077" level="INFO">&amp;{dict} = { category=career }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.407743" elapsed="0.000359"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.460930" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=career 
 path_url=/jokes/random?category=career 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.461101" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=career 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e280cd6b99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18365&amp;min_rtt=16981&amp;rtt_var=4111&amp;sent=13&amp;recv=14&amp;lost=0&amp;retrans=0&amp;sent_bytes=8776&amp;recv_bytes=1564&amp;delivery_rate=229975&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=370&amp;x=0"'} 
 body={"categories":["career"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"zk14uc6xr82d7ig9qhaymg","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/zk14uc6xr82d7ig9qhaymg","value":"Chuck Norris is actually the front man for Apple. He let's Steve Jobs run the show when he's on a mission. Chuck Norris is always on a mission."} 
 </msg>
<msg time="2025-02-07T17:51:27.461420" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.408218" elapsed="0.053232"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.461615" elapsed="0.000105"/>
</return>
<msg time="2025-02-07T17:51:27.463010" level="INFO">${blague} = Chuck Norris is actually the front man for Apple. He let's Steve Jobs run the show when he's on a mission. Chuck Norris is always on a mission.</msg>
<msg time="2025-02-07T17:51:27.463053" level="INFO">${cat} = ['career']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.407362" elapsed="0.055711"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.463346" elapsed="0.000330"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.463869" elapsed="0.000198"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.464199" elapsed="0.000226"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.464558" elapsed="0.000207"/>
</kw>
<var name="${elt}">career</var>
<status status="PASS" start="2025-02-07T17:51:27.407129" elapsed="0.057687"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.465745" level="INFO">&amp;{dict} = { category=celebrity }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.465502" elapsed="0.000267"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.518851" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 path_url=/jokes/random?category=celebrity 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.519044" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2812dc099cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18199&amp;min_rtt=16978&amp;rtt_var=3414&amp;sent=16&amp;recv=16&amp;lost=0&amp;retrans=0&amp;sent_bytes=10224&amp;recv_bytes=1766&amp;delivery_rate=254929&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=428&amp;x=0"'} 
 body={"categories":["celebrity"],"created_at":"2020-01-05 13:42:28.420821","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"qlg0kzTbS4K_jG1yoNSDEA","updated_at":"2020-01-05 13:42:28.420821","url":"https://api.chucknorris.io/jokes/qlg0kzTbS4K_jG1yoNSDEA","value":"Chuck Norris can understand Charlie Sheen."} 
 </msg>
<msg time="2025-02-07T17:51:27.519399" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.465874" elapsed="0.053589"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.519657" elapsed="0.000156"/>
</return>
<msg time="2025-02-07T17:51:27.522076" level="INFO">${blague} = Chuck Norris can understand Charlie Sheen.</msg>
<msg time="2025-02-07T17:51:27.522166" level="INFO">${cat} = ['celebrity']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.465161" elapsed="0.057053"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.522543" elapsed="0.000416"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.523176" elapsed="0.000177"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.523455" elapsed="0.000162"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.523715" elapsed="0.000150"/>
</kw>
<var name="${elt}">celebrity</var>
<status status="PASS" start="2025-02-07T17:51:27.464985" elapsed="0.058915"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.524597" level="INFO">&amp;{dict} = { category=dev }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.524391" elapsed="0.000229"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.604056" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=dev 
 path_url=/jokes/random?category=dev 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.604289" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=dev 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2817e1999cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17802&amp;min_rtt=14933&amp;rtt_var=3354&amp;sent=18&amp;recv=18&amp;lost=0&amp;retrans=0&amp;sent_bytes=11604&amp;recv_bytes=1962&amp;delivery_rate=254929&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=487&amp;x=0"'} 
 body={"categories":["dev"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"aybvxdnmr82jc_jssvkegw","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/aybvxdnmr82jc_jssvkegw","value":"When Chuck Norris throws exceptions, it's across the room."} 
 </msg>
<msg time="2025-02-07T17:51:27.604792" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.524717" elapsed="0.080127"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.605038" elapsed="0.000123"/>
</return>
<msg time="2025-02-07T17:51:27.607235" level="INFO">${blague} = When Chuck Norris throws exceptions, it's across the room.</msg>
<msg time="2025-02-07T17:51:27.607276" level="INFO">${cat} = ['dev']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.524140" elapsed="0.083160"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.607493" elapsed="0.000233"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.607828" elapsed="0.000138"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.608074" elapsed="0.000181"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.608362" elapsed="0.000178"/>
</kw>
<var name="${elt}">dev</var>
<status status="PASS" start="2025-02-07T17:51:27.524013" elapsed="0.084569"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.609913" level="INFO">&amp;{dict} = { category=explicit }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.609194" elapsed="0.000739"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.666126" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=explicit 
 path_url=/jokes/random?category=explicit 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.666396" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=explicit 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2820e8199cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=21077&amp;min_rtt=14933&amp;rtt_var=9065&amp;sent=21&amp;recv=21&amp;lost=0&amp;retrans=1&amp;sent_bytes=13011&amp;recv_bytes=2163&amp;delivery_rate=254929&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=571&amp;x=0"'} 
 body={"categories":["explicit"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"zEcP3zuTR8eDyFw9K0SrEQ","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/zEcP3zuTR8eDyFw9K0SrEQ","value":"You better watch out, you better not cry; you better not pout, I'm telling you why - Chuck Norris is coming to kill you. And have sex with every female member of your family."} 
 </msg>
<msg time="2025-02-07T17:51:27.666844" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.610030" elapsed="0.056870"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.667141" elapsed="0.000131"/>
</return>
<msg time="2025-02-07T17:51:27.668475" level="INFO">${blague} = You better watch out, you better not cry; you better not pout, I'm telling you why - Chuck Norris is coming to kill you. And have sex with every female member of your family.</msg>
<msg time="2025-02-07T17:51:27.668518" level="INFO">${cat} = ['explicit']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.608902" elapsed="0.059635"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.668799" elapsed="0.000292"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.669187" elapsed="0.000270"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.669630" elapsed="0.000223"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.669973" elapsed="0.000214"/>
</kw>
<var name="${elt}">explicit</var>
<status status="PASS" start="2025-02-07T17:51:27.608729" elapsed="0.061513"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.671319" level="INFO">&amp;{dict} = { category=fashion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.671036" elapsed="0.000309"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.720046" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=fashion 
 path_url=/jokes/random?category=fashion 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.720210" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=fashion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2826edc99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=21001&amp;min_rtt=14933&amp;rtt_var=6951&amp;sent=24&amp;recv=23&amp;lost=0&amp;retrans=1&amp;sent_bytes=14488&amp;recv_bytes=2363&amp;delivery_rate=254929&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=630&amp;x=0"'} 
 body={"categories":["fashion"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0wdewlp2tz-mt_upesvrjw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0wdewlp2tz-mt_upesvrjw","value":"Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris."} 
 </msg>
<msg time="2025-02-07T17:51:27.720433" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.671444" elapsed="0.049038"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.720623" elapsed="0.000099"/>
</return>
<msg time="2025-02-07T17:51:27.722407" level="INFO">${blague} = Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris.</msg>
<msg time="2025-02-07T17:51:27.722472" level="INFO">${cat} = ['fashion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.670685" elapsed="0.051820"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.722758" elapsed="0.000300"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.723227" elapsed="0.000214"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.723602" elapsed="0.000270"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.724028" elapsed="0.000300"/>
</kw>
<var name="${elt}">fashion</var>
<status status="PASS" start="2025-02-07T17:51:27.670508" elapsed="0.053885"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.725384" level="INFO">&amp;{dict} = { category=food }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.725093" elapsed="0.000314"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.777193" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=food 
 path_url=/jokes/random?category=food 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.777446" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=food 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e282bf3699cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=20570&amp;min_rtt=14933&amp;rtt_var=6076&amp;sent=27&amp;recv=25&amp;lost=0&amp;retrans=1&amp;sent_bytes=15939&amp;recv_bytes=2560&amp;delivery_rate=254929&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=686&amp;x=0"'} 
 body={"categories":["food"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"egthskxhteihhte-olhghg","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/egthskxhteihhte-olhghg","value":"Chuck Norris likes his coffee half and half: half coffee grounds, half wood-grain alcohol."} 
 </msg>
<msg time="2025-02-07T17:51:27.777802" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.725526" elapsed="0.052333"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.778109" elapsed="0.000144"/>
</return>
<msg time="2025-02-07T17:51:27.780581" level="INFO">${blague} = Chuck Norris likes his coffee half and half: half coffee grounds, half wood-grain alcohol.</msg>
<msg time="2025-02-07T17:51:27.780668" level="INFO">${cat} = ['food']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.724742" elapsed="0.055973"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.781156" elapsed="0.000259"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.781590" elapsed="0.000123"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.781811" elapsed="0.000173"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.782085" elapsed="0.000164"/>
</kw>
<var name="${elt}">food</var>
<status status="PASS" start="2025-02-07T17:51:27.724563" elapsed="0.057725"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.783053" level="INFO">&amp;{dict} = { category=history }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.782829" elapsed="0.000246"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.833081" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=history 
 path_url=/jokes/random?category=history 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.833213" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=history 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2831f8e99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=20133&amp;min_rtt=14933&amp;rtt_var=5430&amp;sent=30&amp;recv=27&amp;lost=0&amp;retrans=1&amp;sent_bytes=17361&amp;recv_bytes=2760&amp;delivery_rate=254929&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=742&amp;x=0"'} 
 body={"categories":["history"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"3qr6hlt6rouy2t2jtlnzzw","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/3qr6hlt6rouy2t2jtlnzzw","value":"The Great Wall of China was originally created to keep Chuck Norris out. It failed miserably."} 
 </msg>
<msg time="2025-02-07T17:51:27.833382" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.783169" elapsed="0.050242"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.833523" elapsed="0.000074"/>
</return>
<msg time="2025-02-07T17:51:27.834861" level="INFO">${blague} = The Great Wall of China was originally created to keep Chuck Norris out. It failed miserably.</msg>
<msg time="2025-02-07T17:51:27.834909" level="INFO">${cat} = ['history']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.782556" elapsed="0.052376"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.835129" elapsed="0.000252"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.835502" elapsed="0.000669"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.836311" elapsed="0.000223"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.836652" elapsed="0.000200"/>
</kw>
<var name="${elt}">history</var>
<status status="PASS" start="2025-02-07T17:51:27.782408" elapsed="0.054564"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.837979" level="INFO">&amp;{dict} = { category=money }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.837698" elapsed="0.000308"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.889663" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=money 
 path_url=/jokes/random?category=money 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.889854" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=money 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2837fec99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19724&amp;min_rtt=14933&amp;rtt_var=4892&amp;sent=32&amp;recv=29&amp;lost=0&amp;retrans=1&amp;sent_bytes=18769&amp;recv_bytes=2958&amp;delivery_rate=254929&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=798&amp;x=0"'} 
 body={"categories":["money"],"created_at":"2020-01-05 13:42:28.420821","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"L1GsWHngRoSW1UPXidGQgg","updated_at":"2020-05-22 06:16:41.133769","url":"https://api.chucknorris.io/jokes/L1GsWHngRoSW1UPXidGQgg","value":"Chuck Norris is the true Sultan of Swing. He also gets his money for nothing, and his chicks for free."} 
 </msg>
<msg time="2025-02-07T17:51:27.890189" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.838128" elapsed="0.052097"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.890529" elapsed="0.000106"/>
</return>
<msg time="2025-02-07T17:51:27.891977" level="INFO">${blague} = Chuck Norris is the true Sultan of Swing. He also gets his money for nothing, and his chicks for free.</msg>
<msg time="2025-02-07T17:51:27.892026" level="INFO">${cat} = ['money']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.837336" elapsed="0.054716"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.892328" elapsed="0.000328"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.892774" elapsed="0.000162"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.893061" elapsed="0.000214"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.893392" elapsed="0.000236"/>
</kw>
<var name="${elt}">money</var>
<status status="PASS" start="2025-02-07T17:51:27.837149" elapsed="0.056524"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.894787" level="INFO">&amp;{dict} = { category=movie }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.894489" elapsed="0.000323"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:27.949288" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=movie 
 path_url=/jokes/random?category=movie 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:27.949438" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=movie 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947087&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=C9xm%2BbW6Iej%2BlYm1bYNnqivlrkLNQpzxAvObM5wSl4s%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e283d85099cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19337&amp;min_rtt=14933&amp;rtt_var=4442&amp;sent=35&amp;recv=31&amp;lost=0&amp;retrans=1&amp;sent_bytes=20222&amp;recv_bytes=3156&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=859&amp;x=0"'} 
 body={"categories":["movie"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"pn_y-heotimuyfatmsvzng","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/pn_y-heotimuyfatmsvzng","value":"When Bruce Banner gets mad, he turns into the Hulk. When the Hulk gets mad, he turns into Chuck Norris."} 
 </msg>
<msg time="2025-02-07T17:51:27.949643" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.894937" elapsed="0.054731"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:27.949795" elapsed="0.000082"/>
</return>
<msg time="2025-02-07T17:51:27.950901" level="INFO">${blague} = When Bruce Banner gets mad, he turns into the Hulk. When the Hulk gets mad, he turns into Chuck Norris.</msg>
<msg time="2025-02-07T17:51:27.950939" level="INFO">${cat} = ['movie']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.894098" elapsed="0.056860"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.951168" elapsed="0.000260"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:27.951519" elapsed="0.000118"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:27.951720" elapsed="0.000148"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:27.951949" elapsed="0.000142"/>
</kw>
<var name="${elt}">movie</var>
<status status="PASS" start="2025-02-07T17:51:27.893859" elapsed="0.058263"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:27.952823" level="INFO">&amp;{dict} = { category=music }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:27.952622" elapsed="0.000218"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.004963" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=music 
 path_url=/jokes/random?category=music 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.005094" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=music 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e284289f99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18874&amp;min_rtt=14933&amp;rtt_var=4258&amp;sent=37&amp;recv=33&amp;lost=0&amp;retrans=1&amp;sent_bytes=21613&amp;recv_bytes=3354&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=913&amp;x=0"'} 
 body={"categories":["music"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"7tb4dwgvrwkaqg-a-wzhlq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/7tb4dwgvrwkaqg-a-wzhlq","value":"Chuck Norris shot the sheriff, but he round house kicked the deputy."} 
 </msg>
<msg time="2025-02-07T17:51:28.005370" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:27.952918" elapsed="0.052483"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.005513" elapsed="0.000066"/>
</return>
<msg time="2025-02-07T17:51:28.006876" level="INFO">${blague} = Chuck Norris shot the sheriff, but he round house kicked the deputy.</msg>
<msg time="2025-02-07T17:51:28.006923" level="INFO">${cat} = ['music']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:27.952376" elapsed="0.054571"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.007250" elapsed="0.000330"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.007701" elapsed="0.000157"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:28.007976" elapsed="0.000220"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:28.008313" elapsed="0.000229"/>
</kw>
<var name="${elt}">music</var>
<status status="PASS" start="2025-02-07T17:51:27.952239" elapsed="0.056350"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.010384" level="INFO">&amp;{dict} = { category=political }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.009429" elapsed="0.000981"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.064998" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=political 
 path_url=/jokes/random?category=political 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.065264" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=political 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e28488ec99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18811&amp;min_rtt=14933&amp;rtt_var=3319&amp;sent=39&amp;recv=35&amp;lost=0&amp;retrans=1&amp;sent_bytes=23007&amp;recv_bytes=3556&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=974&amp;x=0"'} 
 body={"categories":["political"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"b4e8h63nroc6xadssom7mg","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/b4e8h63nroc6xadssom7mg","value":"Chuck Norris is widely predicted to be first black president. If you're thinking to yourself, \"But Chuck Norris isn't black\", then you are dead wrong. And stop being a racist."} 
 </msg>
<msg time="2025-02-07T17:51:28.065752" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.010529" elapsed="0.055284"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.066067" elapsed="0.000157"/>
</return>
<msg time="2025-02-07T17:51:28.068145" level="INFO">${blague} = Chuck Norris is widely predicted to be first black president. If you're thinking to yourself, "But Chuck Norris isn't black", then you are dead wrong. And stop being a racist.</msg>
<msg time="2025-02-07T17:51:28.068203" level="INFO">${cat} = ['political']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.009037" elapsed="0.059192"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.068518" elapsed="0.000319"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.068935" elapsed="0.000140"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:28.069180" elapsed="0.000197"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:28.069486" elapsed="0.000202"/>
</kw>
<var name="${elt}">political</var>
<status status="PASS" start="2025-02-07T17:51:28.008791" elapsed="0.060934"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.070829" level="INFO">&amp;{dict} = { category=religion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.070555" elapsed="0.000293"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.121889" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=religion 
 path_url=/jokes/random?category=religion 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.122088" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=religion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e284e93b99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18649&amp;min_rtt=14933&amp;rtt_var=2812&amp;sent=42&amp;recv=37&amp;lost=0&amp;retrans=1&amp;sent_bytes=24489&amp;recv_bytes=3757&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1030&amp;x=0"'} 
 body={"categories":["religion"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"defxwux_t-wond-zfhoicq","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/defxwux_t-wond-zfhoicq","value":"Chuck Norris doesn't play god. Playing is for children."} 
 </msg>
<msg time="2025-02-07T17:51:28.122455" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.070940" elapsed="0.051570"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.122721" elapsed="0.000123"/>
</return>
<msg time="2025-02-07T17:51:28.124850" level="INFO">${blague} = Chuck Norris doesn't play god. Playing is for children.</msg>
<msg time="2025-02-07T17:51:28.124904" level="INFO">${cat} = ['religion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.070224" elapsed="0.054709"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.125258" elapsed="0.000341"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.125712" elapsed="0.000152"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:28.125982" elapsed="0.000223"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:28.126347" elapsed="0.000240"/>
</kw>
<var name="${elt}">religion</var>
<status status="PASS" start="2025-02-07T17:51:28.070011" elapsed="0.056627"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.127832" level="INFO">&amp;{dict} = { category=science }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.127510" elapsed="0.000346"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.180581" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=science 
 path_url=/jokes/random?category=science 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.180807" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=science 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e285499499cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18427&amp;min_rtt=14933&amp;rtt_var=2555&amp;sent=44&amp;recv=39&amp;lost=0&amp;retrans=1&amp;sent_bytes=25880&amp;recv_bytes=3957&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1090&amp;x=0"'} 
 body={"categories":["science"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"_en05aqcsvuu3v2vopnoga","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/_en05aqcsvuu3v2vopnoga","value":"While urinating, Chuck Norris is easily capable of welding titanium."} 
 </msg>
<msg time="2025-02-07T17:51:28.181147" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.127974" elapsed="0.053220"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.181407" elapsed="0.000132"/>
</return>
<msg time="2025-02-07T17:51:28.183185" level="INFO">${blague} = While urinating, Chuck Norris is easily capable of welding titanium.</msg>
<msg time="2025-02-07T17:51:28.183234" level="INFO">${cat} = ['science']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.127083" elapsed="0.056178"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.183559" elapsed="0.000333"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.184004" elapsed="0.000292"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:28.184419" elapsed="0.000221"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:28.184765" elapsed="0.000230"/>
</kw>
<var name="${elt}">science</var>
<status status="PASS" start="2025-02-07T17:51:28.126835" elapsed="0.058208"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.186228" level="INFO">&amp;{dict} = { category=sport }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.185909" elapsed="0.000343"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.242965" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=sport 
 path_url=/jokes/random?category=sport 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.243161" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=sport 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e285a9e599cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18338&amp;min_rtt=14933&amp;rtt_var=2093&amp;sent=46&amp;recv=41&amp;lost=0&amp;retrans=1&amp;sent_bytes=27276&amp;recv_bytes=4155&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1147&amp;x=0"'} 
 body={"categories":["sport"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"7jwk7xbwrp-h-nw233wqmq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/7jwk7xbwrp-h-nw233wqmq","value":"Chuck Norris used to play baseball. When Babe Ruth was hailed as the better player, Chuck Norris killed him with a baseball bat to the throat. Lou Gehrig got off easy."} 
 </msg>
<msg time="2025-02-07T17:51:28.243437" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.186375" elapsed="0.057101"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.243666" elapsed="0.000115"/>
</return>
<msg time="2025-02-07T17:51:28.245190" level="INFO">${blague} = Chuck Norris used to play baseball. When Babe Ruth was hailed as the better player, Chuck Norris killed him with a baseball bat to the throat. Lou Gehrig got off easy.</msg>
<msg time="2025-02-07T17:51:28.245240" level="INFO">${cat} = ['sport']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.185516" elapsed="0.059748"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.245565" elapsed="0.000336"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.246019" elapsed="0.000913"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:28.247060" elapsed="0.000240"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:28.247412" elapsed="0.000230"/>
</kw>
<var name="${elt}">sport</var>
<status status="PASS" start="2025-02-07T17:51:28.185234" elapsed="0.062453"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.248813" level="INFO">&amp;{dict} = { category=travel }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.248502" elapsed="0.000335"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.309377" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=travel 
 path_url=/jokes/random?category=travel 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.309627" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=travel 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2860a4299cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18535&amp;min_rtt=14933&amp;rtt_var=1964&amp;sent=49&amp;recv=43&amp;lost=0&amp;retrans=1&amp;sent_bytes=28762&amp;recv_bytes=4354&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1216&amp;x=0"'} 
 body={"categories":["travel"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"9rqqcar_s5mqpujm0yu5za","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/9rqqcar_s5mqpujm0yu5za","value":"For Spring Break '05, Chuck Norris drove to Madagascar, riding a chariot pulled by two electric eels."} 
 </msg>
<msg time="2025-02-07T17:51:28.310081" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.248962" elapsed="0.061180"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.310562" elapsed="0.000145"/>
</return>
<msg time="2025-02-07T17:51:28.313064" level="INFO">${blague} = For Spring Break '05, Chuck Norris drove to Madagascar, riding a chariot pulled by two electric eels.</msg>
<msg time="2025-02-07T17:51:28.313151" level="INFO">${cat} = ['travel']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.248114" elapsed="0.065079"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.313606" elapsed="0.000519"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.314310" elapsed="0.000213"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T17:51:28.314639" elapsed="0.000195"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T17:51:28.314940" elapsed="0.000179"/>
</kw>
<var name="${elt}">travel</var>
<status status="PASS" start="2025-02-07T17:51:28.247876" elapsed="0.067282"/>
</iter>
<var>${elt}</var>
<value>@{liste_cat}</value>
<status status="PASS" start="2025-02-07T17:51:27.345619" elapsed="0.969577"/>
</for>
<status status="PASS" start="2025-02-07T17:51:27.290625" elapsed="1.024727"/>
</test>
<test id="s1-s3-s1-t4" name="afficher la liste des catégories" line="26">
<kw name="recupérer la liste des catégories" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.368720" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/categories 
 path_url=/jokes/categories 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.368845" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/categories 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2867adf99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18699&amp;min_rtt=14933&amp;rtt_var=1801&amp;sent=52&amp;recv=45&amp;lost=0&amp;retrans=1&amp;sent_bytes=30215&amp;recv_bytes=4541&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1276&amp;x=0"'} 
 body=["animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel"] 
 </msg>
<msg time="2025-02-07T17:51:28.369018" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${CATEGORIES}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.316146" elapsed="0.052903"/>
</kw>
<return>
<value>${resp.json()}</value>
<status status="PASS" start="2025-02-07T17:51:28.369154" elapsed="0.000070"/>
</return>
<msg time="2025-02-07T17:51:28.370130" level="INFO">@{categories} = [ animal | career | celebrity | dev | explicit | fashion | food | history | money | movie | music | political | religion | science | sport | travel ]</msg>
<var>@{categories}</var>
<status status="PASS" start="2025-02-07T17:51:28.315918" elapsed="0.054243"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.370694" elapsed="0.000206"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.371696" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.371422" elapsed="0.000298"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.420840" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.421090" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e286cb2099cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18863&amp;min_rtt=14933&amp;rtt_var=1678&amp;sent=54&amp;recv=47&amp;lost=0&amp;retrans=1&amp;sent_bytes=31507&amp;recv_bytes=4740&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1330&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"zjuwql5ns-mklqumqezlhg","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/zjuwql5ns-mklqumqezlhg","value":"Chuck Norris can skeletize a cow in two minutes."} 
 </msg>
<msg time="2025-02-07T17:51:28.421470" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.371843" elapsed="0.049686"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.421767" elapsed="0.000142"/>
</return>
<msg time="2025-02-07T17:51:28.424111" level="INFO">${blague} = Chuck Norris can skeletize a cow in two minutes.</msg>
<msg time="2025-02-07T17:51:28.424157" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.371095" elapsed="0.053207"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.424575" elapsed="0.000343"/>
</kw>
<var name="${elt}">animal</var>
<status status="PASS" start="2025-02-07T17:51:28.370541" elapsed="0.054422"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.425243" elapsed="0.000164"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.426359" level="INFO">&amp;{dict} = { category=career }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.426036" elapsed="0.000347"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.481155" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=career 
 path_url=/jokes/random?category=career 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.481412" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=career 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2872b7399cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18663&amp;min_rtt=14933&amp;rtt_var=1658&amp;sent=56&amp;recv=49&amp;lost=0&amp;retrans=1&amp;sent_bytes=32890&amp;recv_bytes=4939&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1391&amp;x=0"'} 
 body={"categories":["career"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"3y7vnqsvtvuvvmhtuqjuma","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/3y7vnqsvtvuvvmhtuqjuma","value":"Chuck Norris' first job was as a paperboy. There were no survivors."} 
 </msg>
<msg time="2025-02-07T17:51:28.481798" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.426499" elapsed="0.055359"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.482093" elapsed="0.000146"/>
</return>
<msg time="2025-02-07T17:51:28.484552" level="INFO">${blague} = Chuck Norris' first job was as a paperboy. There were no survivors.</msg>
<msg time="2025-02-07T17:51:28.484638" level="INFO">${cat} = ['career']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.425654" elapsed="0.059028"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.485145" elapsed="0.000622"/>
</kw>
<var name="${elt}">career</var>
<status status="PASS" start="2025-02-07T17:51:28.425126" elapsed="0.060705"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.486504" elapsed="0.000177"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.487367" level="INFO">&amp;{dict} = { category=celebrity }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.487133" elapsed="0.000258"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.544506" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 path_url=/jokes/random?category=celebrity 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.544655" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2877bb899cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18370&amp;min_rtt=14933&amp;rtt_var=1679&amp;sent=58&amp;recv=51&amp;lost=0&amp;retrans=1&amp;sent_bytes=34289&amp;recv_bytes=5141&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1452&amp;x=0"'} 
 body={"categories":["celebrity"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"oc9o2hv9qpqruqtn7tz1_a","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/oc9o2hv9qpqruqtn7tz1_a","value":"Bill Gates thinks he's Chuck Norris. Chuck Norris actually laughed. Once."} 
 </msg>
<msg time="2025-02-07T17:51:28.544916" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.487493" elapsed="0.057476"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.545109" elapsed="0.000089"/>
</return>
<msg time="2025-02-07T17:51:28.546867" level="INFO">${blague} = Bill Gates thinks he's Chuck Norris. Chuck Norris actually laughed. Once.</msg>
<msg time="2025-02-07T17:51:28.546928" level="INFO">${cat} = ['celebrity']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.486848" elapsed="0.060110"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.547175" elapsed="0.000285"/>
</kw>
<var name="${elt}">celebrity</var>
<status status="PASS" start="2025-02-07T17:51:28.485965" elapsed="0.061676"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.547888" elapsed="0.000167"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.548881" level="INFO">&amp;{dict} = { category=dev }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.548590" elapsed="0.000316"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.600497" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=dev 
 path_url=/jokes/random?category=dev 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.600652" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=dev 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e287ec1b99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18507&amp;min_rtt=14933&amp;rtt_var=1534&amp;sent=60&amp;recv=53&amp;lost=0&amp;retrans=1&amp;sent_bytes=35690&amp;recv_bytes=5337&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1511&amp;x=0"'} 
 body={"categories":["dev"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"41rkit60rnklc8w7fox1cq","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/41rkit60rnklc8w7fox1cq","value":"Chuck Norris can access the DB from the UI."} 
 </msg>
<msg time="2025-02-07T17:51:28.600880" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.549022" elapsed="0.051885"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.601047" elapsed="0.000106"/>
</return>
<msg time="2025-02-07T17:51:28.602339" level="INFO">${blague} = Chuck Norris can access the DB from the UI.</msg>
<msg time="2025-02-07T17:51:28.602381" level="INFO">${cat} = ['dev']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.548255" elapsed="0.054148"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.602703" elapsed="0.000374"/>
</kw>
<var name="${elt}">dev</var>
<status status="PASS" start="2025-02-07T17:51:28.547786" elapsed="0.055328"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.603348" elapsed="0.000240"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.604326" level="INFO">&amp;{dict} = { category=explicit }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.604096" elapsed="0.000250"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.657363" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=explicit 
 path_url=/jokes/random?category=explicit 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.657544" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=explicit 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2883c6899cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18179&amp;min_rtt=14933&amp;rtt_var=1568&amp;sent=62&amp;recv=55&amp;lost=0&amp;retrans=1&amp;sent_bytes=37073&amp;recv_bytes=5538&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1568&amp;x=0"'} 
 body={"categories":["explicit"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"9JehFRQkSECVfcTQUI5EYw","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/9JehFRQkSECVfcTQUI5EYw","value":"Chuck Norris has six testicles. They surround his penis like the cylinder of a revolver."} 
 </msg>
<msg time="2025-02-07T17:51:28.657827" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.604442" elapsed="0.053418"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.658025" elapsed="0.000113"/>
</return>
<msg time="2025-02-07T17:51:28.659572" level="INFO">${blague} = Chuck Norris has six testicles. They surround his penis like the cylinder of a revolver.</msg>
<msg time="2025-02-07T17:51:28.659622" level="INFO">${cat} = ['explicit']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.603781" elapsed="0.055868"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.659919" elapsed="0.000351"/>
</kw>
<var name="${elt}">explicit</var>
<status status="PASS" start="2025-02-07T17:51:28.603248" elapsed="0.057056"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.660683" elapsed="0.000141"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.661675" level="INFO">&amp;{dict} = { category=fashion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.661391" elapsed="0.000306"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.713223" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=fashion 
 path_url=/jokes/random?category=fashion 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.713481" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=fashion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2889ca599cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17758&amp;min_rtt=14776&amp;rtt_var=1624&amp;sent=64&amp;recv=57&amp;lost=0&amp;retrans=1&amp;sent_bytes=38492&amp;recv_bytes=5738&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1623&amp;x=0"'} 
 body={"categories":["fashion"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0wdewlp2tz-mt_upesvrjw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0wdewlp2tz-mt_upesvrjw","value":"Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris."} 
 </msg>
<msg time="2025-02-07T17:51:28.713859" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.661801" elapsed="0.052112"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.714150" elapsed="0.000149"/>
</return>
<msg time="2025-02-07T17:51:28.716549" level="INFO">${blague} = Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris.</msg>
<msg time="2025-02-07T17:51:28.716590" level="INFO">${cat} = ['fashion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.661046" elapsed="0.055568"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.716883" elapsed="0.000317"/>
</kw>
<var name="${elt}">fashion</var>
<status status="PASS" start="2025-02-07T17:51:28.660586" elapsed="0.056650"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.717459" elapsed="0.000146"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.719123" level="INFO">&amp;{dict} = { category=food }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.718786" elapsed="0.000370"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.768688" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=food 
 path_url=/jokes/random?category=food 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.768890" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=food 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e288fcf199cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17589&amp;min_rtt=14776&amp;rtt_var=1556&amp;sent=66&amp;recv=59&amp;lost=0&amp;retrans=1&amp;sent_bytes=39920&amp;recv_bytes=5935&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1679&amp;x=0"'} 
 body={"categories":["food"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"lqo-nouprm-jfl9eojtana","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/lqo-nouprm-jfl9eojtana","value":"When in a bar, you can order a drink called a \"Chuck Norris\". It is also known as a \"Bloody Mary\", if your name happens to be Mary."} 
 </msg>
<msg time="2025-02-07T17:51:28.769241" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.719294" elapsed="0.050000"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.769485" elapsed="0.000120"/>
</return>
<msg time="2025-02-07T17:51:28.771848" level="INFO">${blague} = When in a bar, you can order a drink called a "Chuck Norris". It is also known as a "Bloody Mary", if your name happens to be Mary.</msg>
<msg time="2025-02-07T17:51:28.771939" level="INFO">${cat} = ['food']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.717809" elapsed="0.054176"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.772305" elapsed="0.000467"/>
</kw>
<var name="${elt}">food</var>
<status status="PASS" start="2025-02-07T17:51:28.717368" elapsed="0.055458"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.773120" elapsed="0.000149"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.773918" level="INFO">&amp;{dict} = { category=history }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.773699" elapsed="0.000242"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.824837" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=history 
 path_url=/jokes/random?category=history 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.824998" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=history 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e2894d4d99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17474&amp;min_rtt=14776&amp;rtt_var=1397&amp;sent=68&amp;recv=61&amp;lost=0&amp;retrans=1&amp;sent_bytes=41357&amp;recv_bytes=6135&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1734&amp;x=0"'} 
 body={"categories":["history"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"vxmg5zgusq6ra35ns4e5sw","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/vxmg5zgusq6ra35ns4e5sw","value":"After returning from World War 2 unscrathed, Bob Dole was congratulated by Chuck Norris with a handshake. The rest is history."} 
 </msg>
<msg time="2025-02-07T17:51:28.825226" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.774043" elapsed="0.051224"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.825412" elapsed="0.000093"/>
</return>
<msg time="2025-02-07T17:51:28.827197" level="INFO">${blague} = After returning from World War 2 unscrathed, Bob Dole was congratulated by Chuck Norris with a handshake. The rest is history.</msg>
<msg time="2025-02-07T17:51:28.827295" level="INFO">${cat} = ['history']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.773427" elapsed="0.053902"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.827566" elapsed="0.000302"/>
</kw>
<var name="${elt}">history</var>
<status status="PASS" start="2025-02-07T17:51:28.773012" elapsed="0.054900"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.828160" elapsed="0.000173"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.829162" level="INFO">&amp;{dict} = { category=money }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.828883" elapsed="0.000304"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.882604" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=money 
 path_url=/jokes/random?category=money 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.882768" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=money 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e289ad9799cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17377&amp;min_rtt=14776&amp;rtt_var=1242&amp;sent=70&amp;recv=63&amp;lost=0&amp;retrans=1&amp;sent_bytes=42797&amp;recv_bytes=6333&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1791&amp;x=0"'} 
 body={"categories":["money"],"created_at":"2020-01-05 13:42:20.568859","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"WjOKx1P3TL6sg03vnkQmcA","updated_at":"2020-05-22 06:02:41.792421","url":"https://api.chucknorris.io/jokes/WjOKx1P3TL6sg03vnkQmcA","value":"If you have 5 dollars and Chuck Norris has 5 dollars, he has more money than you do."} 
 </msg>
<msg time="2025-02-07T17:51:28.883026" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.829304" elapsed="0.053766"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.883210" elapsed="0.000093"/>
</return>
<msg time="2025-02-07T17:51:28.884587" level="INFO">${blague} = If you have 5 dollars and Chuck Norris has 5 dollars, he has more money than you do.</msg>
<msg time="2025-02-07T17:51:28.884632" level="INFO">${cat} = ['money']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.828542" elapsed="0.056114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.884903" elapsed="0.000333"/>
</kw>
<var name="${elt}">money</var>
<status status="PASS" start="2025-02-07T17:51:28.828048" elapsed="0.057230"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.885644" elapsed="0.000174"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.886734" level="INFO">&amp;{dict} = { category=movie }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.886426" elapsed="0.000332"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.937242" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=movie 
 path_url=/jokes/random?category=movie 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.937566" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=movie 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:28 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947088&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=3WLMIZNFTMhE7g%2Fe%2FrKJBQOYvyd%2F7Nk%2Fj3OHVcoVnxw%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e289fddf99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17199&amp;min_rtt=14776&amp;rtt_var=1247&amp;sent=72&amp;recv=65&amp;lost=0&amp;retrans=1&amp;sent_bytes=44223&amp;recv_bytes=6531&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1846&amp;x=0"'} 
 body={"categories":["movie"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"uxohgpg8seo16qzc5xnbdw","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/uxohgpg8seo16qzc5xnbdw","value":"\"Brokeback Mountain\" is not just a movie. It's also what Chuck Norris calls the pile of dead ninjas in his front yard."} 
 </msg>
<msg time="2025-02-07T17:51:28.937868" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.886881" elapsed="0.051038"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.938097" elapsed="0.000098"/>
</return>
<msg time="2025-02-07T17:51:28.940396" level="INFO">${blague} = "Brokeback Mountain" is not just a movie. It's also what Chuck Norris calls the pile of dead ninjas in his front yard.</msg>
<msg time="2025-02-07T17:51:28.940489" level="INFO">${cat} = ['movie']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.886053" elapsed="0.054481"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.941001" elapsed="0.000331"/>
</kw>
<var name="${elt}">movie</var>
<status status="PASS" start="2025-02-07T17:51:28.885535" elapsed="0.055855"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.941637" elapsed="0.000159"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.942645" level="INFO">&amp;{dict} = { category=music }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.942352" elapsed="0.000321"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:28.992269" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=music 
 path_url=/jokes/random?category=music 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:28.992415" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=music 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e28a5e3e99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17178&amp;min_rtt=14776&amp;rtt_var=978&amp;sent=74&amp;recv=67&amp;lost=0&amp;retrans=1&amp;sent_bytes=45658&amp;recv_bytes=6729&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1902&amp;x=0"'} 
 body={"categories":["music"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0_acdyhnthyshildaipp1q","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/0_acdyhnthyshildaipp1q","value":"Who let the dogs out? Chuck Norris let the dogs out... and then roundhouse kicked them through an Oldsmobile."} 
 </msg>
<msg time="2025-02-07T17:51:28.992648" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.942806" elapsed="0.049879"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:28.992811" elapsed="0.000088"/>
</return>
<msg time="2025-02-07T17:51:28.994317" level="INFO">${blague} = Who let the dogs out? Chuck Norris let the dogs out... and then roundhouse kicked them through an Oldsmobile.</msg>
<msg time="2025-02-07T17:51:28.994362" level="INFO">${cat} = ['music']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.942000" elapsed="0.052386"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.994556" elapsed="0.000260"/>
</kw>
<var name="${elt}">music</var>
<status status="PASS" start="2025-02-07T17:51:28.941527" elapsed="0.053330"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:28.995174" elapsed="0.000162"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:28.996124" level="INFO">&amp;{dict} = { category=political }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:28.995862" elapsed="0.000286"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.049221" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=political 
 path_url=/jokes/random?category=political 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.049466" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=political 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e28abeaf99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17138&amp;min_rtt=14776&amp;rtt_var=813&amp;sent=76&amp;recv=69&amp;lost=0&amp;retrans=1&amp;sent_bytes=47058&amp;recv_bytes=6931&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=1957&amp;x=0"'} 
 body={"categories":["political"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"uynvnqrmt1oqjeoxo5y73w","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/uynvnqrmt1oqjeoxo5y73w","value":"July 4th is Independence day. And the day Chuck Norris was born. Coincidence? I think not."} 
 </msg>
<msg time="2025-02-07T17:51:29.049823" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:28.996259" elapsed="0.053624"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:29.050106" elapsed="0.000119"/>
</return>
<msg time="2025-02-07T17:51:29.052132" level="INFO">${blague} = July 4th is Independence day. And the day Chuck Norris was born. Coincidence? I think not.</msg>
<msg time="2025-02-07T17:51:29.052179" level="INFO">${cat} = ['political']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:28.995526" elapsed="0.056680"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.052464" elapsed="0.000332"/>
</kw>
<var name="${elt}">political</var>
<status status="PASS" start="2025-02-07T17:51:28.995070" elapsed="0.057772"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.053121" elapsed="0.000197"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:29.054272" level="INFO">&amp;{dict} = { category=religion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:29.053964" elapsed="0.000337"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.109163" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=religion 
 path_url=/jokes/random?category=religion 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.109346" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=religion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e28b0f0999cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17250&amp;min_rtt=14776&amp;rtt_var=834&amp;sent=78&amp;recv=71&amp;lost=0&amp;retrans=1&amp;sent_bytes=48461&amp;recv_bytes=7132&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=2016&amp;x=0"'} 
 body={"categories":["religion"],"created_at":"2020-01-05 13:42:23.484083","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"qTcPNQbLTxmaOMPfYKj9iQ","updated_at":"2020-01-05 13:42:23.484083","url":"https://api.chucknorris.io/jokes/qTcPNQbLTxmaOMPfYKj9iQ","value":"The Pope calls Chuck Norris \"Father.\""} 
 </msg>
<msg time="2025-02-07T17:51:29.109621" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.054428" elapsed="0.055229"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:29.109831" elapsed="0.000106"/>
</return>
<msg time="2025-02-07T17:51:29.111295" level="INFO">${blague} = The Pope calls Chuck Norris "Father."</msg>
<msg time="2025-02-07T17:51:29.111340" level="INFO">${cat} = ['religion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:29.053540" elapsed="0.057826"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.111638" elapsed="0.000354"/>
</kw>
<var name="${elt}">religion</var>
<status status="PASS" start="2025-02-07T17:51:29.052995" elapsed="0.059038"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.112284" elapsed="0.000164"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:29.113503" level="INFO">&amp;{dict} = { category=science }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:29.113201" elapsed="0.000327"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.164751" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=science 
 path_url=/jokes/random?category=science 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.164945" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=science 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e28b6f5299cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17417&amp;min_rtt=14776&amp;rtt_var=958&amp;sent=81&amp;recv=73&amp;lost=0&amp;retrans=1&amp;sent_bytes=49867&amp;recv_bytes=7332&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=2074&amp;x=0"'} 
 body={"categories":["science"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"izjeqnjzteeqms8l8xgdhw","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/izjeqnjzteeqms8l8xgdhw","value":"Chuck Norris knows the last digit of pi."} 
 </msg>
<msg time="2025-02-07T17:51:29.165212" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.113649" elapsed="0.051597"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:29.165413" elapsed="0.000105"/>
</return>
<msg time="2025-02-07T17:51:29.166766" level="INFO">${blague} = Chuck Norris knows the last digit of pi.</msg>
<msg time="2025-02-07T17:51:29.166806" level="INFO">${cat} = ['science']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:29.112693" elapsed="0.054137"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.167084" elapsed="0.000315"/>
</kw>
<var name="${elt}">science</var>
<status status="PASS" start="2025-02-07T17:51:29.112180" elapsed="0.055256"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.167672" elapsed="0.000141"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:29.168612" level="INFO">&amp;{dict} = { category=sport }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:29.168350" elapsed="0.000284"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.225255" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=sport 
 path_url=/jokes/random?category=sport 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.225512" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=sport 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e28bcf9f99cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17447&amp;min_rtt=14776&amp;rtt_var=780&amp;sent=83&amp;recv=75&amp;lost=0&amp;retrans=1&amp;sent_bytes=51235&amp;recv_bytes=7530&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=2132&amp;x=0"'} 
 body={"categories":["sport"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"6zbljdhqtd2oqdxxfe9tpq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/6zbljdhqtd2oqdxxfe9tpq","value":"When Chuck Norris does a pushup, he isn't lifting himself up, he's pushing the Earth down."} 
 </msg>
<msg time="2025-02-07T17:51:29.225946" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.168731" elapsed="0.057267"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:29.226225" elapsed="0.000148"/>
</return>
<msg time="2025-02-07T17:51:29.228214" level="INFO">${blague} = When Chuck Norris does a pushup, he isn't lifting himself up, he's pushing the Earth down.</msg>
<msg time="2025-02-07T17:51:29.228261" level="INFO">${cat} = ['sport']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:29.168018" elapsed="0.060269"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.228575" elapsed="0.000364"/>
</kw>
<var name="${elt}">sport</var>
<status status="PASS" start="2025-02-07T17:51:29.167574" elapsed="0.061405"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.229230" elapsed="0.000161"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T17:51:29.230360" level="INFO">&amp;{dict} = { category=travel }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T17:51:29.230043" elapsed="0.000343"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.280398" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=travel 
 path_url=/jokes/random?category=travel 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.280547" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=travel 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738947089&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=7fSwst0liNZ%2FgDTbs8ZX8rKDtLopapuSLYhNsRL1ca8%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e4e28c2ff599cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17718&amp;min_rtt=14776&amp;rtt_var=1127&amp;sent=85&amp;recv=77&amp;lost=0&amp;retrans=1&amp;sent_bytes=52664&amp;recv_bytes=7729&amp;delivery_rate=261183&amp;cwnd=251&amp;unsent_bytes=0&amp;cid=04f7e2382b6c842c&amp;ts=2190&amp;x=0"'} 
 body={"categories":["travel"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"uv5jvundsfuyiuiwswy3ba","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/uv5jvundsfuyiuiwswy3ba","value":"Chuck Norris did in fact, build Rome in a day."} 
 </msg>
<msg time="2025-02-07T17:51:29.280761" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.230608" elapsed="0.050179"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T17:51:29.280921" elapsed="0.000075"/>
</return>
<msg time="2025-02-07T17:51:29.282104" level="INFO">${blague} = Chuck Norris did in fact, build Rome in a day.</msg>
<msg time="2025-02-07T17:51:29.282142" level="INFO">${cat} = ['travel']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T17:51:29.229651" elapsed="0.052510"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.282363" elapsed="0.000284"/>
</kw>
<var name="${elt}">travel</var>
<status status="PASS" start="2025-02-07T17:51:29.229130" elapsed="0.053553"/>
</iter>
<var>${elt}</var>
<value>@{categories}</value>
<status status="PASS" start="2025-02-07T17:51:28.370316" elapsed="0.912410"/>
</for>
<status status="PASS" start="2025-02-07T17:51:28.315547" elapsed="0.967351"/>
</test>
<kw name="Fermer session chuck" owner="chuckNorris" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.283711" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T17:51:29.283630" elapsed="0.000187"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.283399" elapsed="0.000475"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:26.883114" elapsed="2.400791"/>
</suite>
<suite id="s1-s3-s2" name="Google" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3/google.robot">
<test id="s1-s3-s2-t1" name="test1" line="6">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.301362" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T17:51:29.301196" elapsed="0.000324"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.300979" elapsed="0.000589"/>
</kw>
<kw name="Faire une requete et afficher la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.385360" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.385572" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=15'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T17:51:29.385907" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.301791" elapsed="0.084169"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.386336" elapsed="0.001334"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T17:51:29.389394" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1166bc540&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T17:51:29.387805" elapsed="0.001613"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.301670" elapsed="0.087837"/>
</kw>
<kw name="Faire une requete et récuperer la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.423858" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.424092" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=15'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T17:51:29.424282" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.389937" elapsed="0.034373"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T17:51:29.425331" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1166bca90&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T17:51:29.424503" elapsed="0.000871"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-07T17:51:29.425464" elapsed="0.000065"/>
</return>
<msg time="2025-02-07T17:51:29.425716" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x1166bca90&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-07T17:51:29.389722" elapsed="0.036020"/>
</kw>
<kw name="Contrôler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-07T17:51:29.426325" elapsed="0.000248"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-07T17:51:29.426004" elapsed="0.000634"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.427195" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T17:51:29.427122" elapsed="0.000158"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.426881" elapsed="0.000448"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.300728" elapsed="0.126669"/>
</test>
<test id="s1-s3-s2-t2" name="test2" line="10">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.428420" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T17:51:29.428162" elapsed="0.000846"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.427945" elapsed="0.001129"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>True</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-02-07T17:51:29.429215" elapsed="0.000151"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.429872" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T17:51:29.429808" elapsed="0.000121"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.429576" elapsed="0.000402"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.427630" elapsed="0.002408"/>
</test>
<test id="s1-s3-s2-t3" name="test3" line="12">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.430825" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T17:51:29.430639" elapsed="0.000310"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.430460" elapsed="0.000542"/>
</kw>
<kw name="Faire une requete et afficher la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.496665" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.496939" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=17'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T17:51:29.497420" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.431328" elapsed="0.066129"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.497891" elapsed="0.001179"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T17:51:29.500181" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1166bd530&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T17:51:29.499362" elapsed="0.000845"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.431145" elapsed="0.069163"/>
</kw>
<kw name="Faire une requete et récuperer la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.552936" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.553076" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=15'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T17:51:29.553331" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.501005" elapsed="0.052366"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T17:51:29.554510" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1166bdf80&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T17:51:29.553721" elapsed="0.000815"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-07T17:51:29.554591" elapsed="0.000042"/>
</return>
<msg time="2025-02-07T17:51:29.554753" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x1166bdf80&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-07T17:51:29.500682" elapsed="0.054092"/>
</kw>
<kw name="Contrôler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-07T17:51:29.555235" elapsed="0.000182"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-07T17:51:29.554971" elapsed="0.000504"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.555960" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T17:51:29.555892" elapsed="0.000140"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.555685" elapsed="0.000392"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.430233" elapsed="0.125909"/>
</test>
<test id="s1-s3-s2-t4" name="test4" line="16">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.557050" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T17:51:29.556818" elapsed="0.000434"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.556624" elapsed="0.000683"/>
</kw>
<kw name="Faire une requete et afficher la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.620512" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.620662" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=14'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T17:51:29.620870" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.557651" elapsed="0.063248"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.621189" elapsed="0.001001"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T17:51:29.623968" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1166bc770&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T17:51:29.622336" elapsed="0.001664"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.557459" elapsed="0.066634"/>
</kw>
<kw name="Faire une requete et récuperer la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.660166" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T17:51:29.660463" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 16:51:29 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=14'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T17:51:29.660656" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T17:51:29.624700" elapsed="0.035990"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T17:51:29.661915" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1166bd5d0&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T17:51:29.660991" elapsed="0.000951"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-07T17:51:29.662022" elapsed="0.000076"/>
</return>
<msg time="2025-02-07T17:51:29.662298" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x1166bd5d0&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-07T17:51:29.624399" elapsed="0.037923"/>
</kw>
<kw name="Contrôler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-07T17:51:29.662908" elapsed="0.000225"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-07T17:51:29.662576" elapsed="0.000616"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T17:51:29.663676" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T17:51:29.663608" elapsed="0.000144"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.663408" elapsed="0.000384"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.556348" elapsed="0.107497"/>
</test>
<status status="PASS" start="2025-02-07T17:51:29.284521" elapsed="0.379676"/>
</suite>
<status status="PASS" start="2025-02-07T17:51:26.881959" elapsed="2.782840"/>
</suite>
<suite id="s1-s4" name="Web3" source="/Users/dominiquemereaux/code/TPSEPT2023/web3">
<kw name="init web" type="SETUP">
<kw name="Log To Console" owner="BuiltIn">
<arg>INIT_ROBOT</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T17:51:29.667685" elapsed="0.000116"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:29.667529" elapsed="0.000330"/>
</kw>
<suite id="s1-s4-s1" name="PlusieursRecherche" source="/Users/dominiquemereaux/code/TPSEPT2023/web3/PlusieursRecherche.robot">
<test id="s1-s4-s1-t1" name="T_MUG" line="9">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:29.779865" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:30.989521" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:30.990635" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:29.779726" elapsed="1.223129">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:31.003507" elapsed="0.000065"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:29.779341" elapsed="1.224445">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:31.004793" elapsed="0.000156"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:31.004374" elapsed="0.000635"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:29.778573" elapsed="1.226502">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<test id="s1-s4-s1-t2" name="T_T-SHIRT" line="9">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:31.007067" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:32.218794" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:32.219949" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:31.006835" elapsed="1.215126">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:32.222859" elapsed="0.000087"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:31.006606" elapsed="1.216625">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:32.224728" elapsed="0.000226"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:32.224071" elapsed="0.000945"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:31.005377" elapsed="1.219719">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<status status="FAIL" start="2025-02-07T17:51:29.667905" elapsed="2.557869"/>
</suite>
<suite id="s1-s4-s2" name="Prestashop" source="/Users/dominiquemereaux/code/TPSEPT2023/web3/prestashop.robot">
<test id="s1-s4-s2-t1" name="Recherche MUG" line="7">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:32.232386" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:33.505906" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:33.506944" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:32.232163" elapsed="1.276614">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:33.509656" elapsed="0.000074"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:32.231919" elapsed="1.278079">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:33.511783" elapsed="0.000234"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:33.511070" elapsed="0.001067"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:32.231602" elapsed="1.280676">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<test id="s1-s4-s2-t2" name="Recherche T-Shirt" line="11">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:33.513650" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:34.710772" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:34.711802" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:33.513344" elapsed="1.200375">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:34.714698" elapsed="0.000082"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:33.513068" elapsed="1.202013">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:34.716696" elapsed="0.000220"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:34.716014" elapsed="0.001117"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:33.512660" elapsed="1.204552">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<test id="s1-s4-s2-t3" name="Recherches diverses" line="14">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:34.718589" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:35.897637" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:35.898949" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:34.718233" elapsed="1.186812">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:35.905624" elapsed="0.000062"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:34.717997" elapsed="1.187885">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:35.906899" elapsed="0.000164"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:35.906506" elapsed="0.000629"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:34.717589" elapsed="1.189628">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<test id="s1-s4-s2-t4" name="Recherche vide" line="21">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:35.908452" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:37.077891" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:37.078944" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:35.908155" elapsed="1.172789">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:37.081760" elapsed="0.000074"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:35.907909" elapsed="1.174191">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:37.083803" elapsed="0.000235"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:37.083066" elapsed="0.001050"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:35.907549" elapsed="1.176672">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<test id="s1-s4-s2-t5" name="Menu Femmes" line="25">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:37.085634" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:38.249310" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:38.250295" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:37.085269" elapsed="1.166849">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:38.253064" elapsed="0.000087"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:37.085010" elapsed="1.168347">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:38.254475" elapsed="0.000177"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:38.254003" elapsed="0.000720"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:37.084598" elapsed="1.170208">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<test id="s1-s4-s2-t6" name="Test alerte" line="34">
<kw name="Ouvrir W3C alerte" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:38.256101" level="INFO">Opening browser 'GC' to base url 'https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_alert'.</msg>
<msg time="2025-02-07T17:51:39.430838" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:39.432044" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL2}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:38.255790" elapsed="1.179756">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Maximize Browser Window" owner="ma_lib_selenium">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" start="2025-02-07T17:51:39.436551" elapsed="0.000081"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:38.255523" elapsed="1.181404">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:39.438819" elapsed="0.000219"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:39.438190" elapsed="0.000960"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:38.255152" elapsed="1.184128">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
<test id="s1-s4-s2-t7" name="Combien de fenêtres" line="41">
<kw name="Ouvrir Prestashop" owner="motClefPresta" type="SETUP">
<kw name="Open Browser" owner="ma_lib_selenium">
<msg time="2025-02-07T17:51:39.440767" level="INFO">Opening browser 'GC' to base url '"ygfazy"'.</msg>
<msg time="2025-02-07T17:51:40.615772" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<msg time="2025-02-07T17:51:40.616558" level="FAIL">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</msg>
<arg>${URL}</arg>
<arg>${NAVIGATEUR}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="FAIL" start="2025-02-07T17:51:39.440389" elapsed="1.177587">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Ma Fonction" owner="ma_lib_selenium">
<status status="NOT RUN" start="2025-02-07T17:51:40.618766" elapsed="0.000061"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:39.440065" elapsed="1.178984">NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</kw>
<kw name="Fermer Prestashop" owner="motClefPresta" type="TEARDOWN">
<kw name="Close Browser" owner="ma_lib_selenium">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-02-07T17:51:40.620480" elapsed="0.000185"/>
</kw>
<status status="PASS" start="2025-02-07T17:51:40.619884" elapsed="0.000847"/>
</kw>
<status status="FAIL" start="2025-02-07T17:51:39.439663" elapsed="1.181150">Setup failed:
NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: /opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/common/macos/selenium-manager --browser chrome --output json.
The chromedriver version cannot be discovered
; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location
</status>
</test>
