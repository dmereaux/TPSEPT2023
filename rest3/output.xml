<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0.1 (Python 3.10.7 on darwin)" generated="2025-02-07T18:58:34.452532" rpa="false" schemaversion="5">
<suite id="s1" name="Rest3" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3">
<suite id="s1-s1" name="chuckNorris" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3/chuckNorris.robot">
<kw name="Session Chuck" owner="chuckNorris" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:34.585854" level="INFO">Creating Session using : alias=Chuck, url=https://api.chucknorris.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>${SESSION_NAME}</arg>
<arg>${ENDPOINT}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T18:58:34.585544" elapsed="0.000482"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:34.585062" elapsed="0.001402"/>
</kw>
<test id="s1-s1-t1" name="Test Blague au hasard" line="7">
<kw name="Blague au hasard" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:34.757105" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random 
 path_url=/jokes/random 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:34.770832" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:34 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d2d848d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17539&amp;min_rtt=17491&amp;rtt_var=6656&amp;sent=4&amp;recv=6&amp;lost=0&amp;retrans=0&amp;sent_bytes=2849&amp;recv_bytes=780&amp;delivery_rate=161977&amp;cwnd=240&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=114&amp;x=0"'} 
 body={"categories":[],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"uPgE83J0QnKJJbblbBuJ3w","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/uPgE83J0QnKJJbblbBuJ3w","value":"When life throws lemons at Chuck Norris, he catches them and throws them back at life."} 
 </msg>
<msg time="2025-02-07T18:58:34.771030" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:34.587780" elapsed="0.183285"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-02-07T18:58:34.772664" level="INFO">${toto} = When life throws lemons at Chuck Norris, he catches them and throws them back at life.</msg>
<var>${toto}</var>
<arg>${resp.json()}</arg>
<arg>value</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-02-07T18:58:34.771993" elapsed="0.000700"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${toto}</arg>
<arg>${resp.json()}[value]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:34.773221" elapsed="0.000569"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2025-02-07T18:58:34.793385" level="INFO">${titi} = ['When life throws lemons at Chuck Norris, he catches them and throws them back at life.']</msg>
<var>${titi}</var>
<arg>${resp.json()}</arg>
<arg>$.value</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2025-02-07T18:58:34.773991" elapsed="0.019425"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${titi}[0]</arg>
<arg>${resp.json()}[value]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:34.793826" elapsed="0.000472"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<status status="PASS" start="2025-02-07T18:58:34.794431" elapsed="0.000062"/>
</return>
<msg time="2025-02-07T18:58:34.794918" level="INFO">${blague} = When life throws lemons at Chuck Norris, he catches them and throws them back at life.</msg>
<var>${blague}</var>
<status status="PASS" start="2025-02-07T18:58:34.586966" elapsed="0.207978"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:34.795317" elapsed="0.000177"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:34.586614" elapsed="0.209069"/>
</test>
<test id="s1-s1-t2" name="test Blague animal" line="11">
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:34.798263" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:34.798007" elapsed="0.000281"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:34.851764" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:34.851835" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:34 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d3d953d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17958&amp;min_rtt=17491&amp;rtt_var=5830&amp;sent=8&amp;recv=8&amp;lost=0&amp;retrans=0&amp;sent_bytes=4746&amp;recv_bytes=979&amp;delivery_rate=277261&amp;cwnd=244&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=214&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"o0sukejatqchi7oyjms6mw","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/o0sukejatqchi7oyjms6mw","value":"Chuck Norris can set ants on fire with a magnifying glass. At night."} 
 </msg>
<msg time="2025-02-07T18:58:34.851947" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:34.798664" elapsed="0.053357"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:34.852447" elapsed="0.000061"/>
</return>
<msg time="2025-02-07T18:58:34.853353" level="INFO">${blague} = Chuck Norris can set ants on fire with a magnifying glass. At night.</msg>
<msg time="2025-02-07T18:58:34.853399" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>animal</arg>
<status status="PASS" start="2025-02-07T18:58:34.797780" elapsed="0.055642"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>animal</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:34.853862" elapsed="0.000339"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:34.854424" elapsed="0.000190"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:34.797480" elapsed="0.057343"/>
</test>
<test id="s1-s1-t3" name="Tester une blague de chaque catégorie" line="16">
<kw name="recupérer la liste des catégories" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:34.907083" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/categories 
 path_url=/jokes/categories 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:34.907180" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/categories 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:34 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d439aed64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17719&amp;min_rtt=15987&amp;rtt_var=4850&amp;sent=10&amp;recv=10&amp;lost=0&amp;retrans=0&amp;sent_bytes=6122&amp;recv_bytes=1166&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=268&amp;x=0"'} 
 body=["animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel"] 
 </msg>
<msg time="2025-02-07T18:58:34.907341" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${CATEGORIES}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:34.857493" elapsed="0.049888"/>
</kw>
<return>
<value>${resp.json()}</value>
<status status="PASS" start="2025-02-07T18:58:34.907951" elapsed="0.000101"/>
</return>
<msg time="2025-02-07T18:58:34.908799" level="INFO">@{liste_cat} = [ animal | career | celebrity | dev | explicit | fashion | food | history | money | movie | music | political | religion | science | sport | travel ]</msg>
<var>@{liste_cat}</var>
<status status="PASS" start="2025-02-07T18:58:34.857266" elapsed="0.051573"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:34.910658" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:34.910289" elapsed="0.000408"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:34.967166" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:34.967331" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951114&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=DbkUmZs1HHzCdkQm3kyKcTYlR37hldJQiLSHKh88cfc%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d49a37d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17777&amp;min_rtt=15987&amp;rtt_var=3755&amp;sent=12&amp;recv=12&amp;lost=0&amp;retrans=0&amp;sent_bytes=7396&amp;recv_bytes=1365&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=328&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"9ovbd5b1t66_x92jwrq1yq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/9ovbd5b1t66_x92jwrq1yq","value":"Chuck Norris once rode a bull, and nine months later it had a calf."} 
 </msg>
<msg time="2025-02-07T18:58:34.967543" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:34.911264" elapsed="0.056321"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:34.968715" elapsed="0.000159"/>
</return>
<msg time="2025-02-07T18:58:34.970239" level="INFO">${blague} = Chuck Norris once rode a bull, and nine months later it had a calf.</msg>
<msg time="2025-02-07T18:58:34.970303" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:34.909877" elapsed="0.060456"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:34.971135" elapsed="0.000341"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:34.971735" elapsed="0.000226"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:34.972203" elapsed="0.000270"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:34.972809" elapsed="0.000268"/>
</kw>
<var name="${elt}">animal</var>
<status status="PASS" start="2025-02-07T18:58:34.909662" elapsed="0.063585"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:34.974837" level="INFO">&amp;{dict} = { category=career }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:34.974427" elapsed="0.000460"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.028058" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=career 
 path_url=/jokes/random?category=career 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.028478" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=career 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d4fafad64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17756&amp;min_rtt=15987&amp;rtt_var=2859&amp;sent=14&amp;recv=14&amp;lost=0&amp;retrans=0&amp;sent_bytes=8775&amp;recv_bytes=1564&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=389&amp;x=0"'} 
 body={"categories":["career"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"3y7vnqsvtvuvvmhtuqjuma","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/3y7vnqsvtvuvvmhtuqjuma","value":"Chuck Norris' first job was as a paperboy. There were no survivors."} 
 </msg>
<msg time="2025-02-07T18:58:35.028995" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:34.975709" elapsed="0.053352"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.030601" elapsed="0.000223"/>
</return>
<msg time="2025-02-07T18:58:35.032811" level="INFO">${blague} = Chuck Norris' first job was as a paperboy. There were no survivors.</msg>
<msg time="2025-02-07T18:58:35.032896" level="INFO">${cat} = ['career']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:34.973778" elapsed="0.059163"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.034112" elapsed="0.000539"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.035033" elapsed="0.000329"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.035714" elapsed="0.000407"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.036470" elapsed="0.000370"/>
</kw>
<var name="${elt}">career</var>
<status status="PASS" start="2025-02-07T18:58:34.973548" elapsed="0.063498"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.038740" level="INFO">&amp;{dict} = { category=celebrity }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.038323" elapsed="0.000456"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.091767" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 path_url=/jokes/random?category=celebrity 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.092093" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d55b7ad64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=17680&amp;min_rtt=15987&amp;rtt_var=2296&amp;sent=17&amp;recv=16&amp;lost=0&amp;retrans=0&amp;sent_bytes=10187&amp;recv_bytes=1766&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=453&amp;x=0"'} 
 body={"categories":["celebrity"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"4fmvnwfasrwmh58yjbuv1g","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/4fmvnwfasrwmh58yjbuv1g","value":"Chuck Norris is the only person to ever win a staring contest against Ray Charles and Stevie Wonder."} 
 </msg>
<msg time="2025-02-07T18:58:35.092474" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.039494" elapsed="0.053039"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.093995" elapsed="0.000219"/>
</return>
<msg time="2025-02-07T18:58:35.096116" level="INFO">${blague} = Chuck Norris is the only person to ever win a staring contest against Ray Charles and Stevie Wonder.</msg>
<msg time="2025-02-07T18:58:35.096335" level="INFO">${cat} = ['celebrity']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.037763" elapsed="0.058617"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.097433" elapsed="0.000520"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.098337" elapsed="0.000336"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.099051" elapsed="0.000387"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.099778" elapsed="0.000365"/>
</kw>
<var name="${elt}">celebrity</var>
<status status="PASS" start="2025-02-07T18:58:35.037445" elapsed="0.062909"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.102033" level="INFO">&amp;{dict} = { category=dev }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.101604" elapsed="0.000476"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.172747" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=dev 
 path_url=/jokes/random?category=dev 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.173130" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=dev 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d5cbdfd64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18135&amp;min_rtt=15987&amp;rtt_var=2630&amp;sent=20&amp;recv=18&amp;lost=0&amp;retrans=0&amp;sent_bytes=11626&amp;recv_bytes=1962&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=517&amp;x=0"'} 
 body={"categories":["dev"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"nmlts0sqrwifigqta-rv_g","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/nmlts0sqrwifigqta-rv_g","value":"Chuck Norris's log statements are always at the FATAL level."} 
 </msg>
<msg time="2025-02-07T18:58:35.173638" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.102805" elapsed="0.070943"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.175447" elapsed="0.000199"/>
</return>
<msg time="2025-02-07T18:58:35.177797" level="INFO">${blague} = Chuck Norris's log statements are always at the FATAL level.</msg>
<msg time="2025-02-07T18:58:35.177872" level="INFO">${cat} = ['dev']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.101054" elapsed="0.076852"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.178888" elapsed="0.000479"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.179892" elapsed="0.000402"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.180669" elapsed="0.000404"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.181391" elapsed="0.000288"/>
</kw>
<var name="${elt}">dev</var>
<status status="PASS" start="2025-02-07T18:58:35.100741" elapsed="0.081128"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.183143" level="INFO">&amp;{dict} = { category=explicit }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.182797" elapsed="0.000388"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.235515" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=explicit 
 path_url=/jokes/random?category=explicit 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.235728" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=explicit 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d64c67d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=20072&amp;min_rtt=15987&amp;rtt_var=5847&amp;sent=22&amp;recv=20&amp;lost=0&amp;retrans=0&amp;sent_bytes=13006&amp;recv_bytes=2163&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=596&amp;x=0"'} 
 body={"categories":["explicit"],"created_at":"2020-01-05 13:42:29.296379","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"m9lf8ButSDyzBkgUAhtnOg","updated_at":"2020-01-05 13:42:29.296379","url":"https://api.chucknorris.io/jokes/m9lf8ButSDyzBkgUAhtnOg","value":"Chuck Norris' penis has a dorsal fin."} 
 </msg>
<msg time="2025-02-07T18:58:35.236156" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.183852" elapsed="0.052373"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.237650" elapsed="0.000175"/>
</return>
<msg time="2025-02-07T18:58:35.239687" level="INFO">${blague} = Chuck Norris' penis has a dorsal fin.</msg>
<msg time="2025-02-07T18:58:35.239783" level="INFO">${cat} = ['explicit']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.182388" elapsed="0.057437"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.240863" elapsed="0.000457"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.241720" elapsed="0.000347"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.242435" elapsed="0.000388"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.243161" elapsed="0.000355"/>
</kw>
<var name="${elt}">explicit</var>
<status status="PASS" start="2025-02-07T18:58:35.182162" elapsed="0.061593"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.245327" level="INFO">&amp;{dict} = { category=fashion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.244916" elapsed="0.000455"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.295168" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=fashion 
 path_url=/jokes/random?category=fashion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.295428" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=fashion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d6acc5d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19517&amp;min_rtt=15588&amp;rtt_var=5496&amp;sent=24&amp;recv=22&amp;lost=0&amp;retrans=0&amp;sent_bytes=14378&amp;recv_bytes=2363&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=657&amp;x=0"'} 
 body={"categories":["fashion"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0wdewlp2tz-mt_upesvrjw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0wdewlp2tz-mt_upesvrjw","value":"Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris."} 
 </msg>
<msg time="2025-02-07T18:58:35.295765" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.246205" elapsed="0.049622"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.297250" elapsed="0.000206"/>
</return>
<msg time="2025-02-07T18:58:35.299058" level="INFO">${blague} = Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris.</msg>
<msg time="2025-02-07T18:58:35.299143" level="INFO">${cat} = ['fashion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.244393" elapsed="0.054790"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.300241" elapsed="0.000460"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.301013" elapsed="0.000273"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.301589" elapsed="0.001454"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.303432" elapsed="0.000358"/>
</kw>
<var name="${elt}">fashion</var>
<status status="PASS" start="2025-02-07T18:58:35.244105" elapsed="0.059869"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.305644" level="INFO">&amp;{dict} = { category=food }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.305118" elapsed="0.000569"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.359789" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=food 
 path_url=/jokes/random?category=food 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.360042" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=food 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d70d1dd64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19248&amp;min_rtt=15588&amp;rtt_var=4658&amp;sent=26&amp;recv=24&amp;lost=0&amp;retrans=0&amp;sent_bytes=15793&amp;recv_bytes=2560&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=721&amp;x=0"'} 
 body={"categories":["food"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"Vnx6otXNQD6W04saS5qZjA","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/Vnx6otXNQD6W04saS5qZjA","value":"When Chuck Norris gets fast food, his order is ready before he walks in."} 
 </msg>
<msg time="2025-02-07T18:58:35.360404" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.306508" elapsed="0.053946"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.361602" elapsed="0.000168"/>
</return>
<msg time="2025-02-07T18:58:35.363324" level="INFO">${blague} = When Chuck Norris gets fast food, his order is ready before he walks in.</msg>
<msg time="2025-02-07T18:58:35.363397" level="INFO">${cat} = ['food']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.304602" elapsed="0.058827"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.364393" elapsed="0.000450"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.365173" elapsed="0.000337"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.365829" elapsed="0.000353"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.366471" elapsed="0.000323"/>
</kw>
<var name="${elt}">food</var>
<status status="PASS" start="2025-02-07T18:58:35.304310" elapsed="0.062675"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.368567" level="INFO">&amp;{dict} = { category=history }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.368166" elapsed="0.000444"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.419247" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=history 
 path_url=/jokes/random?category=history 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.419469" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=history 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d76d70d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19028&amp;min_rtt=15588&amp;rtt_var=3935&amp;sent=28&amp;recv=26&amp;lost=0&amp;retrans=0&amp;sent_bytes=17186&amp;recv_bytes=2760&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=781&amp;x=0"'} 
 body={"categories":["history"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"t_wyddbstys8ubos8oni4q","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/t_wyddbstys8ubos8oni4q","value":"Chuck Norris originally wrote the first dictionary. The definition for each word is as follows - A swift roundhouse kick to the face."} 
 </msg>
<msg time="2025-02-07T18:58:35.420088" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.369408" elapsed="0.050739"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.421468" elapsed="0.000185"/>
</return>
<msg time="2025-02-07T18:58:35.423225" level="INFO">${blague} = Chuck Norris originally wrote the first dictionary. The definition for each word is as follows - A swift roundhouse kick to the face.</msg>
<msg time="2025-02-07T18:58:35.423307" level="INFO">${cat} = ['history']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.367641" elapsed="0.055701"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.424407" elapsed="0.000440"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.425133" elapsed="0.000256"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.425780" elapsed="0.000383"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.426477" elapsed="0.000338"/>
</kw>
<var name="${elt}">history</var>
<status status="PASS" start="2025-02-07T18:58:35.367334" elapsed="0.059672"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.428987" level="INFO">&amp;{dict} = { category=money }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.428136" elapsed="0.000894"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.483470" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=money 
 path_url=/jokes/random?category=money 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.483741" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=money 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d7cdd8d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18895&amp;min_rtt=15588&amp;rtt_var=3216&amp;sent=31&amp;recv=28&amp;lost=0&amp;retrans=0&amp;sent_bytes=18633&amp;recv_bytes=2958&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=845&amp;x=0"'} 
 body={"categories":["money"],"created_at":"2020-01-05 13:42:28.664997","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"iNmA3fofScqorFXWo3g0MQ","updated_at":"2020-05-22 06:16:41.133769","url":"https://api.chucknorris.io/jokes/iNmA3fofScqorFXWo3g0MQ","value":"Chuck Norris once loaned the dinosaurs money. They never payed him back."} 
 </msg>
<msg time="2025-02-07T18:58:35.484261" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.429800" elapsed="0.054543"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.485477" elapsed="0.000183"/>
</return>
<msg time="2025-02-07T18:58:35.487230" level="INFO">${blague} = Chuck Norris once loaned the dinosaurs money. They never payed him back.</msg>
<msg time="2025-02-07T18:58:35.487308" level="INFO">${cat} = ['money']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.427629" elapsed="0.059717"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.488456" elapsed="0.000471"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.489330" elapsed="0.000422"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.490185" elapsed="0.000585"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.491226" elapsed="0.000450"/>
</kw>
<var name="${elt}">money</var>
<status status="PASS" start="2025-02-07T18:58:35.427344" elapsed="0.064561"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.493870" level="INFO">&amp;{dict} = { category=movie }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.493280" elapsed="0.000650"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.553453" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=movie 
 path_url=/jokes/random?category=movie 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.553825" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=movie 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d83e47d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18711&amp;min_rtt=15588&amp;rtt_var=2781&amp;sent=34&amp;recv=30&amp;lost=0&amp;retrans=0&amp;sent_bytes=20073&amp;recv_bytes=3156&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=909&amp;x=0"'} 
 body={"categories":["movie"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"xtuqmvbvrzc9tob-a1s7ta","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/xtuqmvbvrzc9tob-a1s7ta","value":"Some people wear Superman pajamas. Superman wears Chuck Norris pajamas."} 
 </msg>
<msg time="2025-02-07T18:58:35.554210" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.494954" elapsed="0.059325"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.555686" elapsed="0.000229"/>
</return>
<msg time="2025-02-07T18:58:35.557824" level="INFO">${blague} = Some people wear Superman pajamas. Superman wears Chuck Norris pajamas.</msg>
<msg time="2025-02-07T18:58:35.557923" level="INFO">${cat} = ['movie']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.492592" elapsed="0.065378"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.559188" elapsed="0.000553"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.560152" elapsed="0.000371"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.560897" elapsed="0.000426"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.561713" elapsed="0.000388"/>
</kw>
<var name="${elt}">movie</var>
<status status="PASS" start="2025-02-07T18:58:35.492248" elapsed="0.070081"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.564053" level="INFO">&amp;{dict} = { category=music }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.563624" elapsed="0.000475"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.611817" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=music 
 path_url=/jokes/random?category=music 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.612136" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=music 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d8aebcd64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18993&amp;min_rtt=15588&amp;rtt_var=2649&amp;sent=36&amp;recv=32&amp;lost=0&amp;retrans=0&amp;sent_bytes=21452&amp;recv_bytes=3354&amp;delivery_rate=277261&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=975&amp;x=0"'} 
 body={"categories":["music"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0_acdyhnthyshildaipp1q","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/0_acdyhnthyshildaipp1q","value":"Who let the dogs out? Chuck Norris let the dogs out... and then roundhouse kicked them through an Oldsmobile."} 
 </msg>
<msg time="2025-02-07T18:58:35.612571" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.565033" elapsed="0.047616"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.614307" elapsed="0.000225"/>
</return>
<msg time="2025-02-07T18:58:35.616389" level="INFO">${blague} = Who let the dogs out? Chuck Norris let the dogs out... and then roundhouse kicked them through an Oldsmobile.</msg>
<msg time="2025-02-07T18:58:35.616475" level="INFO">${cat} = ['music']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.563048" elapsed="0.053474"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.617575" elapsed="0.000503"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.618421" elapsed="0.000909"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.619686" elapsed="0.000376"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.620352" elapsed="0.000320"/>
</kw>
<var name="${elt}">music</var>
<status status="PASS" start="2025-02-07T18:58:35.562717" elapsed="0.058162"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.622499" level="INFO">&amp;{dict} = { category=political }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.622079" elapsed="0.000463"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.675565" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=political 
 path_url=/jokes/random?category=political 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.675948" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=political 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d90f31d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18558&amp;min_rtt=15421&amp;rtt_var=2675&amp;sent=39&amp;recv=34&amp;lost=0&amp;retrans=0&amp;sent_bytes=22884&amp;recv_bytes=3556&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1035&amp;x=0"'} 
 body={"categories":["political"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"urv99vobshwv4masls2teg","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/urv99vobshwv4masls2teg","value":"The Manhattan Project was not intended to create nuclear weapons, it was meant to recreate the destructive power in a Chuck Norris Roundhouse Kick. They didn't even come close."} 
 </msg>
<msg time="2025-02-07T18:58:35.676580" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.623273" elapsed="0.053381"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.677965" elapsed="0.000196"/>
</return>
<msg time="2025-02-07T18:58:35.679714" level="INFO">${blague} = The Manhattan Project was not intended to create nuclear weapons, it was meant to recreate the destructive power in a Chuck Norris Roundhouse Kick. They didn't even come close.</msg>
<msg time="2025-02-07T18:58:35.679803" level="INFO">${cat} = ['political']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.621541" elapsed="0.058305"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.681047" elapsed="0.000518"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.681955" elapsed="0.000336"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.682665" elapsed="0.000429"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.683464" elapsed="0.000402"/>
</kw>
<var name="${elt}">political</var>
<status status="PASS" start="2025-02-07T18:58:35.621243" elapsed="0.062869"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.685846" level="INFO">&amp;{dict} = { category=religion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.685422" elapsed="0.000474"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.739716" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=religion 
 path_url=/jokes/random?category=religion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.740014" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=religion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d96fb0d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18655&amp;min_rtt=15421&amp;rtt_var=2200&amp;sent=42&amp;recv=36&amp;lost=0&amp;retrans=0&amp;sent_bytes=24366&amp;recv_bytes=3757&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1100&amp;x=0"'} 
 body={"categories":["religion"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"hsnyecdiq0e7moidbhs3fw","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/hsnyecdiq0e7moidbhs3fw","value":"Jesus can walk on water, but Chuck Norris can swim through land."} 
 </msg>
<msg time="2025-02-07T18:58:35.740403" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.686814" elapsed="0.053649"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.741927" elapsed="0.000214"/>
</return>
<msg time="2025-02-07T18:58:35.743999" level="INFO">${blague} = Jesus can walk on water, but Chuck Norris can swim through land.</msg>
<msg time="2025-02-07T18:58:35.744082" level="INFO">${cat} = ['religion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.684832" elapsed="0.059292"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.745165" elapsed="0.000482"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.746005" elapsed="0.000307"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.746649" elapsed="0.000373"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.747339" elapsed="0.000360"/>
</kw>
<var name="${elt}">religion</var>
<status status="PASS" start="2025-02-07T18:58:35.684491" elapsed="0.063434"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.750148" level="INFO">&amp;{dict} = { category=science }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.749727" elapsed="0.000463"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.812518" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=science 
 path_url=/jokes/random?category=science 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.812897" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=science 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544d9d81ed64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18547&amp;min_rtt=15421&amp;rtt_var=1866&amp;sent=45&amp;recv=38&amp;lost=0&amp;retrans=0&amp;sent_bytes=25782&amp;recv_bytes=3957&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1167&amp;x=0"'} 
 body={"categories":["science"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"qszz44pvr3iv7kzgwoedza","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/qszz44pvr3iv7kzgwoedza","value":"Chuck Norris can do a roundhouse kick faster than the speed of light. This means that if you turn on a light switch, you will be dead before the lightbulb turns on."} 
 </msg>
<msg time="2025-02-07T18:58:35.813470" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.750856" elapsed="0.062719"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.815047" elapsed="0.000217"/>
</return>
<msg time="2025-02-07T18:58:35.817236" level="INFO">${blague} = Chuck Norris can do a roundhouse kick faster than the speed of light. This means that if you turn on a light switch, you will be dead before the lightbulb turns on.</msg>
<msg time="2025-02-07T18:58:35.817337" level="INFO">${cat} = ['science']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.748756" elapsed="0.068630"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.818627" elapsed="0.000499"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.819522" elapsed="0.000337"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.820242" elapsed="0.000415"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.821043" elapsed="0.000376"/>
</kw>
<var name="${elt}">science</var>
<status status="PASS" start="2025-02-07T18:58:35.748430" elapsed="0.073222"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.823309" level="INFO">&amp;{dict} = { category=sport }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.822861" elapsed="0.000496"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.876494" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=sport 
 path_url=/jokes/random?category=sport 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.876814" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=sport 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544da4890d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19169&amp;min_rtt=15421&amp;rtt_var=2643&amp;sent=48&amp;recv=40&amp;lost=0&amp;retrans=0&amp;sent_bytes=27252&amp;recv_bytes=4155&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1236&amp;x=0"'} 
 body={"categories":["sport"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"qbfnqa0pstsl00i2he3g7w","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/qbfnqa0pstsl00i2he3g7w","value":"Chuck Norris once went skydiving, but promised never to do it again. One Grand Canyon is enough."} 
 </msg>
<msg time="2025-02-07T18:58:35.877195" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.824254" elapsed="0.053004"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.878698" elapsed="0.000193"/>
</return>
<msg time="2025-02-07T18:58:35.880798" level="INFO">${blague} = Chuck Norris once went skydiving, but promised never to do it again. One Grand Canyon is enough.</msg>
<msg time="2025-02-07T18:58:35.880896" level="INFO">${cat} = ['sport']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.822309" elapsed="0.058633"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.882153" elapsed="0.000602"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.883106" elapsed="0.000316"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.883755" elapsed="0.000387"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.884473" elapsed="0.000331"/>
</kw>
<var name="${elt}">sport</var>
<status status="PASS" start="2025-02-07T18:58:35.822009" elapsed="0.062988"/>
</iter>
<iter>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:35.886498" level="INFO">&amp;{dict} = { category=travel }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:35.886108" elapsed="0.000433"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.939813" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=travel 
 path_url=/jokes/random?category=travel 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.940138" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=travel 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951115&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=uuGUHN0xpEBqN4Feel5ZihfBqUSf%2FMXpV0BQZG4XQEk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544daa903d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19083&amp;min_rtt=15421&amp;rtt_var=2153&amp;sent=51&amp;recv=42&amp;lost=0&amp;retrans=0&amp;sent_bytes=28688&amp;recv_bytes=4354&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1300&amp;x=0"'} 
 body={"categories":["travel"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"8l-mg2v1s-kz1p6uz5mdmg","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/8l-mg2v1s-kz1p6uz5mdmg","value":"As an infant, Chuck Norris' parents gave him a toy hammer. He gave the world Stonehenge."} 
 </msg>
<msg time="2025-02-07T18:58:35.940636" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.887295" elapsed="0.053436"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:35.942055" elapsed="0.000199"/>
</return>
<msg time="2025-02-07T18:58:35.943978" level="INFO">${blague} = As an infant, Chuck Norris' parents gave him a toy hammer. He gave the world Stonehenge.</msg>
<msg time="2025-02-07T18:58:35.944050" level="INFO">${cat} = ['travel']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:35.885605" elapsed="0.058485"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${cat}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.944963" elapsed="0.000404"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:35.945679" elapsed="0.000269"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${cat}[0]</arg>
<arg>${elt}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-02-07T18:58:35.946234" elapsed="0.000323"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-02-07T18:58:35.946872" elapsed="0.000442"/>
</kw>
<var name="${elt}">travel</var>
<status status="PASS" start="2025-02-07T18:58:35.885329" elapsed="0.062268"/>
</iter>
<var>${elt}</var>
<value>@{liste_cat}</value>
<status status="PASS" start="2025-02-07T18:58:34.909390" elapsed="1.038450"/>
</for>
<status status="PASS" start="2025-02-07T18:58:34.856910" elapsed="1.091338"/>
</test>
<test id="s1-s1-t4" name="afficher la liste des catégories" line="26">
<kw name="recupérer la liste des catégories" owner="chuckNorris">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:35.999558" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/categories 
 path_url=/jokes/categories 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:35.999763" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/categories 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544db0963d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19009&amp;min_rtt=15421&amp;rtt_var=1762&amp;sent=54&amp;recv=44&amp;lost=0&amp;retrans=0&amp;sent_bytes=30120&amp;recv_bytes=4541&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1362&amp;x=0"'} 
 body=["animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel"] 
 </msg>
<msg time="2025-02-07T18:58:36.000025" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${CATEGORIES}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:35.952508" elapsed="0.047571"/>
</kw>
<return>
<value>${resp.json()}</value>
<status status="PASS" start="2025-02-07T18:58:36.001463" elapsed="0.000188"/>
</return>
<msg time="2025-02-07T18:58:36.002754" level="INFO">@{categories} = [ animal | career | celebrity | dev | explicit | fashion | food | history | money | movie | music | political | religion | science | sport | travel ]</msg>
<var>@{categories}</var>
<status status="PASS" start="2025-02-07T18:58:35.952153" elapsed="0.050746"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.004347" elapsed="0.000398"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.006156" level="INFO">&amp;{dict} = { category=animal }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.005778" elapsed="0.000430"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.064716" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.065022" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544db69b6d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18670&amp;min_rtt=15421&amp;rtt_var=1792&amp;sent=56&amp;recv=46&amp;lost=0&amp;retrans=0&amp;sent_bytes=31400&amp;recv_bytes=4740&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1425&amp;x=0"'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"o-vfxwx6rgecuo_f5cecpq","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/o-vfxwx6rgecuo_f5cecpq","value":"They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them."} 
 </msg>
<msg time="2025-02-07T18:58:36.065452" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.006869" elapsed="0.058680"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.067469" elapsed="0.000201"/>
</return>
<msg time="2025-02-07T18:58:36.069325" level="INFO">${blague} = They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them.</msg>
<msg time="2025-02-07T18:58:36.069403" level="INFO">${cat} = ['animal']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.005210" elapsed="0.064254"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.070432" elapsed="0.000493"/>
</kw>
<var name="${elt}">animal</var>
<status status="PASS" start="2025-02-07T18:58:36.004066" elapsed="0.067061"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.071825" elapsed="0.000371"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.073863" level="INFO">&amp;{dict} = { category=career }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.073536" elapsed="0.000368"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.127575" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=career 
 path_url=/jokes/random?category=career 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.127780" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=career 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544dbda20d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18527&amp;min_rtt=15421&amp;rtt_var=1630&amp;sent=58&amp;recv=48&amp;lost=0&amp;retrans=0&amp;sent_bytes=32800&amp;recv_bytes=4939&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1489&amp;x=0"'} 
 body={"categories":["career"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"cwguxfhptcuagndjdt1hya","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/cwguxfhptcuagndjdt1hya","value":"In the beginning there was nothing...then Chuck Norris Roundhouse kicked that nothing in the face and said \"Get a job\". That is the story of the universe."} 
 </msg>
<msg time="2025-02-07T18:58:36.128085" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.074527" elapsed="0.053614"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.129436" elapsed="0.000198"/>
</return>
<msg time="2025-02-07T18:58:36.131474" level="INFO">${blague} = In the beginning there was nothing...then Chuck Norris Roundhouse kicked that nothing in the face and said "Get a job". That is the story of the universe.</msg>
<msg time="2025-02-07T18:58:36.131561" level="INFO">${cat} = ['career']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.072652" elapsed="0.058952"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.132630" elapsed="0.000512"/>
</kw>
<var name="${elt}">career</var>
<status status="PASS" start="2025-02-07T18:58:36.071551" elapsed="0.061914"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.134087" elapsed="0.000334"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.135930" level="INFO">&amp;{dict} = { category=celebrity }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.135442" elapsed="0.000544"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.196433" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 path_url=/jokes/random?category=celebrity 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.196836" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544dc3a91d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18306&amp;min_rtt=15421&amp;rtt_var=1635&amp;sent=61&amp;recv=50&amp;lost=0&amp;retrans=0&amp;sent_bytes=34268&amp;recv_bytes=5141&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1554&amp;x=0"'} 
 body={"categories":["celebrity"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"iDINmgz-RuuY715ky4KIFQ","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/iDINmgz-RuuY715ky4KIFQ","value":"Chuck Norris smoked charlie sheen to get a high,an still couldn't catch a buzz."} 
 </msg>
<msg time="2025-02-07T18:58:36.197418" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.136928" elapsed="0.060598"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.199149" elapsed="0.000234"/>
</return>
<msg time="2025-02-07T18:58:36.201300" level="INFO">${blague} = Chuck Norris smoked charlie sheen to get a high,an still couldn't catch a buzz.</msg>
<msg time="2025-02-07T18:58:36.201382" level="INFO">${cat} = ['celebrity']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.134872" elapsed="0.066556"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.202444" elapsed="0.000549"/>
</kw>
<var name="${elt}">celebrity</var>
<status status="PASS" start="2025-02-07T18:58:36.133846" elapsed="0.069406"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.203915" elapsed="0.000360"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.205983" level="INFO">&amp;{dict} = { category=dev }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.205467" elapsed="0.000568"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.260514" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=dev 
 path_url=/jokes/random?category=dev 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.260862" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=dev 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544dcab0cd64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18588&amp;min_rtt=15421&amp;rtt_var=1790&amp;sent=63&amp;recv=52&amp;lost=0&amp;retrans=0&amp;sent_bytes=35670&amp;recv_bytes=5337&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1620&amp;x=0"'} 
 body={"categories":["dev"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"jqgu04prsomr9uiwbyzebq","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/jqgu04prsomr9uiwbyzebq","value":"For Chuck Norris, NP-Hard = O(1)."} 
 </msg>
<msg time="2025-02-07T18:58:36.261345" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.207027" elapsed="0.054424"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.263116" elapsed="0.000173"/>
</return>
<msg time="2025-02-07T18:58:36.264932" level="INFO">${blague} = For Chuck Norris, NP-Hard = O(1).</msg>
<msg time="2025-02-07T18:58:36.265012" level="INFO">${cat} = ['dev']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.204789" elapsed="0.060268"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.266114" elapsed="0.000542"/>
</kw>
<var name="${elt}">dev</var>
<status status="PASS" start="2025-02-07T18:58:36.203657" elapsed="0.063202"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.267392" elapsed="0.000371"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.269438" level="INFO">&amp;{dict} = { category=explicit }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.269074" elapsed="0.000405"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.332142" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=explicit 
 path_url=/jokes/random?category=explicit 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.332450" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=explicit 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544dd1b92d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18510&amp;min_rtt=15421&amp;rtt_var=1498&amp;sent=66&amp;recv=54&amp;lost=0&amp;retrans=0&amp;sent_bytes=37065&amp;recv_bytes=5538&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1692&amp;x=0"'} 
 body={"categories":["explicit"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"K_JFovFsTRCxu0rWey7rGA","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/K_JFovFsTRCxu0rWey7rGA","value":"There are two meanings for The Rock: 1) Professional wrestler Dwayne Johnson, and 2) Chuck Norris' dick."} 
 </msg>
<msg time="2025-02-07T18:58:36.332912" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.270077" elapsed="0.062937"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.334427" elapsed="0.000180"/>
</return>
<msg time="2025-02-07T18:58:36.336388" level="INFO">${blague} = There are two meanings for The Rock: 1) Professional wrestler Dwayne Johnson, and 2) Chuck Norris' dick.</msg>
<msg time="2025-02-07T18:58:36.336475" level="INFO">${cat} = ['explicit']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.268168" elapsed="0.068347"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.337599" elapsed="0.000443"/>
</kw>
<var name="${elt}">explicit</var>
<status status="PASS" start="2025-02-07T18:58:36.267184" elapsed="0.071070"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.338789" elapsed="0.000299"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.340607" level="INFO">&amp;{dict} = { category=fashion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.340173" elapsed="0.000487"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.395690" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=fashion 
 path_url=/jokes/random?category=fashion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.396004" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=fashion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544dd7c00d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18454&amp;min_rtt=15421&amp;rtt_var=1236&amp;sent=68&amp;recv=56&amp;lost=0&amp;retrans=0&amp;sent_bytes=38488&amp;recv_bytes=5738&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1756&amp;x=0"'} 
 body={"categories":["fashion"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"0wdewlp2tz-mt_upesvrjw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0wdewlp2tz-mt_upesvrjw","value":"Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris."} 
 </msg>
<msg time="2025-02-07T18:58:36.396290" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.341438" elapsed="0.054912"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.397670" elapsed="0.000189"/>
</return>
<msg time="2025-02-07T18:58:36.399724" level="INFO">${blague} = Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris.</msg>
<msg time="2025-02-07T18:58:36.399820" level="INFO">${cat} = ['fashion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.339561" elapsed="0.060304"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.400913" elapsed="0.000535"/>
</kw>
<var name="${elt}">fashion</var>
<status status="PASS" start="2025-02-07T18:58:36.338592" elapsed="0.063124"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.402382" elapsed="0.000478"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.404371" level="INFO">&amp;{dict} = { category=food }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.403949" elapsed="0.000470"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.460305" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=food 
 path_url=/jokes/random?category=food 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.460698" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=food 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544ddec71d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18513&amp;min_rtt=15421&amp;rtt_var=1045&amp;sent=70&amp;recv=58&amp;lost=0&amp;retrans=0&amp;sent_bytes=39904&amp;recv_bytes=5935&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1820&amp;x=0"'} 
 body={"categories":["food"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"TJ7QCm25RpGZZo-90zyO0w","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/TJ7QCm25RpGZZo-90zyO0w","value":"Chuck Norris can get Mexican food at a Japanese restaurant."} 
 </msg>
<msg time="2025-02-07T18:58:36.461241" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.405329" elapsed="0.056009"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.463005" elapsed="0.000227"/>
</return>
<msg time="2025-02-07T18:58:36.465113" level="INFO">${blague} = Chuck Norris can get Mexican food at a Japanese restaurant.</msg>
<msg time="2025-02-07T18:58:36.465197" level="INFO">${cat} = ['food']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.403363" elapsed="0.061878"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.466313" elapsed="0.000581"/>
</kw>
<var name="${elt}">food</var>
<status status="PASS" start="2025-02-07T18:58:36.402119" elapsed="0.065159"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.467972" elapsed="0.000325"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.470248" level="INFO">&amp;{dict} = { category=history }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.469821" elapsed="0.000472"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.528115" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=history 
 path_url=/jokes/random?category=history 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.528519" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=history 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544de5cdcd64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18413&amp;min_rtt=15421&amp;rtt_var=985&amp;sent=72&amp;recv=60&amp;lost=0&amp;retrans=0&amp;sent_bytes=41290&amp;recv_bytes=6135&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1889&amp;x=0"'} 
 body={"categories":["history"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"t_wyddbstys8ubos8oni4q","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/t_wyddbstys8ubos8oni4q","value":"Chuck Norris originally wrote the first dictionary. The definition for each word is as follows - A swift roundhouse kick to the face."} 
 </msg>
<msg time="2025-02-07T18:58:36.529155" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.471141" elapsed="0.058112"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.531404" elapsed="0.000172"/>
</return>
<msg time="2025-02-07T18:58:36.533231" level="INFO">${blague} = Chuck Norris originally wrote the first dictionary. The definition for each word is as follows - A swift roundhouse kick to the face.</msg>
<msg time="2025-02-07T18:58:36.533319" level="INFO">${cat} = ['history']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.468747" elapsed="0.064618"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.534008" elapsed="0.000320"/>
</kw>
<var name="${elt}">history</var>
<status status="PASS" start="2025-02-07T18:58:36.467722" elapsed="0.066781"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.534912" elapsed="0.000220"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.536220" level="INFO">&amp;{dict} = { category=money }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.535885" elapsed="0.000373"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.588805" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=money 
 path_url=/jokes/random?category=money 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.589024" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=money 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544debd5fd64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19095&amp;min_rtt=15421&amp;rtt_var=2103&amp;sent=74&amp;recv=62&amp;lost=0&amp;retrans=0&amp;sent_bytes=42715&amp;recv_bytes=6333&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=1947&amp;x=0"'} 
 body={"categories":["money"],"created_at":"2020-01-05 13:42:28.984661","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"pOGlPV77SmKjkhOQxu2siQ","updated_at":"2020-05-22 06:16:41.133769","url":"https://api.chucknorris.io/jokes/pOGlPV77SmKjkhOQxu2siQ","value":"Chuck Norris does not value money. He instead pays for goods and services with the teeth of his enemies."} 
 </msg>
<msg time="2025-02-07T18:58:36.589352" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.536798" elapsed="0.052624"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.590606" elapsed="0.000172"/>
</return>
<msg time="2025-02-07T18:58:36.592367" level="INFO">${blague} = Chuck Norris does not value money. He instead pays for goods and services with the teeth of his enemies.</msg>
<msg time="2025-02-07T18:58:36.592442" level="INFO">${cat} = ['money']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.535499" elapsed="0.056982"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.593332" elapsed="0.000447"/>
</kw>
<var name="${elt}">money</var>
<status status="PASS" start="2025-02-07T18:58:36.534768" elapsed="0.059216"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.594613" elapsed="0.000325"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.596240" level="INFO">&amp;{dict} = { category=movie }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.595839" elapsed="0.000440"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.647581" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=movie 
 path_url=/jokes/random?category=movie 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.647829" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=movie 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544df1dc0d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19039&amp;min_rtt=15421&amp;rtt_var=1689&amp;sent=76&amp;recv=64&amp;lost=0&amp;retrans=0&amp;sent_bytes=44145&amp;recv_bytes=6531&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=2008&amp;x=0"'} 
 body={"categories":["movie"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"iceymh7_siixjrhoqgnwgq","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/iceymh7_siixjrhoqgnwgq","value":"Scotty in Star Trek often says \"Ye cannae change the laws of physics.\" This is untrue. Chuck Norris can change the laws of physics. With his fists."} 
 </msg>
<msg time="2025-02-07T18:58:36.648158" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.596849" elapsed="0.051382"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.649720" elapsed="0.000196"/>
</return>
<msg time="2025-02-07T18:58:36.651756" level="INFO">${blague} = Scotty in Star Trek often says "Ye cannae change the laws of physics." This is untrue. Chuck Norris can change the laws of physics. With his fists.</msg>
<msg time="2025-02-07T18:58:36.651849" level="INFO">${cat} = ['movie']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.595346" elapsed="0.056545"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.652845" elapsed="0.000500"/>
</kw>
<var name="${elt}">movie</var>
<status status="PASS" start="2025-02-07T18:58:36.594385" elapsed="0.059200"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.654222" elapsed="0.000337"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.656603" level="INFO">&amp;{dict} = { category=music }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.656145" elapsed="0.000512"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.716805" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=music 
 path_url=/jokes/random?category=music 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.717204" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=music 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544df7e3ed64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18898&amp;min_rtt=15421&amp;rtt_var=1549&amp;sent=78&amp;recv=66&amp;lost=0&amp;retrans=0&amp;sent_bytes=45568&amp;recv_bytes=6729&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=2075&amp;x=0"'} 
 body={"categories":["music"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"7tb4dwgvrwkaqg-a-wzhlq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/7tb4dwgvrwkaqg-a-wzhlq","value":"Chuck Norris shot the sheriff, but he round house kicked the deputy."} 
 </msg>
<msg time="2025-02-07T18:58:36.717837" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.657444" elapsed="0.060496"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.719891" elapsed="0.000150"/>
</return>
<msg time="2025-02-07T18:58:36.721671" level="INFO">${blague} = Chuck Norris shot the sheriff, but he round house kicked the deputy.</msg>
<msg time="2025-02-07T18:58:36.721742" level="INFO">${cat} = ['music']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.655087" elapsed="0.066691"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.722476" elapsed="0.000333"/>
</kw>
<var name="${elt}">music</var>
<status status="PASS" start="2025-02-07T18:58:36.653972" elapsed="0.069009"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.723386" elapsed="0.000206"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.724622" level="INFO">&amp;{dict} = { category=political }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.724304" elapsed="0.000356"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.775218" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=political 
 path_url=/jokes/random?category=political 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.775429" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=political 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544dfeeb0d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18926&amp;min_rtt=15421&amp;rtt_var=1217&amp;sent=80&amp;recv=68&amp;lost=0&amp;retrans=0&amp;sent_bytes=46951&amp;recv_bytes=6931&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=2136&amp;x=0"'} 
 body={"categories":["political"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"Q4QOV09yQiuoQzEPOtybqg","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/Q4QOV09yQiuoQzEPOtybqg","value":"When Barack Obama said \"Yes we can,\" he actually was referring to Chuck Norris"} 
 </msg>
<msg time="2025-02-07T18:58:36.775747" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.725199" elapsed="0.050614"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.777099" elapsed="0.000169"/>
</return>
<msg time="2025-02-07T18:58:36.779012" level="INFO">${blague} = When Barack Obama said "Yes we can," he actually was referring to Chuck Norris</msg>
<msg time="2025-02-07T18:58:36.779089" level="INFO">${cat} = ['political']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.723914" elapsed="0.055214"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.780053" elapsed="0.000482"/>
</kw>
<var name="${elt}">political</var>
<status status="PASS" start="2025-02-07T18:58:36.723243" elapsed="0.057519"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.781288" elapsed="0.000300"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.783006" level="INFO">&amp;{dict} = { category=religion }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.782609" elapsed="0.000498"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.835665" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=religion 
 path_url=/jokes/random?category=religion 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.835907" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=religion 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544e04f1bd64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=18937&amp;min_rtt=15421&amp;rtt_var=935&amp;sent=82&amp;recv=70&amp;lost=0&amp;retrans=0&amp;sent_bytes=48356&amp;recv_bytes=7132&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=2198&amp;x=0"'} 
 body={"categories":["religion"],"created_at":"2020-01-05 13:42:30.480041","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"66Eivn6tSV2IaNTzXEdgFQ","updated_at":"2020-08-24 15:45:37.119961","url":"https://api.chucknorris.io/jokes/66Eivn6tSV2IaNTzXEdgFQ","value":"One day a jew accidently stepped on Chuck Norris his shoe. It was his favorite shoe. So Chuck created Hitler."} 
 </msg>
<msg time="2025-02-07T18:58:36.836250" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.783814" elapsed="0.052508"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.837904" elapsed="0.000266"/>
</return>
<msg time="2025-02-07T18:58:36.840060" level="INFO">${blague} = One day a jew accidently stepped on Chuck Norris his shoe. It was his favorite shoe. So Chuck created Hitler.</msg>
<msg time="2025-02-07T18:58:36.840154" level="INFO">${cat} = ['religion']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.782062" elapsed="0.058139"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.841237" elapsed="0.000510"/>
</kw>
<var name="${elt}">religion</var>
<status status="PASS" start="2025-02-07T18:58:36.781081" elapsed="0.060901"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.842595" elapsed="0.000301"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.844833" level="INFO">&amp;{dict} = { category=science }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.844393" elapsed="0.000487"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.900273" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=science 
 path_url=/jokes/random?category=science 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.900657" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=science 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544e0af72d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19632&amp;min_rtt=15421&amp;rtt_var=2091&amp;sent=84&amp;recv=72&amp;lost=0&amp;retrans=0&amp;sent_bytes=49785&amp;recv_bytes=7332&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=2260&amp;x=0"'} 
 body={"categories":["science"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"_en05aqcsvuu3v2vopnoga","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/_en05aqcsvuu3v2vopnoga","value":"While urinating, Chuck Norris is easily capable of welding titanium."} 
 </msg>
<msg time="2025-02-07T18:58:36.901264" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.845648" elapsed="0.055746"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.903280" elapsed="0.000220"/>
</return>
<msg time="2025-02-07T18:58:36.905399" level="INFO">${blague} = While urinating, Chuck Norris is easily capable of welding titanium.</msg>
<msg time="2025-02-07T18:58:36.905489" level="INFO">${cat} = ['science']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.843359" elapsed="0.062176"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.906448" elapsed="0.000417"/>
</kw>
<var name="${elt}">science</var>
<status status="PASS" start="2025-02-07T18:58:36.842374" elapsed="0.064667"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.907452" elapsed="0.000215"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.908722" level="INFO">&amp;{dict} = { category=sport }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.908379" elapsed="0.000381"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:36.959701" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=sport 
 path_url=/jokes/random?category=sport 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:36.959903" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=sport 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951116&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=%2Bv2fo1eLevSIiMed5lvDQ6ftLgqtLtdi5zk1AdDDXJE%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544e10ff0d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19435&amp;min_rtt=15421&amp;rtt_var=1963&amp;sent=86&amp;recv=74&amp;lost=0&amp;retrans=0&amp;sent_bytes=51169&amp;recv_bytes=7530&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=2319&amp;x=0"'} 
 body={"categories":["sport"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"7jwk7xbwrp-h-nw233wqmq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/7jwk7xbwrp-h-nw233wqmq","value":"Chuck Norris used to play baseball. When Babe Ruth was hailed as the better player, Chuck Norris killed him with a baseball bat to the throat. Lou Gehrig got off easy."} 
 </msg>
<msg time="2025-02-07T18:58:36.960190" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.909336" elapsed="0.050919"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:36.961525" elapsed="0.000194"/>
</return>
<msg time="2025-02-07T18:58:36.963534" level="INFO">${blague} = Chuck Norris used to play baseball. When Babe Ruth was hailed as the better player, Chuck Norris killed him with a baseball bat to the throat. Lou Gehrig got off easy.</msg>
<msg time="2025-02-07T18:58:36.963622" level="INFO">${cat} = ['sport']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.907987" elapsed="0.055679"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.964604" elapsed="0.000497"/>
</kw>
<var name="${elt}">sport</var>
<status status="PASS" start="2025-02-07T18:58:36.907300" elapsed="0.058040"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:36.965941" elapsed="0.000330"/>
</kw>
<kw name="Blague de catégorie" owner="chuckNorris">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-02-07T18:58:36.967727" level="INFO">&amp;{dict} = { category=travel }</msg>
<var>&amp;{dict}</var>
<arg>category=${cat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-02-07T18:58:36.967291" elapsed="0.000490"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.020931" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=travel 
 path_url=/jokes/random?category=travel 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:37.021287" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=travel 
 status=200, reason= 
 headers={'Date': 'Fri, 07 Feb 2025 17:58:37 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738951117&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=1DXAq5cPgsgXxkK2P2Pn4zGtMOX3LFBzw1dah7XUCRA%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738951117&amp;sid=812dcc77-0bd0-43b1-a5f1-b25750382959&amp;s=1DXAq5cPgsgXxkK2P2Pn4zGtMOX3LFBzw1dah7XUCRA%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e544e16859d64e-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=19336&amp;min_rtt=15421&amp;rtt_var=1669&amp;sent=88&amp;recv=76&amp;lost=0&amp;retrans=0&amp;sent_bytes=52611&amp;recv_bytes=7729&amp;delivery_rate=280041&amp;cwnd=246&amp;unsent_bytes=0&amp;cid=bcde0836a1caddae&amp;ts=2380&amp;x=0"'} 
 body={"categories":["travel"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://api.chucknorris.io/img/avatar/chuck-norris.png","id":"uv5jvundsfuyiuiwswy3ba","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/uv5jvundsfuyiuiwswy3ba","value":"Chuck Norris did in fact, build Rome in a day."} 
 </msg>
<msg time="2025-02-07T18:58:37.021905" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>${SESSION_NAME}</arg>
<arg>${BLAGUE_AU_HASARD}</arg>
<arg>params=&amp;{dict}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:36.968526" elapsed="0.053545"/>
</kw>
<return>
<value>${resp.json()}[value]</value>
<value>${resp.json()}[categories]</value>
<status status="PASS" start="2025-02-07T18:58:37.023458" elapsed="0.000195"/>
</return>
<msg time="2025-02-07T18:58:37.025482" level="INFO">${blague} = Chuck Norris did in fact, build Rome in a day.</msg>
<msg time="2025-02-07T18:58:37.025565" level="INFO">${cat} = ['travel']</msg>
<var>${blague}</var>
<var>${cat}</var>
<arg>${elt}</arg>
<status status="PASS" start="2025-02-07T18:58:36.966732" elapsed="0.058877"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>categorie:${cat}[0] Blague:${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:37.026670" elapsed="0.000574"/>
</kw>
<var name="${elt}">travel</var>
<status status="PASS" start="2025-02-07T18:58:36.965712" elapsed="0.061766"/>
</iter>
<var>${elt}</var>
<value>@{categories}</value>
<status status="PASS" start="2025-02-07T18:58:36.003701" elapsed="1.024025"/>
</for>
<status status="PASS" start="2025-02-07T18:58:35.951586" elapsed="1.076641"/>
</test>
<kw name="Fermer session chuck" owner="chuckNorris" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.033984" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T18:58:37.033764" elapsed="0.000484"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.032834" elapsed="0.001953"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:34.505744" elapsed="2.529246"/>
</suite>
<suite id="s1-s2" name="Google" source="/Users/dominiquemereaux/code/TPSEPT2023/rest3/google.robot">
<test id="s1-s2-t1" name="test1" line="6">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.069114" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T18:58:37.068888" elapsed="0.000385"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.068618" elapsed="0.001011"/>
</kw>
<kw name="Faire une requete et afficher la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.162959" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:37.163187" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 17:58:37 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=14'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T18:58:37.163458" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:37.070034" elapsed="0.093471"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:37.164707" elapsed="0.000958"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T18:58:37.166942" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1047353f0&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T18:58:37.165992" elapsed="0.000994"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.069845" elapsed="0.097745"/>
</kw>
<kw name="Faire une requete et récuperer la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.206962" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:37.207184" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 17:58:37 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=17'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T18:58:37.207495" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:37.168289" elapsed="0.039261"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T18:58:37.210021" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x104770720&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T18:58:37.208912" elapsed="0.001153"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-07T18:58:37.210689" elapsed="0.000206"/>
</return>
<msg time="2025-02-07T18:58:37.211232" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x104770720&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-07T18:58:37.167964" elapsed="0.043303"/>
</kw>
<kw name="Contrôler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-07T18:58:37.212231" elapsed="0.000251"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-07T18:58:37.211895" elapsed="0.000750"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.213293" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T18:58:37.213191" elapsed="0.000272"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.212945" elapsed="0.000901"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.068286" elapsed="0.145707"/>
</test>
<test id="s1-s2-t2" name="test2" line="10">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.217437" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T18:58:37.217184" elapsed="0.000455"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.216946" elapsed="0.001105"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>True</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-02-07T18:58:37.218264" elapsed="0.000164"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.219027" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T18:58:37.218938" elapsed="0.000149"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.218707" elapsed="0.000985"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.216591" elapsed="0.003291"/>
</test>
<test id="s1-s2-t3" name="test3" line="12">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.224290" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T18:58:37.224056" elapsed="0.000391"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.223639" elapsed="0.001182"/>
</kw>
<kw name="Faire une requete et afficher la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.278644" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:37.278779" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 17:58:37 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=16'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T18:58:37.278993" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:37.225250" elapsed="0.053783"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:37.280038" elapsed="0.000808"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T18:58:37.281958" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1047708b0&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T18:58:37.281130" elapsed="0.000864"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.225052" elapsed="0.057417"/>
</kw>
<kw name="Faire une requete et récuperer la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.322624" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:37.322788" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 17:58:37 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=18'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T18:58:37.323016" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:37.283257" elapsed="0.039808"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T18:58:37.325230" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x104772660&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T18:58:37.324251" elapsed="0.001021"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-07T18:58:37.325891" elapsed="0.000114"/>
</return>
<msg time="2025-02-07T18:58:37.326460" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x104772660&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-07T18:58:37.282893" elapsed="0.043605"/>
</kw>
<kw name="Contrôler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-07T18:58:37.327674" elapsed="0.000297"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-07T18:58:37.327240" elapsed="0.000942"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.329006" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T18:58:37.328889" elapsed="0.000342"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.328576" elapsed="0.001238"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.223316" elapsed="0.106806"/>
</test>
<test id="s1-s2-t4" name="test4" line="16">
<kw name="Ouvrir session" owner="googleMotcle" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.335000" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-02-07T18:58:37.334644" elapsed="0.000899"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.334297" elapsed="0.001784"/>
</kw>
<kw name="Faire une requete et afficher la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.395289" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:37.395523" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 17:58:37 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=16'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T18:58:37.395890" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:37.336660" elapsed="0.059293"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-02-07T18:58:37.397519" elapsed="0.001212"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T18:58:37.400179" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x1047706d0&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T18:58:37.399132" elapsed="0.001100"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.336389" elapsed="0.064689"/>
</kw>
<kw name="Faire une requete et récuperer la réponse" owner="googleMotcle">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.435379" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-02-07T18:58:37.435625" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 07 Feb 2025 17:58:37 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Content-Security-Policy-Report-Only': "script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/scaffolding/msaifdggmnwc:248:0", 'Cross-Origin-Opener-Policy-Report-Only': 'same-origin; report-to=msaifdggmnwc:248:0', 'Report-To': '{"group":"msaifdggmnwc:248:0","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/scaffolding/msaifdggmnwc:248:0"}],}', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=15'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg time="2025-02-07T18:58:37.435961" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-02-07T18:58:37.402120" elapsed="0.034258"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2025-02-07T18:58:37.439614" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x104781990&gt;</msg>
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2025-02-07T18:58:37.438254" elapsed="0.001429"/>
</kw>
<return>
<value>${structXML}</value>
<status status="PASS" start="2025-02-07T18:58:37.440637" elapsed="0.000216"/>
</return>
<msg time="2025-02-07T18:58:37.441417" level="INFO">${resp} = &lt;Element 'GeocodeResponse' at 0x104781990&gt;</msg>
<var>${resp}</var>
<status status="PASS" start="2025-02-07T18:58:37.401643" elapsed="0.039856"/>
</kw>
<kw name="Contrôler rejet" owner="googleMotcle">
<kw name="Element Text Should Be" owner="XML">
<arg>${xml}</arg>
<arg>${MESSAGE_DE_REJET}</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" start="2025-02-07T18:58:37.443312" elapsed="0.000576"/>
</kw>
<arg>${resp}</arg>
<status status="PASS" start="2025-02-07T18:58:37.442662" elapsed="0.001515"/>
</kw>
<kw name="fermer session" owner="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-02-07T18:58:37.445365" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-02-07T18:58:37.445201" elapsed="0.000513"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.444721" elapsed="0.001746"/>
</kw>
<status status="PASS" start="2025-02-07T18:58:37.333827" elapsed="0.112873"/>
</test>
<status status="PASS" start="2025-02-07T18:58:37.050516" elapsed="0.400079"/>
</suite>
<status status="PASS" start="2025-02-07T18:58:34.493636" elapsed="2.960772"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Rest3">Rest3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="chuckNorris">Rest3.chuckNorris</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Google">Rest3.Google</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
