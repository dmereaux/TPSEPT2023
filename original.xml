<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.5 on darwin)" generated="20230922 16:07:36.607" rpa="false" schemaversion="4">
<suite id="s1" name="TPSEPT2023" source="/Users/dominiquemereaux/code/TPSEPT2023">
<suite id="s1-s1" name="Basic" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic">
<suite id="s1-s1-s1" name="premierPas" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/premierPas.robot">
<kw name="Log To Console" library="BuiltIn" type="SETUP">
<arg>debut de suite</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.617" endtime="20230922 16:07:36.617"/>
</kw>
<test id="s1-s1-s1-t1" name="test variable globale" line="10">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.617" endtime="20230922 16:07:36.617"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.617" endtime="20230922 16:07:36.617"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>site à tester: ${URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.617" endtime="20230922 16:07:36.618"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.618"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.617" endtime="20230922 16:07:36.618"/>
</test>
<test id="s1-s1-s1-t2" name="test de la liste" line="13">
<kw name="Log To Console" library="BuiltIn">
<arg>2 item de la liste: ${maListe}[1]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.618"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${maListe2}</var>
<arg>rouge</arg>
<arg>blanc</arg>
<arg>vert</arg>
<arg>jaune</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:07:36.618" level="INFO">${maListe2} = ['rouge', 'blanc', 'vert', 'jaune']</msg>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.618"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>2 item de la liste: ${maListe2}[1]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.618"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${maListe2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.618"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${maListe2}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230922 16:07:36.618" level="INFO">${maListe2} = ['rouge', 'blanc', 'vert', 'jaune']</msg>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.618"/>
</kw>
<for flavor="IN">
<var>${elt}</var>
<value>@{maListe}</value>
<iter>
<var name="${elt}">un</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.618"/>
</kw>
<if>
<branch type="IF" condition="&quot;${elt}&quot;==&quot;un&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>Hourra</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</branch>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</if>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.619"/>
</iter>
<iter>
<var name="${elt}">deux</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<if>
<branch type="IF" condition="&quot;${elt}&quot;==&quot;un&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>Hourra</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</branch>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</if>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</iter>
<iter>
<var name="${elt}">trois</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<if>
<branch type="IF" condition="&quot;${elt}&quot;==&quot;un&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>Hourra</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</branch>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</if>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</iter>
<iter>
<var name="${elt}">quatre</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<if>
<branch type="IF" condition="&quot;${elt}&quot;==&quot;un&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>Hourra</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</branch>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</if>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</iter>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.619"/>
</for>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.619" endtime="20230922 16:07:36.619"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.618" endtime="20230922 16:07:36.620"/>
</test>
<test id="s1-s1-s1-t3" name="test du dictionnaire" line="29">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.620"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.620"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${monDict}[ville]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.620"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${monDict.nom}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.620"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.620"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.620"/>
</test>
<test id="s1-s1-s1-t4" name="test affichage global var" line="33">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.621"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.621"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>var glob:${maListe2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.620" endtime="20230922 16:07:36.621"/>
</test>
<test id="s1-s1-s1-t5" name="test des mot cles" line="35">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<kw name="mot clef simple" library="bibli">
<kw name="Log To Console" library="BuiltIn">
<arg>pas de problèmes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<kw name="Mot clef complexe" library="bibli">
<var>${sortie}</var>
<arg>hello</arg>
<arg>world</arg>
<doc>ceci est un mot cle propriétaire</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>${arg1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${arg2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<msg timestamp="20230922 16:07:36.621" level="INFO">${sortie} = hello</msg>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>sortie :${sortie}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.621"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<doc>cas de test 1</doc>
<status status="PASS" starttime="20230922 16:07:36.621" endtime="20230922 16:07:36.622"/>
</test>
<test id="s1-s1-s1-t6" name="test 2" line="40">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>test2</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<doc>cas de test 2</doc>
<tag>regression</tag>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</test>
<test id="s1-s1-s1-t7" name="Affichage repertoire" line="45">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${EXECDIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}/Users/dominiquemereaux/code/TPSEPT2023/Basic</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.622"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${TEMPDIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.623"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.623"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.622" endtime="20230922 16:07:36.623"/>
</test>
<test id="s1-s1-s1-t8" name="variable predefinies" line="49">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.623"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.623"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>bonjour${SPACE}${SPACE}toto</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>80</arg>
<arg>${80}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230922 16:07:36.623" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.623"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.623"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.623"/>
</test>
<test id="s1-s1-s1-t9" name="test du statut" line="54">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.624"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.624"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${TEST NAME}:${PREV_TEST_STATUS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>bonjour</arg>
<arg>INFO</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:07:36.624" level="INFO">bonjour</msg>
<status status="PASS" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>il y a un pb</arg>
<arg>ERROR</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:07:36.624" level="ERROR">il y a un pb</msg>
<status status="PASS" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.624"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.624"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.623" endtime="20230922 16:07:36.624"/>
</test>
<test id="s1-s1-s1-t10" name="verification tarif RATP" line="59">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.624"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.624"/>
</kw>
<kw name="verification" library="bibli">
<arg>12</arg>
<arg>demi tarif</arg>
<kw name="Calcul Tarif" library="calcul_tarif">
<var>${prix}</var>
<arg>${age}</arg>
<msg timestamp="20230922 16:07:36.624" level="INFO">${prix} = plein tarif</msg>
<status status="PASS" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.624"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230922 16:07:36.625" level="FAIL">test avec 12 en échec: demi tarif != plein tarif</msg>
<status status="FAIL" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.625"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.625"/>
</kw>
<kw name="verification" library="bibli">
<arg>11</arg>
<arg>demi tarif</arg>
<kw name="Calcul Tarif" library="calcul_tarif">
<var>${prix}</var>
<arg>${age}</arg>
<msg timestamp="20230922 16:07:36.625" level="INFO">${prix} = demi tarif</msg>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<kw name="verification" library="bibli">
<arg>4</arg>
<arg>demi tarif</arg>
<kw name="Calcul Tarif" library="calcul_tarif">
<var>${prix}</var>
<arg>${age}</arg>
<msg timestamp="20230922 16:07:36.625" level="INFO">${prix} = demi tarif</msg>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<kw name="verification" library="bibli">
<arg>2</arg>
<arg>demi tarif</arg>
<kw name="Calcul Tarif" library="calcul_tarif">
<var>${prix}</var>
<arg>${age}</arg>
<msg timestamp="20230922 16:07:36.625" level="INFO">${prix} = demi tarif</msg>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.625" endtime="20230922 16:07:36.625"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<kw name="fin de test" library="bibli">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} fin de test en :${TEST STATUS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:36.624" endtime="20230922 16:07:36.626">test avec 12 en échec: demi tarif != plein tarif</status>
</test>
<test id="s1-s1-s1-t11" name="test a skipper" line="66">
<kw name="debut de test" library="bibli" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>${\n} debut du test</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<kw name="Skip If" library="BuiltIn">
<arg>"${PREV TEST STATUS}"=="FAIL"</arg>
<doc>Skips the rest of the current test if the ``condition`` is True.</doc>
<msg timestamp="20230922 16:07:36.626" level="SKIP">"FAIL"=="FAIL"</msg>
<status status="SKIP" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>test non skippé</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="TEARDOWN">
<arg>fin de test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626"/>
</kw>
<status status="SKIP" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.626">"FAIL"=="FAIL"</status>
</test>
<kw name="Log To Console" library="BuiltIn" type="TEARDOWN">
<arg>fin de suite</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.626" endtime="20230922 16:07:36.627"/>
</kw>
<doc>Ma suite qui fait pas grand chose</doc>
<status status="FAIL" starttime="20230922 16:07:36.615" endtime="20230922 16:07:36.627"/>
</suite>
<suite id="s1-s1-s2" name="testVariabilise" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/testVariabilise.robot">
<test id="s1-s1-s2-t1" name="test avec 12 ans" line="8">
<kw name="verification" library="bibli">
<arg>12</arg>
<arg>plein tarif</arg>
<kw name="Calcul Tarif" library="calcul_tarif">
<var>${prix}</var>
<arg>${age}</arg>
<msg timestamp="20230922 16:07:36.628" level="INFO">${prix} = plein tarif</msg>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</test>
<test id="s1-s1-s2-t2" name="Test avec 6 ans" line="9">
<kw name="verification" library="bibli">
<arg>6</arg>
<arg>demi tarif</arg>
<kw name="Calcul Tarif" library="calcul_tarif">
<var>${prix}</var>
<arg>${age}</arg>
<msg timestamp="20230922 16:07:36.628" level="INFO">${prix} = demi tarif</msg>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tarif}</arg>
<arg>${prix}</arg>
<arg>test avec ${age} en échec</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.628" endtime="20230922 16:07:36.628"/>
</test>
<doc>Ma suite qui fait pas grand chose</doc>
<status status="PASS" starttime="20230922 16:07:36.627" endtime="20230922 16:07:36.628"/>
</suite>
<suite id="s1-s1-s3" name="UtilisationDialogs" source="/Users/dominiquemereaux/code/TPSEPT2023/Basic/UtilisationDialogs.robot">
<test id="s1-s1-s3-t1" name="au hasard" line="8">
<kw name="Generate Random String" library="String">
<var>${x}</var>
<arg>1</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230922 16:07:36.675" level="INFO">${x} = 3</msg>
<status status="PASS" starttime="20230922 16:07:36.675" endtime="20230922 16:07:36.675"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${x}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:36.675" endtime="20230922 16:07:36.675"/>
</kw>
<status status="PASS" starttime="20230922 16:07:36.675" endtime="20230922 16:07:36.675"/>
</test>
<test id="s1-s1-s3-t2" name="essai" line="11">
<kw name="Execute Manual Step" library="Dialogs">
<arg>verifier</arg>
<doc>Pauses execution until user sets the keyword status.</doc>
<msg timestamp="20230922 16:07:43.209" level="FAIL">yfkuyh</msg>
<status status="FAIL" starttime="20230922 16:07:36.675" endtime="20230922 16:07:43.209"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:36.675" endtime="20230922 16:07:43.209">yfkuyh</status>
</test>
<test id="s1-s1-s3-t3" name="essai 2" line="13">
<kw name="Get Selections From User" library="Dialogs">
<var>@{users}</var>
<arg>Select users</arg>
<arg>user1</arg>
<arg>user2</arg>
<arg>admin</arg>
<doc>Pauses execution and asks user to select multiple values.</doc>
<msg timestamp="20230922 16:07:45.575" level="INFO">@{users} = [ user1 ]</msg>
<status status="PASS" starttime="20230922 16:07:43.210" endtime="20230922 16:07:45.575"/>
</kw>
<for flavor="IN">
<var>${elt}</var>
<value>@{users}</value>
<iter>
<var name="${elt}">user1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:45.576" endtime="20230922 16:07:45.576"/>
</kw>
<status status="PASS" starttime="20230922 16:07:45.576" endtime="20230922 16:07:45.576"/>
</iter>
<status status="PASS" starttime="20230922 16:07:45.575" endtime="20230922 16:07:45.576"/>
</for>
<kw name="Take Screenshot" library="Screenshot">
<arg>toto.jpg</arg>
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<msg timestamp="20230922 16:07:45.756" level="INFO" html="true">&lt;a href="toto.jpg"&gt;&lt;img src="toto.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230922 16:07:45.576" endtime="20230922 16:07:45.756"/>
</kw>
<status status="PASS" starttime="20230922 16:07:43.210" endtime="20230922 16:07:45.756"/>
</test>
<status status="FAIL" starttime="20230922 16:07:36.629" endtime="20230922 16:07:45.756"/>
</suite>
<status status="FAIL" starttime="20230922 16:07:36.614" endtime="20230922 16:07:45.757"/>
</suite>
<suite id="s1-s2" name="Rest" source="/Users/dominiquemereaux/code/TPSEPT2023/rest">
<suite id="s1-s2-s1" name="chuckNorris" source="/Users/dominiquemereaux/code/TPSEPT2023/rest/chuckNorris.robot">
<test id="s1-s2-s1-t1" name="blague test" line="7">
<kw name="Ouvrir session" library="chuckMotCle" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>chuck</arg>
<arg>${CHUCKENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230922 16:07:45.841" level="INFO">Creating Session using : alias=chuck, url=https://api.chucknorris.io, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230922 16:07:45.841" endtime="20230922 16:07:45.841"/>
</kw>
<status status="PASS" starttime="20230922 16:07:45.841" endtime="20230922 16:07:45.841"/>
</kw>
<kw name="recuperer une blague" library="chuckMotCle">
<var>${blague}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.001" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random 
 path_url=/jokes/random 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.001" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=3ftSA7flDcAR%2Bx9k9wdX%2FzEJfhYMxAAoreRbS4D5go3WkrLQoSnLp5yXuOf1fxP7Nekou1pyKd9yWpmeBOYNeyAYLf9XTgMWkoQUKN%2BPWggdwco8nxZpd9WCIaVzrydVxs0GHfU%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1db7ffa00369-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":[],"created_at":"2020-01-05 13:42:25.352697","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"yLbnMkKyQPihjC6uoOqnHQ","updated_at":"2020-01-05 13:42:25.352697","url":"https://api.chucknorris.io/jokes/yLbnMkKyQPihjC6uoOqnHQ","value":"When Chuck Norris goes in for a physical, the doctor is too afraid to get close enough for an examination, so he.examines from afar, grading him on his overall physical appearence, which of course, is always perfect."} 
 </msg>
<msg timestamp="20230922 16:07:46.002" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:45.841" endtime="20230922 16:07:46.002"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${resp2}</var>
<arg>${resp.json()}</arg>
<arg>$.value</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230922 16:07:46.022" level="INFO">${resp2} = ['When Chuck Norris goes in for a physical, the doctor is too afraid to get close enough for an examination, so he.examines from afar, grading him on his overall physical appearence, which of course, ...</msg>
<status status="PASS" starttime="20230922 16:07:46.002" endtime="20230922 16:07:46.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resp.json()}[value]</arg>
<arg>${resp2}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230922 16:07:46.023" endtime="20230922 16:07:46.023"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${resp3}</var>
<arg>${resp.json()}</arg>
<arg>value</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230922 16:07:46.023" level="INFO">${resp3} = When Chuck Norris goes in for a physical, the doctor is too afraid to get close enough for an examination, so he.examines from afar, grading him on his overall physical appearence, which of course, is...</msg>
<status status="PASS" starttime="20230922 16:07:46.023" endtime="20230922 16:07:46.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resp.json()}[value]</arg>
<arg>${resp3}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230922 16:07:46.023" endtime="20230922 16:07:46.023"/>
</kw>
<kw name="Load Json From File" library="JSONLibrary">
<var>${result}</var>
<arg>toto.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230922 16:07:46.024" level="INFO">${result} = {'categories': [], 'created_at': '2020-01-05 13:42:25.905626', 'icon_url': 'https://assets.chucknorris.host/img/avatar/chuck-norris.png', 'id': 'aEnwblrcTvK3FeWwHZCVrw', 'updated_at': '2020-01-05 13:4...</msg>
<status status="PASS" starttime="20230922 16:07:46.024" endtime="20230922 16:07:46.024"/>
</kw>
<msg timestamp="20230922 16:07:46.024" level="INFO">${blague} = When Chuck Norris goes in for a physical, the doctor is too afraid to get close enough for an examination, so he.examines from afar, grading him on his overall physical appearence, which of course, is...</msg>
<status status="PASS" starttime="20230922 16:07:45.841" endtime="20230922 16:07:46.024"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.024" endtime="20230922 16:07:46.024"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.024" endtime="20230922 16:07:46.024"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.024" endtime="20230922 16:07:46.025"/>
</kw>
<kw name="fermer session" library="chuckMotCle" type="TEARDOWN">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20230922 16:07:46.025" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20230922 16:07:46.025" endtime="20230922 16:07:46.025"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.025" endtime="20230922 16:07:46.025"/>
</kw>
<status status="PASS" starttime="20230922 16:07:45.841" endtime="20230922 16:07:46.025"/>
</test>
<test id="s1-s2-s1-t2" name="blague dans fichier" line="12">
<kw name="Ouvrir session" library="chuckMotCle" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>chuck</arg>
<arg>${CHUCKENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230922 16:07:46.025" level="INFO">Creating Session using : alias=chuck, url=https://api.chucknorris.io, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230922 16:07:46.025" endtime="20230922 16:07:46.025"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.025" endtime="20230922 16:07:46.025"/>
</kw>
<kw name="dump resp" library="chuckMotCle">
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.156" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random 
 path_url=/jokes/random 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.156" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=o55pzZnVT1%2F7jrm3mpKQJRF%2FY5dPICc2dcuGzGtxJTjbHV0uAp1OlZ5PSoB5cFgOL6JdKAodwaOrqoTOD0tO2P%2FL0MaXdRZ0Fsw5d1m9RC0JlwcSR6hFVa3BPA%2Fw2HWN3TL682Q%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1db8f96501cc-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":[],"created_at":"2020-01-05 13:42:23.880601","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"5kEgY2lJRNCpxgTdwpTWRg","updated_at":"2020-01-05 13:42:23.880601","url":"https://api.chucknorris.io/jokes/5kEgY2lJRNCpxgTdwpTWRg","value":"When Chuck Norris goes to the museum, the exhibits aren't allowed to touch Chuck."} 
 </msg>
<msg timestamp="20230922 16:07:46.156" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.026" endtime="20230922 16:07:46.156"/>
</kw>
<kw name="Dump Json To File" library="JSONLibrary">
<arg>toto.json</arg>
<arg>${resp.json()}</arg>
<doc>Dump JSON to file</doc>
<status status="PASS" starttime="20230922 16:07:46.156" endtime="20230922 16:07:46.157"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.025" endtime="20230922 16:07:46.157"/>
</kw>
<kw name="fermer session" library="chuckMotCle" type="TEARDOWN">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20230922 16:07:46.158" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20230922 16:07:46.157" endtime="20230922 16:07:46.158"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.157" endtime="20230922 16:07:46.158"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.025" endtime="20230922 16:07:46.158"/>
</test>
<test id="s1-s2-s1-t3" name="blague animal" line="15">
<kw name="Ouvrir session" library="chuckMotCle" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>chuck</arg>
<arg>${CHUCKENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230922 16:07:46.158" level="INFO">Creating Session using : alias=chuck, url=https://api.chucknorris.io, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230922 16:07:46.158" endtime="20230922 16:07:46.158"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.158" endtime="20230922 16:07:46.158"/>
</kw>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>animal</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.289" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.289" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=aodkMw0NFPaLoRXoqs3ZuMTqyBpw4i4RW21v6DbCTT4%2BXlkE%2FipW9LbMcZ21hSnW226KNwO4yWEv5Qd9n5L6COG7BMMNIR1sB6rFgVLHSBeSc0jG69yX%2FW3spROE7Pku%2F6mi75w%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1db9dba702db-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"o-vfxwx6rgecuo_f5cecpq","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/o-vfxwx6rgecuo_f5cecpq","value":"They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them."} 
 </msg>
<msg timestamp="20230922 16:07:46.289" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.159" endtime="20230922 16:07:46.289"/>
</kw>
<msg timestamp="20230922 16:07:46.290" level="INFO">${blague} = They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them.</msg>
<status status="PASS" starttime="20230922 16:07:46.158" endtime="20230922 16:07:46.290"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.291" endtime="20230922 16:07:46.291"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.291" endtime="20230922 16:07:46.296"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.291" endtime="20230922 16:07:46.296"/>
</kw>
<kw name="fermer session" library="chuckMotCle" type="TEARDOWN">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20230922 16:07:46.297" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20230922 16:07:46.297" endtime="20230922 16:07:46.297"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.296" endtime="20230922 16:07:46.297"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.158" endtime="20230922 16:07:46.297"/>
</test>
<test id="s1-s2-s1-t4" name="afficher et contrôler une blague de chaque catégorie" line="20">
<kw name="Ouvrir session" library="chuckMotCle" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>chuck</arg>
<arg>${CHUCKENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230922 16:07:46.298" level="INFO">Creating Session using : alias=chuck, url=https://api.chucknorris.io, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230922 16:07:46.298" endtime="20230922 16:07:46.298"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.298" endtime="20230922 16:07:46.298"/>
</kw>
<kw name="recupérer les categories" library="chuckMotCle">
<var>@{liste}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${CATEGORIES}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.433" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/categories 
 path_url=/jokes/categories 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.433" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/categories 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=BsBNtTAfNg4qmmjrs%2FmUFGRVB45mhZmM%2FYak%2Bmmrp4U1DwrvmwEcCQehk7HAKUtO3i22YC%2FNyv1igQ0g4XcQkpJZGPzy6XXAYHoluF20J3MYv8%2Fxzlg1a%2FUMVU%2B%2FzCewAXtwCGo%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbabc07017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body=["animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel"] 
 </msg>
<msg timestamp="20230922 16:07:46.436" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.299" endtime="20230922 16:07:46.436"/>
</kw>
<msg timestamp="20230922 16:07:46.436" level="INFO">@{liste} = [ animal | career | celebrity | dev | explicit | fashion | food | history | money | movie | music | political | religion | science | sport | travel ]</msg>
<status status="PASS" starttime="20230922 16:07:46.299" endtime="20230922 16:07:46.436"/>
</kw>
<for flavor="IN">
<var>${cat}</var>
<value>@{liste}</value>
<iter>
<var name="${cat}">animal</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.484" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=animal 
 path_url=/jokes/random?category=animal 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.484" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=animal 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=LOW%2BoUf3vBbc9LVd%2BNL8sPrvGRyEEjyh5zPifWJEjED%2BqBaSoLNrUVHMsCHQoftUlj6nNL1tXlEzAJD91QELcoZQjN%2FpWaQ7F84FuxpIto8j4A5434bAJBlyDTi522spQBa8R88%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbb5cd5017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["animal"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"o-vfxwx6rgecuo_f5cecpq","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/o-vfxwx6rgecuo_f5cecpq","value":"They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them."} 
 </msg>
<msg timestamp="20230922 16:07:46.484" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.437" endtime="20230922 16:07:46.484"/>
</kw>
<msg timestamp="20230922 16:07:46.485" level="INFO">${blague} = They say curiosity killed the cat. This is false. Chuck Norris killed the cat. Every single one of them.</msg>
<status status="PASS" starttime="20230922 16:07:46.437" endtime="20230922 16:07:46.485"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.485" endtime="20230922 16:07:46.485"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.486" endtime="20230922 16:07:46.486"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.485" endtime="20230922 16:07:46.486"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.437" endtime="20230922 16:07:46.486"/>
</iter>
<iter>
<var name="${cat}">career</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.530" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=career 
 path_url=/jokes/random?category=career 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.530" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=career 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=3TPdv9ZYbgSThje9kUxsLse54aK2HByABDUzDExzcjFrU1jJOgkABjqhBVrJEIhmrMP6p4%2BX3nSWe28tUkddKC37NCy1XiRG1iWGHVmaHzLaDKSqfJRscR4pnowVDv5Br8xKdLU%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbbad48017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["career"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"cwguxfhptcuagndjdt1hya","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/cwguxfhptcuagndjdt1hya","value":"In the beginning there was nothing...then Chuck Norris Roundhouse kicked that nothing in the face and said \"Get a job\". That is the story of the universe."} 
 </msg>
<msg timestamp="20230922 16:07:46.530" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.486" endtime="20230922 16:07:46.530"/>
</kw>
<msg timestamp="20230922 16:07:46.531" level="INFO">${blague} = In the beginning there was nothing...then Chuck Norris Roundhouse kicked that nothing in the face and said "Get a job". That is the story of the universe.</msg>
<status status="PASS" starttime="20230922 16:07:46.486" endtime="20230922 16:07:46.531"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.531" endtime="20230922 16:07:46.531"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.531" endtime="20230922 16:07:46.531"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.531" endtime="20230922 16:07:46.531"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.486" endtime="20230922 16:07:46.531"/>
</iter>
<iter>
<var name="${cat}">celebrity</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.571" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 path_url=/jokes/random?category=celebrity 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.571" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=celebrity 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=pvXtiOTFQF7B4VfbAErSVev3vIVWUWIACYRkAc6r7XBaqr%2Bd03JYDnemTEG9xdvYTBUfGtNChMNQqgTOtTs2XipoKaUVYH0r%2FXVkefESuN215VtMmis9lgHPv%2BNzkmpEyjSiFp4%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbbfdaa017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["celebrity"],"created_at":"2020-01-05 13:42:29.855523","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"OcCjQO91SDy_p83n9R2HSw","updated_at":"2020-01-05 13:42:29.855523","url":"https://api.chucknorris.io/jokes/OcCjQO91SDy_p83n9R2HSw","value":"Chuck Norris only let's Charlie Sheen think he is winning. Chuck won a long time ago."} 
 </msg>
<msg timestamp="20230922 16:07:46.571" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.531" endtime="20230922 16:07:46.571"/>
</kw>
<msg timestamp="20230922 16:07:46.571" level="INFO">${blague} = Chuck Norris only let's Charlie Sheen think he is winning. Chuck won a long time ago.</msg>
<status status="PASS" starttime="20230922 16:07:46.531" endtime="20230922 16:07:46.571"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.571" endtime="20230922 16:07:46.571"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.571" endtime="20230922 16:07:46.571"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.571" endtime="20230922 16:07:46.571"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.531" endtime="20230922 16:07:46.571"/>
</iter>
<iter>
<var name="${cat}">dev</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.613" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=dev 
 path_url=/jokes/random?category=dev 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.613" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=dev 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=DkYKJsf%2FkOA8mONbAcEef%2FgK2f1lM6XCeKwImbMKHePhSWcvVc1sImBOAl%2BRaPJkBiJ%2FmyTVkCPjILWVpaA2PlLdfkuasTx7d2b90HRfXZtoOBJIDJSQHmg658bqLM3GCNH%2FVx0%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbc3df0017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["dev"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"c4dlzikztk-vqqvhbzdqyg","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/c4dlzikztk-vqqvhbzdqyg","value":"All arrays Chuck Norris declares are of infinite size, because Chuck Norris knows no bounds."} 
 </msg>
<msg timestamp="20230922 16:07:46.614" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.572" endtime="20230922 16:07:46.614"/>
</kw>
<msg timestamp="20230922 16:07:46.614" level="INFO">${blague} = All arrays Chuck Norris declares are of infinite size, because Chuck Norris knows no bounds.</msg>
<status status="PASS" starttime="20230922 16:07:46.571" endtime="20230922 16:07:46.614"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.614" endtime="20230922 16:07:46.615"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.615" endtime="20230922 16:07:46.615"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.615" endtime="20230922 16:07:46.615"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.571" endtime="20230922 16:07:46.615"/>
</iter>
<iter>
<var name="${cat}">explicit</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.654" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=explicit 
 path_url=/jokes/random?category=explicit 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.654" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=explicit 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=XyuV72brawId46LCZ13RD9ch9Ck5hcJTWijbF6fESTKVtEmN60UDu60CuHc8v58nzPwdHdozvWpUilcThaeAT87lvvciDm8JsUZgwHAqPH2UeEi7lXKuJULjLvml%2FDePza8iDY0%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbc7e52017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["explicit"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"0NR490f3SiGlqn469rr7bw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0NR490f3SiGlqn469rr7bw","value":"Chuck Norris does cock pushups for fun."} 
 </msg>
<msg timestamp="20230922 16:07:46.655" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.616" endtime="20230922 16:07:46.655"/>
</kw>
<msg timestamp="20230922 16:07:46.655" level="INFO">${blague} = Chuck Norris does cock pushups for fun.</msg>
<status status="PASS" starttime="20230922 16:07:46.615" endtime="20230922 16:07:46.655"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.655" endtime="20230922 16:07:46.655"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.655" endtime="20230922 16:07:46.655"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.655" endtime="20230922 16:07:46.655"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.615" endtime="20230922 16:07:46.655"/>
</iter>
<iter>
<var name="${cat}">fashion</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.693" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=fashion 
 path_url=/jokes/random?category=fashion 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.694" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=fashion 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=UJLfef8BGii4Js0%2FiqSiogaNof9bljkxj5U%2F0T4n00Sf7T5kEGBjrtIWALM25P2yyPXQYeLoyKfCh4bCDxNvUUbQXPU2K9%2FMaP1QEIHeglkpfx6lNNbecTSCXM28Bg3bJ%2BkIGIE%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbcbea3017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["fashion"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"0wdewlp2tz-mt_upesvrjw","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/0wdewlp2tz-mt_upesvrjw","value":"Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris."} 
 </msg>
<msg timestamp="20230922 16:07:46.694" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.655" endtime="20230922 16:07:46.694"/>
</kw>
<msg timestamp="20230922 16:07:46.694" level="INFO">${blague} = Chuck Norris does not follow fashion trends, they follow him. But then he turns around and kicks their ass. Nobody follows Chuck Norris.</msg>
<status status="PASS" starttime="20230922 16:07:46.655" endtime="20230922 16:07:46.694"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.695" endtime="20230922 16:07:46.695"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.695" endtime="20230922 16:07:46.695"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.695" endtime="20230922 16:07:46.695"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.655" endtime="20230922 16:07:46.695"/>
</iter>
<iter>
<var name="${cat}">food</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.733" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=food 
 path_url=/jokes/random?category=food 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.733" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=food 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=b2aINzmanH8zRsKvMbVV%2F6RRJfQiZDJiy7YZqNTXO%2FqvYXZ98x4JV6K1RSKSQM%2B%2FnCzT1%2Bb14IDT2rkTCoiTkMJgnpIchA9Gc47Z0xHSAIu8%2B%2B6pj8bmDmFMgFaZat4UBZjwx2Q%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbcfed9017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["food"],"created_at":"2020-01-05 13:42:18.823766","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"MjtEesffSd6AH3Pxbw7_lg","updated_at":"2020-01-05 13:42:18.823766","url":"https://api.chucknorris.io/jokes/MjtEesffSd6AH3Pxbw7_lg","value":"When Chuck Norris played Chopped from Food Network, he finished his food in 1 millisecond, and instantly wins every dish. You didn't see him play because the episode is secret."} 
 </msg>
<msg timestamp="20230922 16:07:46.734" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.695" endtime="20230922 16:07:46.734"/>
</kw>
<msg timestamp="20230922 16:07:46.734" level="INFO">${blague} = When Chuck Norris played Chopped from Food Network, he finished his food in 1 millisecond, and instantly wins every dish. You didn't see him play because the episode is secret.</msg>
<status status="PASS" starttime="20230922 16:07:46.695" endtime="20230922 16:07:46.734"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.734" endtime="20230922 16:07:46.734"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.734" endtime="20230922 16:07:46.734"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.734" endtime="20230922 16:07:46.734"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.695" endtime="20230922 16:07:46.734"/>
</iter>
<iter>
<var name="${cat}">history</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.773" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=history 
 path_url=/jokes/random?category=history 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.773" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=history 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=TBicPymZ6LnN54NVmgBACibdTIsmgWZbTd4CUohptUCipOV%2BSI5DSizlhMIpflg5WYWMKAWWS%2FVS80QoeKQmkXsEam93iY8Vr7AtNWxR7wEoD8zmGBc4KcFsodg2bshXuUvX%2BBk%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbd3f1e017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["history"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"vxmg5zgusq6ra35ns4e5sw","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/vxmg5zgusq6ra35ns4e5sw","value":"After returning from World War 2 unscrathed, Bob Dole was congratulated by Chuck Norris with a handshake. The rest is history."} 
 </msg>
<msg timestamp="20230922 16:07:46.773" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.734" endtime="20230922 16:07:46.773"/>
</kw>
<msg timestamp="20230922 16:07:46.774" level="INFO">${blague} = After returning from World War 2 unscrathed, Bob Dole was congratulated by Chuck Norris with a handshake. The rest is history.</msg>
<status status="PASS" starttime="20230922 16:07:46.734" endtime="20230922 16:07:46.774"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.774" endtime="20230922 16:07:46.774"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.775" endtime="20230922 16:07:46.775"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.774" endtime="20230922 16:07:46.775"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.734" endtime="20230922 16:07:46.775"/>
</iter>
<iter>
<var name="${cat}">money</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.811" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=money 
 path_url=/jokes/random?category=money 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.812" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=money 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=waMKtqGOzTSYn0YLeEwpRhJ1Cfr%2FZOe%2BXixVsIZD2XIP4Bb8Kl9CdllxUtEhrYN4P0mrcWVBqS89LGa5jQp78AzyFdKt0WJnhYC2PRoUv2sA2Klq94rSMQhbraoFxDee8GvbnB4%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbd7f64017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["money"],"created_at":"2020-01-05 13:42:28.664997","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"nfuwYYXLR_qQXu8uUthvww","updated_at":"2020-05-22 06:16:41.133769","url":"https://api.chucknorris.io/jokes/nfuwYYXLR_qQXu8uUthvww","value":"Panhandlers give Chuck Norris money."} 
 </msg>
<msg timestamp="20230922 16:07:46.812" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.775" endtime="20230922 16:07:46.812"/>
</kw>
<msg timestamp="20230922 16:07:46.812" level="INFO">${blague} = Panhandlers give Chuck Norris money.</msg>
<status status="PASS" starttime="20230922 16:07:46.775" endtime="20230922 16:07:46.812"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.812" endtime="20230922 16:07:46.813"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.813" endtime="20230922 16:07:46.813"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.813" endtime="20230922 16:07:46.813"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.775" endtime="20230922 16:07:46.813"/>
</iter>
<iter>
<var name="${cat}">movie</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.864" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=movie 
 path_url=/jokes/random?category=movie 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.864" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=movie 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=yFEsip4BGVeouN93vQwTd%2FvsDG%2F0Tlth4q4%2FHNC2EmMhfTazQuIHnjgCIyKOpIYh8xbVqTZv4SBYKTrk9XYwymwTVXF9EwwkpO%2FV3Rpildb6c%2B6Z5A7JbZ8udZ6YQiwB37LWxqg%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbdbfb5017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["movie"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"yfo2yjqlsrc5ksiimbpqig","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/yfo2yjqlsrc5ksiimbpqig","value":"In the first Jurassic Park movie, the Tyrannosaurus Rex wasn't chasing the jeep. Chuck Norris was chasing the Tyrannosaurus AND the jeep."} 
 </msg>
<msg timestamp="20230922 16:07:46.864" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.814" endtime="20230922 16:07:46.864"/>
</kw>
<msg timestamp="20230922 16:07:46.865" level="INFO">${blague} = In the first Jurassic Park movie, the Tyrannosaurus Rex wasn't chasing the jeep. Chuck Norris was chasing the Tyrannosaurus AND the jeep.</msg>
<status status="PASS" starttime="20230922 16:07:46.813" endtime="20230922 16:07:46.865"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.865" endtime="20230922 16:07:46.865"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.867" endtime="20230922 16:07:46.867"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.866" endtime="20230922 16:07:46.867"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.813" endtime="20230922 16:07:46.867"/>
</iter>
<iter>
<var name="${cat}">music</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.909" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=music 
 path_url=/jokes/random?category=music 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.909" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=music 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=VfOAjWqTKZpxehA1mKIxj9zGG6JVsyBxCfif0TpJz0iByieh%2Be7hWa0MGZ037OVfOF067n%2BTfTy5CFe9QH1BRXCPOYlYS66RZGTzaXZ3mXDPbmdyOCxuOLhHTr4%2BFy%2FBt0QZ5cg%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbe0818017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["music"],"created_at":"2020-01-05 13:42:19.104863","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"hd0l0jcrtwyjcjgmr7timw","updated_at":"2020-01-05 13:42:19.104863","url":"https://api.chucknorris.io/jokes/hd0l0jcrtwyjcjgmr7timw","value":"Chuck Norris can touch MC Hammer."} 
 </msg>
<msg timestamp="20230922 16:07:46.909" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.868" endtime="20230922 16:07:46.909"/>
</kw>
<msg timestamp="20230922 16:07:46.910" level="INFO">${blague} = Chuck Norris can touch MC Hammer.</msg>
<status status="PASS" starttime="20230922 16:07:46.867" endtime="20230922 16:07:46.910"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.910" endtime="20230922 16:07:46.910"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.911" endtime="20230922 16:07:46.911"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.910" endtime="20230922 16:07:46.911"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.867" endtime="20230922 16:07:46.911"/>
</iter>
<iter>
<var name="${cat}">political</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.948" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=political 
 path_url=/jokes/random?category=political 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.948" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=political 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:46 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ywhIcY6UuZDMMsppu9li1xN%2FATlTsbBty4z38cCjLhSbnrUPp9r1hY1ry1k2Xtbja%2BzsEa3EduThWCw%2BoTbMpW9lMbqE3%2Fm5RQnM%2BwGyxF0xQl35tUJ2WEK6MVBL4xgdIUsMitU%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbe586f017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["political"],"created_at":"2020-01-05 13:42:25.628594","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"IIkVw76ZRUqBwu-uln-RZA","updated_at":"2020-01-05 13:42:25.628594","url":"https://api.chucknorris.io/jokes/IIkVw76ZRUqBwu-uln-RZA","value":"Chuck Norris knows where Barack Obama was born."} 
 </msg>
<msg timestamp="20230922 16:07:46.948" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.911" endtime="20230922 16:07:46.948"/>
</kw>
<msg timestamp="20230922 16:07:46.948" level="INFO">${blague} = Chuck Norris knows where Barack Obama was born.</msg>
<status status="PASS" starttime="20230922 16:07:46.911" endtime="20230922 16:07:46.948"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.948" endtime="20230922 16:07:46.948"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.949" endtime="20230922 16:07:46.949"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.949" endtime="20230922 16:07:46.949"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.911" endtime="20230922 16:07:46.949"/>
</iter>
<iter>
<var name="${cat}">religion</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:46.987" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=religion 
 path_url=/jokes/random?category=religion 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:46.987" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=religion 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:47 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Wc0LP0OsAgvzrzfLzsC63eW3LD3EPNzk4oC2R1NTkx3LQ15sksOZAVNWiVc8nQWhfk2eIrHK6ia5%2F%2FYXHcy17gCnSmG66qZSwZeNqevFXY5xTVMYtW5nvRVCFm6GeERiBBbU9uE%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbe88b8017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["religion"],"created_at":"2020-01-05 13:42:23.484083","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"qTcPNQbLTxmaOMPfYKj9iQ","updated_at":"2020-01-05 13:42:23.484083","url":"https://api.chucknorris.io/jokes/qTcPNQbLTxmaOMPfYKj9iQ","value":"The Pope calls Chuck Norris \"Father.\""} 
 </msg>
<msg timestamp="20230922 16:07:46.987" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.949" endtime="20230922 16:07:46.987"/>
</kw>
<msg timestamp="20230922 16:07:46.987" level="INFO">${blague} = The Pope calls Chuck Norris "Father."</msg>
<status status="PASS" starttime="20230922 16:07:46.949" endtime="20230922 16:07:46.987"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:46.987" endtime="20230922 16:07:46.987"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:46.987" endtime="20230922 16:07:46.987"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.987" endtime="20230922 16:07:46.987"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.949" endtime="20230922 16:07:46.987"/>
</iter>
<iter>
<var name="${cat}">science</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:47.034" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=science 
 path_url=/jokes/random?category=science 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:47.035" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=science 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:47 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=wrojGWsnJEwlNHjHGNfSxa26%2Fa0Kp4ATKRVxb%2F4u%2B1hhfCo9M5%2FzXorpDm%2BGAIzo8ITNPFq385YBqIhQC%2BSgzrQSKMHPywKvJZcCXPO1otDyeLiTSgv7QyzWs%2F0oex%2FVXD3VdxU%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbec916017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["science"],"created_at":"2020-01-05 13:42:19.324003","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"q7x2yb1tspujmkwwdyqrsw","updated_at":"2020-01-05 13:42:19.324003","url":"https://api.chucknorris.io/jokes/q7x2yb1tspujmkwwdyqrsw","value":"Time waits for no man. Unless that man is Chuck Norris."} 
 </msg>
<msg timestamp="20230922 16:07:47.035" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:46.988" endtime="20230922 16:07:47.035"/>
</kw>
<msg timestamp="20230922 16:07:47.035" level="INFO">${blague} = Time waits for no man. Unless that man is Chuck Norris.</msg>
<status status="PASS" starttime="20230922 16:07:46.987" endtime="20230922 16:07:47.035"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:47.035" endtime="20230922 16:07:47.035"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:47.035" endtime="20230922 16:07:47.035"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.035" endtime="20230922 16:07:47.035"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.987" endtime="20230922 16:07:47.035"/>
</iter>
<iter>
<var name="${cat}">sport</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:47.081" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=sport 
 path_url=/jokes/random?category=sport 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:47.082" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=sport 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:47 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ykpoLOZWl1xAd7RdQLbbebYlG7R5SulKkjBItSufcz%2F%2B4JjhonN0FR48jsugI6FoXEwlNWZe2%2BvhXwFXj%2F%2BW9TmY447F3pjIdE8SxNlwr0iq%2FXH4mF%2BZY%2BrXqZDWrxP6eGpNz84%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbf1978017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["sport"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"7jwk7xbwrp-h-nw233wqmq","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/7jwk7xbwrp-h-nw233wqmq","value":"Chuck Norris used to play baseball. When Babe Ruth was hailed as the better player, Chuck Norris killed him with a baseball bat to the throat. Lou Gehrig got off easy."} 
 </msg>
<msg timestamp="20230922 16:07:47.082" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:47.035" endtime="20230922 16:07:47.082"/>
</kw>
<msg timestamp="20230922 16:07:47.083" level="INFO">${blague} = Chuck Norris used to play baseball. When Babe Ruth was hailed as the better player, Chuck Norris killed him with a baseball bat to the throat. Lou Gehrig got off easy.</msg>
<status status="PASS" starttime="20230922 16:07:47.035" endtime="20230922 16:07:47.083"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:47.083" endtime="20230922 16:07:47.083"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:47.083" endtime="20230922 16:07:47.084"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.083" endtime="20230922 16:07:47.084"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.035" endtime="20230922 16:07:47.084"/>
</iter>
<iter>
<var name="${cat}">travel</var>
<kw name="recuperer une blague de categorie:" library="chuckMotCle">
<var>${blague}</var>
<arg>${cat}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>chuck</arg>
<arg>${BLAGUEAUHASRD}</arg>
<arg>params=category=${categorie}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:47.140" level="INFO">GET Request : url=https://api.chucknorris.io/jokes/random?category=travel 
 path_url=/jokes/random?category=travel 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:47.140" level="INFO">GET Response : url=https://api.chucknorris.io/jokes/random?category=travel 
 status=200, reason=OK 
 headers={'Date': 'Fri, 22 Sep 2023 14:07:47 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=uhFrd1Ko%2F3CnLfcDhXKY8VNUFMpHHxC5p5%2FuEyTqmo996TWN53KqkfjpChBHcIbZQjzMyaw9hfraV5nwZ2O3YCWWUh0fsXH%2B8qukIZDDpWionpultRHTF56fihlJdJy52QaOdM0%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '80ab1dbf69e5017d-CDG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"categories":["travel"],"created_at":"2020-01-05 13:42:19.576875","icon_url":"https://assets.chucknorris.host/img/avatar/chuck-norris.png","id":"8l-mg2v1s-kz1p6uz5mdmg","updated_at":"2020-01-05 13:42:19.576875","url":"https://api.chucknorris.io/jokes/8l-mg2v1s-kz1p6uz5mdmg","value":"As an infant, Chuck Norris' parents gave him a toy hammer. He gave the world Stonehenge."} 
 </msg>
<msg timestamp="20230922 16:07:47.141" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:47.084" endtime="20230922 16:07:47.141"/>
</kw>
<msg timestamp="20230922 16:07:47.141" level="INFO">${blague} = As an infant, Chuck Norris' parents gave him a toy hammer. He gave the world Stonehenge.</msg>
<status status="PASS" starttime="20230922 16:07:47.084" endtime="20230922 16:07:47.141"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${blague}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:47.141" endtime="20230922 16:07:47.141"/>
</kw>
<kw name="vérifier chuck dans blague" library="chuckMotCle">
<arg>${blague}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${blague}</arg>
<arg>Chuck</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:07:47.142" endtime="20230922 16:07:47.142"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.141" endtime="20230922 16:07:47.142"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.084" endtime="20230922 16:07:47.142"/>
</iter>
<status status="PASS" starttime="20230922 16:07:46.437" endtime="20230922 16:07:47.142"/>
</for>
<kw name="fermer session" library="chuckMotCle" type="TEARDOWN">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20230922 16:07:47.142" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20230922 16:07:47.142" endtime="20230922 16:07:47.142"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.142" endtime="20230922 16:07:47.142"/>
</kw>
<status status="PASS" starttime="20230922 16:07:46.297" endtime="20230922 16:07:47.143"/>
</test>
<status status="PASS" starttime="20230922 16:07:45.758" endtime="20230922 16:07:47.143"/>
</suite>
<suite id="s1-s2-s2" name="Google" source="/Users/dominiquemereaux/code/TPSEPT2023/rest/google.robot">
<test id="s1-s2-s2-t1" name="test1" line="6">
<kw name="Ouvrir session" library="googleMotcle" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>google</arg>
<arg>${GOOGLEENDPOINT}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230922 16:07:47.149" level="INFO">Creating Session using : alias=google, url=http://maps.googleapis.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230922 16:07:47.148" endtime="20230922 16:07:47.149"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.148" endtime="20230922 16:07:47.149"/>
</kw>
<kw name="Faire une requete" library="googleMotcle">
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>google</arg>
<arg>${requete}</arg>
<arg>params=&amp;{params}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230922 16:07:47.174" level="INFO">GET Request : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 path_url=/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230922 16:07:47.174" level="INFO">GET Response : url=http://maps.googleapis.com/maps/api/geocode/xml?address=92120%2CFR+sensor%3Dfalse 
 status=200, reason=OK 
 headers={'Content-Type': 'application/xml; charset=UTF-8', 'Date': 'Fri, 22 Sep 2023 14:07:47 GMT', 'Pragma': 'no-cache', 'Expires': 'Fri, 01 Jan 1990 00:00:00 GMT', 'Cache-Control': 'no-cache, must-revalidate', 'Vary': 'Accept-Language', 'Access-Control-Allow-Origin': '*', 'Server': 'mafe', 'Content-Length': '300', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Server-Timing': 'gfet4t7; dur=5'} 
 body=&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;GeocodeResponse&gt;
 &lt;status&gt;REQUEST_DENIED&lt;/status&gt;
 &lt;error_message&gt;You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account&lt;/error_message&gt;
&lt;/GeocodeResponse&gt;
 
 </msg>
<msg timestamp="20230922 16:07:47.174" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230922 16:07:47.149" endtime="20230922 16:07:47.174"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${resp.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:47.174" endtime="20230922 16:07:47.174"/>
</kw>
<kw name="Parse Xml" library="XML">
<var>${structXML}</var>
<arg>${resp.content}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<msg timestamp="20230922 16:07:47.175" level="INFO">${structXML} = &lt;Element 'GeocodeResponse' at 0x130d668e0&gt;</msg>
<status status="PASS" starttime="20230922 16:07:47.174" endtime="20230922 16:07:47.175"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${structXML}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</kw>
<kw name="Element Text Should Be" library="XML">
<arg>${structXML}</arg>
<arg>REQUEST_DENIED</arg>
<arg>status</arg>
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</kw>
<kw name="Get Elements Texts" library="XML">
<var>@{liste}</var>
<arg>${structXML}</arg>
<arg>*</arg>
<doc>Returns text of all elements matching ``xpath`` as a list.</doc>
<msg timestamp="20230922 16:07:47.175" level="INFO">@{liste} = [ REQUEST_DENIED | You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account ]</msg>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</kw>
<for flavor="IN">
<var>${elt}</var>
<value>@{liste}</value>
<iter>
<var name="${elt}">REQUEST_DENIED</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</iter>
<iter>
<var name="${elt}">You must use an API key to authenticate each request to Google Maps Platform APIs. For additional information, please refer to http://g.co/dev/maps-no-account</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${elt}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</iter>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</for>
<status status="PASS" starttime="20230922 16:07:47.149" endtime="20230922 16:07:47.175"/>
</kw>
<kw name="fermer session" library="googleMotcle" type="TEARDOWN">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20230922 16:07:47.175" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.175" endtime="20230922 16:07:47.175"/>
</kw>
<status status="PASS" starttime="20230922 16:07:47.148" endtime="20230922 16:07:47.175"/>
</test>
<status status="PASS" starttime="20230922 16:07:47.143" endtime="20230922 16:07:47.176"/>
</suite>
<status status="PASS" starttime="20230922 16:07:45.757" endtime="20230922 16:07:47.176"/>
</suite>
<suite id="s1-s3" name="Web" source="/Users/dominiquemereaux/code/TPSEPT2023/web">
<suite id="s1-s3-s1" name="Recherche" source="/Users/dominiquemereaux/code/TPSEPT2023/web/recherche.robot">
<test id="s1-s3-s1-t1" name="recherche MUG" line="9">
<kw name="ouvrir prestashop" library="prestaMotcle" type="SETUP">
<kw name="Open Browser">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${PATH}</arg>
<msg timestamp="20230922 16:07:47.181" level="FAIL">No keyword with name 'Open Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.181" endtime="20230922 16:07:47.181"/>
</kw>
<kw name="Set Browser Implicit Wait">
<arg>5</arg>
<status status="NOT RUN" starttime="20230922 16:07:47.182" endtime="20230922 16:07:47.182"/>
</kw>
<kw name="Title Should Be">
<arg>monPrestashop</arg>
<status status="NOT RUN" starttime="20230922 16:07:47.182" endtime="20230922 16:07:47.182"/>
</kw>
<kw name="Bidon">
<status status="NOT RUN" starttime="20230922 16:07:47.183" endtime="20230922 16:07:47.183"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.180" endtime="20230922 16:07:47.183"/>
</kw>
<kw name="fermer prestashop" library="prestaMotcle" type="TEARDOWN">
<kw name="Close Browser">
<msg timestamp="20230922 16:07:47.185" level="FAIL">No keyword with name 'Close Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.184" endtime="20230922 16:07:47.185"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.183" endtime="20230922 16:07:47.185">No keyword with name 'Close Browser' found.</status>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.180" endtime="20230922 16:07:47.185">Setup failed:
No keyword with name 'Open Browser' found.

Also teardown failed:
No keyword with name 'Close Browser' found.</status>
</test>
<test id="s1-s3-s1-t2" name="recup options" line="15">
<kw name="ouvrir prestashop" library="prestaMotcle" type="SETUP">
<kw name="Open Browser">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${PATH}</arg>
<msg timestamp="20230922 16:07:47.186" level="FAIL">No keyword with name 'Open Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.186" endtime="20230922 16:07:47.186"/>
</kw>
<kw name="Set Browser Implicit Wait">
<arg>5</arg>
<status status="NOT RUN" starttime="20230922 16:07:47.187" endtime="20230922 16:07:47.187"/>
</kw>
<kw name="Title Should Be">
<arg>monPrestashop</arg>
<status status="NOT RUN" starttime="20230922 16:07:47.187" endtime="20230922 16:07:47.187"/>
</kw>
<kw name="Bidon">
<status status="NOT RUN" starttime="20230922 16:07:47.188" endtime="20230922 16:07:47.188"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.185" endtime="20230922 16:07:47.188"/>
</kw>
<kw name="fermer prestashop" library="prestaMotcle" type="TEARDOWN">
<kw name="Close Browser">
<msg timestamp="20230922 16:07:47.190" level="FAIL">No keyword with name 'Close Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.190" endtime="20230922 16:07:47.190"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.188" endtime="20230922 16:07:47.190">No keyword with name 'Close Browser' found.</status>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.185" endtime="20230922 16:07:47.190">Setup failed:
No keyword with name 'Open Browser' found.

Also teardown failed:
No keyword with name 'Close Browser' found.</status>
</test>
<test id="s1-s3-s1-t3" name="verifier presence menu" line="21">
<kw name="ouvrir prestashop" library="prestaMotcle" type="SETUP">
<kw name="Open Browser">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${PATH}</arg>
<msg timestamp="20230922 16:07:47.191" level="FAIL">No keyword with name 'Open Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.191" endtime="20230922 16:07:47.191"/>
</kw>
<kw name="Set Browser Implicit Wait">
<arg>5</arg>
<status status="NOT RUN" starttime="20230922 16:07:47.192" endtime="20230922 16:07:47.192"/>
</kw>
<kw name="Title Should Be">
<arg>monPrestashop</arg>
<status status="NOT RUN" starttime="20230922 16:07:47.192" endtime="20230922 16:07:47.192"/>
</kw>
<kw name="Bidon">
<status status="NOT RUN" starttime="20230922 16:07:47.193" endtime="20230922 16:07:47.193"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.190" endtime="20230922 16:07:47.193"/>
</kw>
<kw name="fermer prestashop" library="prestaMotcle" type="TEARDOWN">
<kw name="Close Browser">
<msg timestamp="20230922 16:07:47.194" level="FAIL">No keyword with name 'Close Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.194" endtime="20230922 16:07:47.194"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.193" endtime="20230922 16:07:47.194">No keyword with name 'Close Browser' found.</status>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.190" endtime="20230922 16:07:47.194">Setup failed:
No keyword with name 'Open Browser' found.

Also teardown failed:
No keyword with name 'Close Browser' found.</status>
</test>
<test id="s1-s3-s1-t4" name="Gestion des alertes" line="31">
<kw name="ouvrir W3C" library="prestaMotcle" type="SETUP">
<kw name="Open Browser">
<arg>${URL2}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${PATH}</arg>
<msg timestamp="20230922 16:07:47.195" level="FAIL">No keyword with name 'Open Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.195" endtime="20230922 16:07:47.195"/>
</kw>
<kw name="Set Browser Implicit Wait">
<arg>5</arg>
<status status="NOT RUN" starttime="20230922 16:07:47.196" endtime="20230922 16:07:47.196"/>
</kw>
<kw name="Maximize Browser Window">
<status status="NOT RUN" starttime="20230922 16:07:47.197" endtime="20230922 16:07:47.197"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.194" endtime="20230922 16:07:47.197"/>
</kw>
<kw name="fermer prestashop" library="prestaMotcle" type="TEARDOWN">
<kw name="Close Browser">
<msg timestamp="20230922 16:07:47.198" level="FAIL">No keyword with name 'Close Browser' found.</msg>
<status status="FAIL" starttime="20230922 16:07:47.198" endtime="20230922 16:07:47.198"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.197" endtime="20230922 16:07:47.198">No keyword with name 'Close Browser' found.</status>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.194" endtime="20230922 16:07:47.198">Setup failed:
No keyword with name 'Open Browser' found.

Also teardown failed:
No keyword with name 'Close Browser' found.</status>
</test>
<status status="FAIL" starttime="20230922 16:07:47.177" endtime="20230922 16:07:47.198"/>
</suite>
<suite id="s1-s3-s2" name="RechercheMultiple" source="/Users/dominiquemereaux/code/TPSEPT2023/web/RechercheMultiple.robot">
<test id="s1-s3-s2-t1" name="recherche MUG" line="9">
<kw name="ouvrir prestashop" library="prestaMotcle" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${PATH}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230922 16:07:47.261" level="INFO">Opening browser 'gc' to base url 'http://prestashop.qualifiez.fr/en/'.</msg>
<status status="PASS" starttime="20230922 16:07:47.261" endtime="20230922 16:07:49.555"/>
</kw>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<arg>5</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20230922 16:07:49.555" endtime="20230922 16:07:49.556"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>monPrestashop</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20230922 16:07:49.558" level="INFO">Page title is 'monPrestashop'.</msg>
<status status="PASS" starttime="20230922 16:07:49.556" endtime="20230922 16:07:49.558"/>
</kw>
<kw name="Bidon">
<msg timestamp="20230922 16:07:49.559" level="FAIL">No keyword with name 'Bidon' found.</msg>
<status status="FAIL" starttime="20230922 16:07:49.559" endtime="20230922 16:07:49.559"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.261" endtime="20230922 16:07:49.559"/>
</kw>
<kw name="fermer prestashop" library="prestaMotcle" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230922 16:07:49.559" endtime="20230922 16:07:49.625"/>
</kw>
<status status="PASS" starttime="20230922 16:07:49.559" endtime="20230922 16:07:49.625"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:47.260" endtime="20230922 16:07:49.625">Setup failed:
No keyword with name 'Bidon' found.</status>
</test>
<test id="s1-s3-s2-t2" name="recherche T-Shirt" line="9">
<kw name="ouvrir prestashop" library="prestaMotcle" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${PATH}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230922 16:07:49.626" level="INFO">Opening browser 'gc' to base url 'http://prestashop.qualifiez.fr/en/'.</msg>
<status status="PASS" starttime="20230922 16:07:49.626" endtime="20230922 16:07:51.531"/>
</kw>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<arg>5</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20230922 16:07:51.531" endtime="20230922 16:07:51.531"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>monPrestashop</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20230922 16:07:51.533" level="INFO">Page title is 'monPrestashop'.</msg>
<status status="PASS" starttime="20230922 16:07:51.531" endtime="20230922 16:07:51.533"/>
</kw>
<kw name="Bidon">
<msg timestamp="20230922 16:07:51.534" level="FAIL">No keyword with name 'Bidon' found.</msg>
<status status="FAIL" starttime="20230922 16:07:51.534" endtime="20230922 16:07:51.534"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:49.626" endtime="20230922 16:07:51.535"/>
</kw>
<kw name="fermer prestashop" library="prestaMotcle" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230922 16:07:51.535" endtime="20230922 16:07:51.600"/>
</kw>
<status status="PASS" starttime="20230922 16:07:51.535" endtime="20230922 16:07:51.600"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:49.625" endtime="20230922 16:07:51.600">Setup failed:
No keyword with name 'Bidon' found.</status>
</test>
<status status="FAIL" starttime="20230922 16:07:47.198" endtime="20230922 16:07:51.601"/>
</suite>
<suite id="s1-s3-s3" name="UtilLib" source="/Users/dominiquemereaux/code/TPSEPT2023/web/UtilLib.robot">
<test id="s1-s3-s3-t1" name="test du random" line="5">
<kw name="Repeat Keyword" library="BuiltIn">
<arg>10</arg>
<arg>hasard</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20230922 16:07:51.603" level="INFO">Repeating keyword, round 1/10.</msg>
<kw name="hasard">
<kw name="maLibPython.random inf 12">
<var>${x}</var>
<msg timestamp="20230922 16:07:51.604" level="FAIL">No keyword with name 'maLibPython.random inf 12' found.</msg>
<status status="FAIL" starttime="20230922 16:07:51.604" endtime="20230922 16:07:51.604"/>
</kw>
<if>
<branch type="IF" condition="${x} &gt; 12">
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230922 16:07:51.604" endtime="20230922 16:07:51.604"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:07:51.604" endtime="20230922 16:07:51.604"/>
</branch>
<status status="NOT RUN" starttime="20230922 16:07:51.604" endtime="20230922 16:07:51.604"/>
</if>
<status status="FAIL" starttime="20230922 16:07:51.603" endtime="20230922 16:07:51.604"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:51.603" endtime="20230922 16:07:51.604"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${random}</var>
<arg>random.randint(0, sys.maxsize)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230922 16:07:51.604" endtime="20230922 16:07:51.604"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${random}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 16:07:51.604" endtime="20230922 16:07:51.604"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${x}</var>
<arg>sys.maxsize</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230922 16:07:51.604" endtime="20230922 16:07:51.604"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${x}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 16:07:51.605" endtime="20230922 16:07:51.605"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:51.603" endtime="20230922 16:07:51.605">No keyword with name 'maLibPython.random inf 12' found.</status>
</test>
<test id="s1-s3-s3-t2" name="test addition" line="12">
<kw name="addition de chaine">
<var>${x}</var>
<arg>1</arg>
<arg>2</arg>
<msg timestamp="20230922 16:07:51.605" level="FAIL">No keyword with name 'addition de chaine' found.</msg>
<status status="FAIL" starttime="20230922 16:07:51.605" endtime="20230922 16:07:51.605"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${x}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 16:07:51.605" endtime="20230922 16:07:51.605"/>
</kw>
<status status="FAIL" starttime="20230922 16:07:51.605" endtime="20230922 16:07:51.605">No keyword with name 'addition de chaine' found.</status>
</test>
<status status="FAIL" starttime="20230922 16:07:51.601" endtime="20230922 16:07:51.606"/>
</suite>
<status status="FAIL" starttime="20230922 16:07:47.176" endtime="20230922 16:07:51.606"/>
</suite>
<status status="FAIL" starttime="20230922 16:07:36.608" endtime="20230922 16:07:51.606"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="10" skip="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">regression</stat>
</tag>
<suite>
<stat pass="18" fail="10" skip="1" id="s1" name="TPSEPT2023">TPSEPT2023</stat>
<stat pass="13" fail="2" skip="1" id="s1-s1" name="Basic">TPSEPT2023.Basic</stat>
<stat pass="9" fail="1" skip="1" id="s1-s1-s1" name="premierPas">TPSEPT2023.Basic.premierPas</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="testVariabilise">TPSEPT2023.Basic.testVariabilise</stat>
<stat pass="2" fail="1" skip="0" id="s1-s1-s3" name="UtilisationDialogs">TPSEPT2023.Basic.UtilisationDialogs</stat>
<stat pass="5" fail="0" skip="0" id="s1-s2" name="Rest">TPSEPT2023.Rest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="chuckNorris">TPSEPT2023.Rest.chuckNorris</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Google">TPSEPT2023.Rest.Google</stat>
<stat pass="0" fail="8" skip="0" id="s1-s3" name="Web">TPSEPT2023.Web</stat>
<stat pass="0" fail="4" skip="0" id="s1-s3-s1" name="Recherche">TPSEPT2023.Web.Recherche</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3-s2" name="RechercheMultiple">TPSEPT2023.Web.RechercheMultiple</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3-s3" name="UtilLib">TPSEPT2023.Web.UtilLib</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230922 16:07:36.624" level="ERROR">il y a un pb</msg>
<msg timestamp="20230922 16:07:47.178" level="ERROR">Error in file '/Users/dominiquemereaux/code/TPSEPT2023/web/recherche.robot' on line 2: Importing library 'maLib' failed: ModuleNotFoundError: No module named 'maLib'
Traceback (most recent call last):
  None
PYTHONPATH:
  /opt/homebrew/bin
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python311.zip
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/lib-dynload
  /opt/homebrew/lib/python3.11/site-packages
  /opt/homebrew/opt/python-tk@3.11/libexec</msg>
<msg timestamp="20230922 16:07:47.180" level="ERROR">Error in file '/Users/dominiquemereaux/code/TPSEPT2023/web/prestaMotcle.resource' on line 2: Importing library 'maLib' failed: ModuleNotFoundError: No module named 'maLib'
Traceback (most recent call last):
  None
PYTHONPATH:
  /opt/homebrew/bin
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python311.zip
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/lib-dynload
  /opt/homebrew/lib/python3.11/site-packages
  /opt/homebrew/opt/python-tk@3.11/libexec</msg>
<msg timestamp="20230922 16:07:47.256" level="ERROR">Error in file '/Users/dominiquemereaux/code/TPSEPT2023/web/prestaMotcle.resource' on line 2: Importing library 'maLib' failed: ModuleNotFoundError: No module named 'maLib'
Traceback (most recent call last):
  None
PYTHONPATH:
  /opt/homebrew/bin
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python311.zip
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/lib-dynload
  /opt/homebrew/lib/python3.11/site-packages
  /opt/homebrew/opt/python-tk@3.11/libexec</msg>
<msg timestamp="20230922 16:07:51.603" level="ERROR">Error in file '/Users/dominiquemereaux/code/TPSEPT2023/web/UtilLib.robot' on line 2: Importing library 'maLibPython' failed: ModuleNotFoundError: No module named 'maLibPython'
Traceback (most recent call last):
  None
PYTHONPATH:
  /opt/homebrew/bin
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python311.zip
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11
  /opt/homebrew/Cellar/python@3.11/3.11.5/Frameworks/Python.framework/Versions/3.11/lib/python3.11/lib-dynload
  /opt/homebrew/lib/python3.11/site-packages
  /opt/homebrew/opt/python-tk@3.11/libexec</msg>
</errors>
</robot>
